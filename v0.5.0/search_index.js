var documenterSearchIndex = {"docs":
[{"location":"MicrophysicsNonEq/#Microphysics-NonEquilibrium","page":"Non-equilibrium cloud formation","title":"Microphysics NonEquilibrium","text":"","category":"section"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"The MicrophysicsNonEq.jl module describes a bulk parameterization of   diffusion of water vapour on cloud droplets and cloud ice crystals   modeled as a relaxation to equilibrium.","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"The cloud microphysics variables are expressed as specific humidities:","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"q_tot - total water specific humidity,\nq_vap - water vapor specific humidity,\nq_liq - cloud water specific humidity,\nq_ice - cloud ice specific humidity,","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"Parameters used in the parameterization are defined in   CLIMAParameters.jl package. They consist of:","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"symbol definition units default value reference\ntau_cond_evap cloud water condensation/evaporation timescale s 10 \ntau_dep_sub cloud ice deposition/sublimation timescale s 10 ","category":"page"},{"location":"MicrophysicsNonEq/#Cloud-water-condensation/evaporation","page":"Non-equilibrium cloud formation","title":"Cloud water condensation/evaporation","text":"","category":"section"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"Condensation and evaporation of cloud liquid water is parameterized   as a relaxation to equilibrium value at the current time step.","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"beginequation\n  left fracd  q_liqdt right_cond evap =\n    fracq^eq_liq - q_liqtau_cond_evap\nendequation","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"where:","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"q^eq_liq - liquid water specific humidity in equilibrium,\nq_liq - liquid water specific humidity,\ntau_cond_evap - relaxation timescale.","category":"page"},{"location":"MicrophysicsNonEq/#Cloud-ice-deposition/sublimation","page":"Non-equilibrium cloud formation","title":"Cloud ice deposition/sublimation","text":"","category":"section"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"Deposition and sublimation of cloud ice is parameterized as   a relaxation to equilibrium value at the current time step.","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"beginequation\n  left fracd  q_icedt right_dep sub =\n    fracq^eq_ice - q_icetau_dep_sub\nendequation","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"where:","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"q^eq_ice - ice specific humidity in equilibrium,\nq_ice - ice specific humidity,\ntau_dep_sub - relaxation timescale.","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"note: Note\nBoth tau_cond_evap and tau_dep_sub are assumed constant here. It would be great to make the relaxation time a function of available condensation nuclei, turbulence intensity, etc. See works by prof Raymond Shaw for hints. In particular, Neel Desai, KK Chandrakar, G Kinney, W Cantrell, RA Shaw (2019).","category":"page"},{"location":"Microphysics0M/#Microphysics-0M","page":"0-moment precipitation microphysics","title":"Microphysics 0M","text":"","category":"section"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"The Microphysics0M.jl module defines a 0-moment bulk parameterization of   the moisture sink due to precipitation. It offers a simplified way of removing the excess water   without assuming anything about the size distributions of cloud   or precipitation particles.","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"The q_tot (total water specific humidity) sink due to precipitation   is obtained by relaxation with a constant timescale   to a state with condensate exceeding a threshold value removed. The threshold for removing excess q_tot is defined either by the   condensate specific humidity or supersaturation. The thresholds and the relaxation timescale are defined in   CLIMAParameters.jl.","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"note: Note\nTo remove precipitation instantly, the relaxation timescale should be equal to the timestep length.","category":"page"},{"location":"Microphysics0M/#Moisture-sink-due-to-precipitation","page":"0-moment precipitation microphysics","title":"Moisture sink due to precipitation","text":"","category":"section"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"If based on maximum condensate specific humidity, the sink is defined as:","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"beginequation\n  left mathcalS_q_tot right_precip =-\n    fracmax(0 q_liq + q_ice - q_c0)tau_precip\nendequation","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"q_liq, q_ice are cloud liquid water and cloud ice specific humidities,\nq_c0 is the condensate specific humidity threshold above which water is removed,\ntau_precip is the relaxation timescale.","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"If based on saturation excess, the sink is defined as:","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"beginequation\n  left mathcalS_q_tot right_precip =-\n    fracmax(0 q_liq + q_ice - S_0  q_vap^sat)tau_precip\nendequation","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"q_liq, q_ice are cloud liquid water and cloud ice specific humidities,\nS_0 is the supersaturation threshold above which water is removed,\nq_vap^sat is the saturation specific humidity,\ntau_precip is the relaxation timescale.","category":"page"},{"location":"References/#References","page":"References","title":"References","text":"","category":"section"},{"location":"References/","page":"References","title":"References","text":"","category":"page"},{"location":"ARG2000_example/#Example-of-Aerosol-Activation-from-ARG2000","page":"ARG2000 activation example","title":"Example of Aerosol Activation from ARG2000","text":"","category":"section"},{"location":"ARG2000_example/","page":"ARG2000 activation example","title":"ARG2000 activation example","text":"The figures below have been reproduced from Hayder Abdul-Razzak, Steven J. Ghan (2000)  using the aerosol activation parameterization implemented in this project.","category":"page"},{"location":"ARG2000_example/#Example-figures","page":"ARG2000 activation example","title":"Example figures","text":"","category":"section"},{"location":"ARG2000_example/","page":"ARG2000 activation example","title":"ARG2000 activation example","text":"include(\"ARGplots.jl\")\nmake_ARG_figX(2)\nmake_ARG_figX(3)\nmake_ARG_figX(4)\nmake_ARG_figX(5)","category":"page"},{"location":"ARG2000_example/","page":"ARG2000 activation example","title":"ARG2000 activation example","text":"(Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"AerosolActivation/#Aerosol-Activation","page":"Aerosol activation","title":"Aerosol Activation","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The AerosolActivation.jl module contains parameterization   of activation of aerosol particles into cloud droplets   via deposition of water vapor. Accompanying it, is the AerosolDistribution.jl module, which contains   information about the aerosol size distribution and chemical properties. The parameterization computes the total activated number and mass   from a given aerosol size distribution. It is based on KÃ¶hler theory   and assumes equilibrium thermodynamics. The modules are an implementation of the parameterization   from Hayder Abdul-Razzak, Steven J. Ghan, Carlos Rivera-Carpio (1998) and   Hayder Abdul-Razzak, Steven J. Ghan (2000). The aerosol chemical composition can be expressed using the B parameter   from Hayder Abdul-Razzak, Steven J. Ghan (2000)   or the kappa parameter from M. D. Petters, S. M. Kreidenweis (2007).","category":"page"},{"location":"AerosolActivation/#Assumed-aerosol-size-distribution-and-properties","page":"Aerosol activation","title":"Assumed aerosol size distribution and properties","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"Aerosol particles are assumed to follow a multi-mode lognormal   size distribution. Particles in each mode are assumed to be internally mixed. The following table lists the parameters defining the aerosol   physical and chemical properties using the B parameter. The r_dry, sigma, and N_tot are given for each mode. Other parameters are defined for each component in each mode.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"variable name definition units\nr_dry geometric mean dry radius m\nsigma geometric standard deviation -\nN_tot total number concentration m^-3\nr component mass mixing ratio -\nepsilon mass fraction of water soluble material -\nphi osmotic coefficient -\nM_a molar mass kg  mol^-1\nnu number of ions the salt dissociates into in water -\nrho_a aerosol density kg  m^-3","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"When using the kappa formulation, one has to specify fewer parameters.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"variable name definition units\nr_dry geometric mean dry radius m\nsigma geometric standard deviation -\nN_tot total number concentration m^-3\nr_vol component volume mixing ratio -\nM_a molar mass kg  mol^-1\nkappa kappa parameter -","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"note: Note\nThe parameterization assumes that the solute is sufficiently soluble so that its concentration does not increase as the droplet grows. The effects of surfactants on surface tension are also not considered.","category":"page"},{"location":"AerosolActivation/#Mean-Hygroscopicity","page":"Aerosol activation","title":"Mean Hygroscopicity","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"Hygroscopicity describes the impact of solute on aerosol efficiency in taking up   water vapor from the environment (i.e. the Raoult's law). The parametrization accepts two ways of describing it, either using the   B parameter or kappa parameter. The B parameter is defined in eq. (3) in Hayder Abdul-Razzak, Steven J. Ghan (2000):","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"B = fracnu  phi  M_w  rho_aM_a  rho_w","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"nu  phi  M_a  rho_a are the aerosol properties defined in the above table,\nM_w is the molar mass of water,\nrho_w is the density of water.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The mean B parameter for internally mixed mode i   made up of j aerosol species is computed   according to eq. (4) in Hayder Abdul-Razzak, Steven J. Ghan (2000):","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nbarB_i = fracM_w sum_j = 1^J fracr_ij  nu_ij  phi_ij  epsilon_ijM_aijrho_w sum_j = 1^J fracr_ijrho_aij\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"i = 1 2  I iterates over aerosol size distribution modes,\nj = 1 2  J iterates over aerosol components within a given mode,\nr_ij is the mass ratio of component j in mode i.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The kappa parameter values for different chemical compounds are provided   in Table 1 in  M. D. Petters, S. M. Kreidenweis (2007). The mean kappa parameter for internally mixed mode i   made up of j aerosol species is computed as a volume weighted average:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"kappa_i = sum_j=1^J r_ij vol kappa_ij","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"r_ij  vol is the volume ratio of component j in mode i.","category":"page"},{"location":"AerosolActivation/#Critical-supersaturation","page":"Aerosol activation","title":"Critical supersaturation","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"Supersaturation S is the ratio of water vapor pressure to saturation vapor pressure. KÃ¶hler theory defines S at which the growing aerosol particle   is in equilibrium with the environment over a range of its sizes. It takes into account the curvature effects and the solute effects. Aerosol activation occurs when the threshold supersaturation,   named critical supersaturation S_c, is reached. After reaching S_c, even when S decreases,   as long as the conditions remain saturated,   the particle will continue to grow. The critical supersaturation is defined by the maximum of the   KÃ¶hler curve. For example, eq.(9) in Hayder Abdul-Razzak, Steven J. Ghan (2000) defines the   the critical supersaturation for a particle with   dry radius equal to the mean mode radius:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nS_ci = frac2sqrtbarH_i bigg( fracA3  r_dry  i bigg)^32\nlabeleqScriti\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"H_i is either the B_i or the kappa_i hygroscopicity parameter\nA is the coefficient describing the curvature effects (i.e. Kelvin effect),\nr_dry  i is the mean dry radius for mode i.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"Coefficient A is defined as in equation (5) in Hayder Abdul-Razzak, Steven J. Ghan, Carlos Rivera-Carpio (1998).","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nA = frac2 tau M_wrho_w R T\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"tau is the surface tension of water,\nR is the universal gas constant,\nT is the temperature.","category":"page"},{"location":"AerosolActivation/#Maximum-Supersaturation","page":"Aerosol activation","title":"Maximum Supersaturation","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"Maximum supersaturation reached by the system S_max governs   what aerosol sizes are activated and what aren't. We estimate S_max by considering a parcel of air raising adiabatically   with a constant velocity, see for example R.R. Rogers (1975). The time rate of change of S is given by eq (10) in R.R. Rogers (1975)","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\n  fracdSdt = alpha w - gamma fracdchidt\n  labeleqSevolution\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"w is the vertical velocity,\ndchi  dt is the water condensation rate during aerosol activation and growth,\nalpha and gamma are coefficients that do not depend on aerosol properties.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The parameters alpha and gamma are defined by eq. (11) and (12)   in Hayder Abdul-Razzak, Steven J. Ghan, Carlos Rivera-Carpio (1998) . Here, they are implemented following the R.R. Rogers (1975) eq. (10):","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nalpha = fracL_v  g  epsilonR_m  c_pm  T^2 - fracgR_m  T\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\ngamma = fracR_m Tepsilon  p_vap^sat + fracepsilon  L_v^2c_pm  T  p\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"L_v is the latent heat of vaporization,\ng is gravitational acceleration,\nepsilon is the ratio of water molar mass to dry air molar mass,\nR_m is the gas constant of air (dry air and moisture)\nc_pm is the specific heat of air (dry air and moisture),\np_vap^sat is the saturation vapor pressure,\np is the total air pressure.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The maximum supersaturation is estimated from eq. (\\ref{eq:Sevolution})   assuming steady a state solution dSdt = 0. Hayder Abdul-Razzak, Steven J. Ghan, Carlos Rivera-Carpio (1998) and Hayder Abdul-Razzak, Steven J. Ghan (2000)   show how to derive an approximate solution for S_max,   since analytical solution is in general not possible. They consider approximate solutions for very small and very large   critical supersaturation values relative to maximum supersaturation,   and combine them into a final expression for S_max. The final formula is presented in eq (6) in Hayder Abdul-Razzak, Steven J. Ghan (2000)","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nS_max = frac1Bigg sum_i=1^Ifrac1S_ci^2biggf_i Big( fraczetaeta_i Big)^frac32 + g_i Big(fracS_ci^2eta_i + 3zeta Big)^frac34bigg Bigg^frac12\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"S_ci is the critical supersaturation for mode i defined in eq. (\\ref{eq:Scriti}),\nf_i, g_i, zeta, eta_i are the coefficients defined in eqs. (7, 8, 10 and 11) in  Hayder Abdul-Razzak, Steven J. Ghan (2000).","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nf_i  = 05  mathrmexp (25  mathrmln^2 sigma_i)\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\ng_i  = 1 + 025  mathrmln sigma_i\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nzeta = frac2A3 bigg(fracalpha wGbigg)^frac12\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\neta_i = bigg(fracalpha wGbigg)^frac32 frac12 pi rho_w gamma N_i\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"G(T) = frac1rho_w  left(fracL_vKT left(fracL_vR_v T - 1 right) + fracR_v Tp_vap^sat D right)^-1   combines the effects of thermal conductivity K and water diffusivity D.","category":"page"},{"location":"AerosolActivation/#Number-and-mass-of-activated-particles","page":"Aerosol activation","title":"Number and mass of activated particles","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The total number N_act and mass M_act of activated aerosol particles   can be computed by integrating their size distribution   starting from the smallest activated size. Following the derivations of   Hayder Abdul-Razzak, Steven J. Ghan, Carlos Rivera-Carpio (1998) and Hayder Abdul-Razzak, Steven J. Ghan (2000)   this can be expressed in terms of critical supersaturations of each   size distribution mode S_ci and the maximum supersaturation S_max.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nN_act = sum_i = 1^I N_ifrac12bigg1 - mathrmerf(u_i)bigg\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nM_act = sum_i = 1^I M_ifrac12bigg1 - mathrmerfbigg(u_i - frac3 sqrt22 ln(sigma_i)bigg)bigg\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"M_i is the average molar mass of aerosol particles in mode i,\nu_i is given in equation (15) in Hayder Abdul-Razzak, Steven J. Ghan (2000).","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nu_i = frac23sqrt2  ln(sigma_i) lnbigg( fracS_ciS_max bigg)\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"S_ci is the mode critical supersaturation,\nS_max is the maximum supersaturation.","category":"page"},{"location":"AerosolActivation/#Example-figures","page":"Aerosol activation","title":"Example figures","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"import Plots\n\nimport CloudMicrophysics\nimport CLIMAParameters\nimport Thermodynamics\n\nconst PL = Plots\nconst AM = CloudMicrophysics.AerosolModel\nconst AA = CloudMicrophysics.AerosolActivation\nconst CP =  CLIMAParameters\nconst TD = Thermodynamics\n\nstruct EarthParameterSet <: CP.AbstractEarthParameterSet end\nconst param_set = EarthParameterSet()\n\n# Atmospheric conditions\nT = 294.0         # air temperature\np = 1000.0 *1e2   # air pressure\nw = 0.5           # vertical velocity\n\n# We need the phase partition here only so that we can compute the\n# moist R_m and cp_m in aerosol activation module.\n# We are assuming here saturated conditions and no liquid water or ice.\n# This is consistent with the assumptions of the aerosol activation scheme.\np_vs = TD.saturation_vapor_pressure(param_set, T, TD.Liquid())\nq_vs = 1 / (1 - CP.Planet.molmass_ratio(param_set) * (p_vs - p) / p_vs)\nq = TD.PhasePartition(q_vs, 0.0, 0.0)\n\n# Abdul-Razzak and Ghan 2000 Figure 1 mode 1\n# https://doi.org/10.1029/1999JD901161\nr_dry = 0.05 * 1e-6 # um\nstdev = 2.0         # -\nN_1 = 100.0 * 1e6   # 1/m3\n\n# Sulfate - universal parameters\nM_sulfate = 0.132\nÏ_sulfate = 1770.0\nÏ_sulfate = 1.0\nÎ½_sulfate = 3.0\nÏµ_sulfate = 1.0\n\nn_components_1 = 1\nmass_fractions_1 = (1.0,)\npaper_mode_1_B = AM.Mode_B(\n    r_dry,\n    stdev,\n    N_1,\n    mass_fractions_1,\n    (Ïµ_sulfate,),\n    (Ï_sulfate,),\n    (M_sulfate,),\n    (Î½_sulfate,),\n    (Ï_sulfate,),\n    n_components_1,\n)\n\nN_2_range = range(0, stop=5000 * 1e6, length=100)\nN_act_frac_B = Vector{Float64}(undef, 100)\n\nit = 1\nfor N_2 in N_2_range\n        n_components_2 = 1\n        mass_fractions_2 = (1.0,)\n        paper_mode_2_B = AM.Mode_B(\n          r_dry,\n          stdev,\n          N_2,\n          mass_fractions_2,\n          (Ïµ_sulfate,),\n          (Ï_sulfate,),\n          (M_sulfate,),\n          (Î½_sulfate,),\n          (Ï_sulfate,),\n          n_components_2,\n        )\n        AD_B =  AM.AerosolDistribution((paper_mode_1_B, paper_mode_2_B))\n        N_act_frac_B[it] = AA.N_activated_per_mode(param_set, AD_B, T, p, w, q)[1] / N_1\n        global it += 1\nend\n\n# data read from Fig 1 in Abdul-Razzak and Ghan 2000\n# using https://automeris.io/WebPlotDigitizer/\ninclude(\"ARGdata.jl\")\n\nPL.plot(N_2_range * 1e-6, N_act_frac_B, label=\"CliMA-B\", xlabel=\"Mode 2 aerosol number concentration [1/cm3]\", ylabel=\"Mode 1 number fraction activated\")\nPL.scatter!(Fig1_x_obs, Fig1_y_obs, markercolor = :black, label=\"paper observations\")\nPL.plot!(Fig1_x_param, Fig1_y_param, linecolor = :black, label=\"paper parameterization\")\n\nPL.savefig(\"Abdul-Razzak_and_Ghan_fig_1.svg\")","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"(Image: )","category":"page"},{"location":"Microphysics1M/#Microphysics-1M","page":"1-moment precipitation microphysics","title":"Microphysics 1M","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The Microphysics1M.jl module describes a 1-moment bulk parameterization of   cloud microphysical processes. The module is based on the ideas of   Edwin Kessler (1995),   Wojciech W Grabowski (1998)   and Colleen M Kaul, Jo{\\~a}o Teixeira, Kentaroh Suzuki (2015).","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The cloud microphysics variables are expressed as specific humidities:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"q_tot - total water specific humidity,\nq_vap - water vapor specific humidity,\nq_liq - cloud water specific humidity,\nq_ice - cloud ice specific humidity,\nq_rai - rain specific humidity,\nq_sno - snow specific humidity.","category":"page"},{"location":"Microphysics1M/#Assumed-particle-size-relationships","page":"1-moment precipitation microphysics","title":"Assumed particle size relationships","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Particles are assumed to follow power-law relationships involving the mass(radius), denoted by m(r), the cross section(radius), denoted by a(r), and the terminal velocity(radius), denoted by v_term(r), respectively. The coefficients are defined in the   CLIMAParameters.jl package   and are shown in the table below. For rain and ice they correspond to spherical liquid water drops   and ice particles, respectively. There is no assumed particle shape for snow, and the relationships are   empirical.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"m(r) = chi_m  m_0 left(fracrr_0right)^m_e + Delta_m","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"a(r) = chi_a  a_0 left(fracrr_0right)^a_e + Delta_a","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"v_term(r) = chi_v  v_0 left(fracrr_0right)^v_e + Delta_v","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"r is the particle radius,\nr_0 is the typical particle radius used to nondimensionalize,\nm_0  m_e  a_0  a_e  v_0  v_e  are the default coefficients,\nchi_m, Delta_m, chi_a, Delta_a, chi_v, Delta_v are the coefficients that can be used during model calibration to expand around the default values. Without calibration all chi parameters are set to 1 and all Delta parameters are set to 0.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The above coefficients, similarly to all other microphysics parameters,   are not hardcoded in the final microphysics parameterizations. The goal is to allow easy flexibility when calibrating the scheme. With that said, the assumption about the shape of the particles is used three   times when deriving the microphysics formulae:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The mass transfer equation (\\ref{eq:mass_rate}) used in snow autoconversion, rain evaporation, snow sublimation and snow melt rates is derived assuming spherical particle shapes. To correct for non-spherical shape it should be multiplied by a function of the particle aspect ratio.\nThe geometric collision kernel used for deriving rain-snow accretion rate assumes that both colliding particles are spherical. It does not take into account the reduced cross-section of snow particles that is used when modeling snow - cloud liquid water and snow - cloud ice accretion.\nIn the definition of the Reynolds number that is used when computing ventilation factors.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"symbol definition units default value reference\nr_0^rai typical rain drop radius m 10^-3 \nm_0^rai coefficient in m(r) for rain kg frac43  pi  rho_water  r_0^3 \nm_e^rai exponent in m(r) for rain - 3 \na_0^rai coefficient in a(r) for rain m^2 pi  r_0^2 \na_e^rai exponent in a(r) for rain - 2 \nv_e^rai exponent in v_term(r) for rain - 05 \n    \nr_0^ice typical ice crystal radius m 10^-5 \nm_0^ice coefficient in m(r) for ice kg frac43  pi  rho_ice  r_0^3 \nm_e^ice exponent in m(r) for ice - 3 \n    \nr_0^sno typical snow crystal radius m 10^-3 \nm_0^sno coefficient in m(r) for snow kg 01   r_0^2 eq (6b) Wojciech W Grabowski (1998)\nm_e^sno exponent in m(r) for snow - 2 eq (6b) Wojciech W Grabowski (1998)\na_0^sno coefficient in a(r) for snow m^2 03 pi  r_0^2 alpha in eq(16b) Wojciech W Grabowski (1998).\na_e^sno exponent in a(r) for snow - 2 \nv_0^sno coefficient in v_term(r) for snow fracms 2^94 r_0^14 eq (6b) Wojciech W Grabowski (1998)\nv_e^sno exponent in v_term(r) for snow - 025 eq (6b) Wojciech W Grabowski (1998)","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"rho_water is the density of water,\nrho_ice is the density of ice.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The terminal velocity of an individual rain drop is defined by the balance   between the gravitational acceleration (taking into account   the density difference between water and air) and the drag force. Therefore the v_0^rai is defined as","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nv_0^rai =\n  left(\n    frac83  C_drag left( fracrho_waterrho -1 right)\n  right)^12 (g r_0^rai)^12\nlabeleqvdrop\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"g is the gravitational acceleration,\nC_drag is the drag coefficient,\nrho is the density of air.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nIt would be great to replace the above simple power laws with more accurate relationships. For example: Vitaly I Khvorostyanov, Judith A Curry (2002) or M Karrer, A Seifert, C Siewert, D Ori, A von Lerber, S Kneifel (2020)","category":"page"},{"location":"Microphysics1M/#Assumed-particle-size-distributions","page":"1-moment precipitation microphysics","title":"Assumed particle size distributions","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The particle size distributions are assumed to follow   Marshall-Palmer distribution   John S Marshall, W Mc K Palmer (1948)   eq. 1:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  n(r) = n_0 expleft(- lambda  r right)\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"n_0 and lambda are the Marshall-Palmer distribution parameters.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The n_0 for rain and ice is assumed constant. The n_0 for snow is defined as","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  n_0^sno = mu^sno left(fracrhorho_0 q_snoright)^nu^sno\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"mu^sno and nu^sno are the coefficients\nrho_0 is the typical air density used to nondimensionalize the equation and is equal to 1  kgm^3","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The coefficients are defined in   CLIMAParameters.jl package and are shown in the table below.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"symbol definition units default value reference\nn_0^rai rain drop size distribution parameter frac1m^4 16 cdot 10^6 eq (2) John S Marshall, W Mc K Palmer (1948)\nn_0^ice cloud ice size distribution parameter frac1m^4 2 cdot 10^7 bottom of page 4396 Colleen M Kaul, Jo{\\~a}o Teixeira, Kentaroh Suzuki (2015)\nmu^sno snow size distribution parameter coefficient frac1m^4 436 cdot 10^9  rho_0^nu^sno eq (A1) Colleen M Kaul, Jo{\\~a}o Teixeira, Kentaroh Suzuki (2015)\nnu^sno snow size distribution parameter exponent - 063 eq (A1) Colleen M Kaul, Jo{\\~a}o Teixeira, Kentaroh Suzuki (2015)","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The lambda parameter is defined as","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nlambda =\n  left(\n    frac Gamma(m_e + Delta_m + 1)  chi_m  m_0  n_0\n         q  rho  (r_0)^m_e + Delta_m\n  right)^frac1m_e + Delta_m + 1\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"q is rain, snow or ice specific humidity\nchi_m, m_0, m_e, Delta_m, r_0, and n_0 are the corresponding mass(radius) and size distribution parameters\nGamma() is the gamma function","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The cloud-ice size distribution is used   when computing snow autoconversion rate and rain sink due to accretion. In other derivations cloud ice, similar to cloud liquid water,   is treated as continuous.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nDo we want to keep the n_0 for rain constant and n_0 for snow empirical?\nDo we want to test different size distributions?","category":"page"},{"location":"Microphysics1M/#Parameterized-processes","page":"1-moment precipitation microphysics","title":"Parameterized processes","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Parameterized processes include:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"autoconversion of rain and snow,\naccretion,\nevaporation of rain water,\nsublimation, vapor deposition and melting of snow,\nsedimentation of rain and snow with mass weighted average terminal velocity (cloud water and cloud ice are part of the working fluid and do not sediment).","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Parameters used in the parameterization are defined in   CLIMAParameters.jl package. They consist of:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"symbol definition units default value reference\nC_drag rain drop drag coefficient - 055 C_drag is such that the mass averaged terminal velocity is close to Wojciech W Grabowski, Piotr K Smolarkiewicz (1996)\ntau_acnv_rain cloud liquid to rain water autoconversion timescale s 10^3 eq (5a) Wojciech W Grabowski, Piotr K Smolarkiewicz (1996)\ntau_acnv_snow cloud ice to snow autoconversion timescale s 10^2 \nq_liq_threshold cloud liquid to rain water autoconversion threshold - 5 cdot 10^-4 eq (5a) Wojciech W Grabowski, Piotr K Smolarkiewicz (1996)\nq_ice_threshold cloud ice snow autoconversion threshold - 1 cdot 10^-6 \nr_is threshold particle radius between ice and snow m 625 cdot 10^-6 abstract Jerry Y Harrington, Michael P Meyers, Robert L Walko, William R Cotton (1995)\nE_lr collision efficiency between rain drops and cloud droplets - 08 eq (16a) Wojciech W Grabowski (1998)\nE_ls collision efficiency between snow and cloud droplets - 01 Appendix B Steven A Rutledge, Peterv Hobbs (1983)\nE_ir collision efficiency between rain drops and cloud ice - 1 Appendix B Steven A Rutledge, Peter V Hobbs (1984)\nE_is collision efficiency between snow and cloud ice - 01 bottom page 3649 Hugh Morrison, Andrew Gettelman (2008)\nE_rs collision efficiency between rain drops and snow - 1 top page 3650 Hugh Morrison, Andrew Gettelman (2008)\na_vent^rai b_vent^rai rain drop ventilation factor coefficients - 15 , 053 chosen such that at q_tot=15 gkg and T=288K the evap. rate is close to empirical evap. rate in Wojciech W Grabowski, Piotr K Smolarkiewicz (1996)\na_vent^sno b_vent^sno snow ventilation factor coefficients - 065 , 044 eq (A19) Colleen M Kaul, Jo{\\~a}o Teixeira, Kentaroh Suzuki (2015)\nK_therm thermal conductivity of air fracJm  s  K 24 cdot 10^-2 \nnu_air kinematic viscosity of air fracm^2s 16 cdot 10^-5 \nD_vapor diffusivity of water vapor fracm^2s 226 cdot 10^-5 ","category":"page"},{"location":"Microphysics1M/#Ventilation-factor","page":"1-moment precipitation microphysics","title":"Ventilation factor","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The ventilation factor parameterizes the increase in the mass and heat exchange   for falling particles. Following Axel Seifert, Klaus Dieter Beheng (2006)   eq. 24  the ventilation factor is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  F(r) = a_vent + b_vent  N_Sc^13 N_Re(r)^12\nlabeleqventil_factor\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"a_vent, b_vent are coefficients,\nN_Sc is the Schmidt number,\nN_Re is the Reynolds number of a falling particle.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The Schmidt number is assumed constant:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"N_Sc = fracnu_airD_vapor","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"nu_air is the kinematic viscosity of air,\nD_vapor is the diffusivity of water.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The Reynolds number of a spherical drop is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"N_Re = frac2  r  v_term(r)nu_air","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Applying the terminal velocity(radius) relationship results in","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nF(r) = a_vent +\n       b_vent \n       left(fracnu_airD_vaporright)^frac13 \n       left(frac2  chi_v  v_0\n                  r_0^v_e + Delta_v  nu_airright)^frac12 \n       r^fracv_e + Delta_v + 12\nlabeleqvent_factor\nendequation","category":"page"},{"location":"Microphysics1M/#Terminal-velocity","page":"1-moment precipitation microphysics","title":"Terminal velocity","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The mass weighted terminal velocity v_t is defined following Yoshimitsu Ogura, Tsutomu Takahashi (1971):","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  v_t = fracint_0^infty n(r)  m(r)  v_term(r)  dr\n             int_0^infty n(r)  m(r)  dr\nlabeleqvt\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Integrating over the assumed Marshall-Palmer distribution and using the   m(r) and v_term(r) relationships results in","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  v_t = chi_v  v_0  left(frac1r_0  lambdaright)^v_e + Delta_v\n        fracGamma(m_e + v_e + Delta_m + Delta_v + 1)\n             Gamma(m_e + Delta_m + 1)\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nAssuming a constant drag coefficient is an approximation and it should be size and flow dependent. In general we should implement these terminal velocity parameterizations: Vitaly I Khvorostyanov, Judith A Curry (2002) or M Karrer, A Seifert, C Siewert, D Ori, A von Lerber, S Kneifel (2020)","category":"page"},{"location":"Microphysics1M/#Rain-autoconversion","page":"1-moment precipitation microphysics","title":"Rain autoconversion","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Rain autoconversion defines the rate of conversion form cloud liquid water   to rain water due to collisions between cloud droplets. It is parameterized following   Edwin Kessler (1995):","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_acnv =\n    fracmax(0 q_liq - q_liq_threshold)tau_acnv_rain\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"q_liq - liquid water specific humidity,\ntau_acnv_rain - timescale,\nq_liq_threshold - autoconversion threshold.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nThis is the simplest possible autoconversion parameterization. It would be great to implement others and test the impact on precipitation. See for example R Wood (2005) Table 1 for other simple choices.","category":"page"},{"location":"Microphysics1M/#Snow-autoconversion","page":"1-moment precipitation microphysics","title":"Snow autoconversion","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Snow autoconversion defines the rate of conversion form cloud ice to snow due   the growth of cloud ice by water vapor deposition. It is defined as the change of mass of cloud ice for cloud ice particles   larger than threshold r_is. See Jerry Y Harrington, Michael P Meyers, Robert L Walko, William R Cotton (1995)   for derivation.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracd  q_snodt right_acnv =\n  frac1rho fracddt\n    left( int_r_is^infty m(r) n(r) dr right) =\n    left frac1rho fracdrdt right_r=r_is m(r_is) n(r_is)\n    + frac1rho int_r_is^infty fracdmdt n(r) dr\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The fracdmdt is obtained by solving the water vapor diffusion equation   in spherical coordinates and linking the changes in temperature at the drop   surface to the changes in saturated vapor pressure via the Clausius-Clapeyron   equation, following   Basil John Mason (2010).","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For the simplest case of spherical particles and not taking into account   ventilation effects:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nfracdmdt = 4 pi  r  (S - 1)  G(T)\nlabeleqmass_rate\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"S(q_vap q_vap^sat) = fracq_vapq_vap^sat is saturation,\nq_vap^sat   is the saturation vapor specific humidity (over ice in this case),\nG(T) = left(fracL_sKT left(fracL_sR_v T - 1 right) + fracR_v Tp_vap^sat D right)^-1   combines the effects of thermal conductivity and water diffusivity.\nL_s is the latent heat of sublimation,\nK_thermo is the thermal conductivity of air,\nR_v is the gas constant of water vapor,\nD_vapor is the diffusivity of water vapor","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Using eq. (\\ref{eq:mass_rate}) and the assumed m(r) relationship we obtain","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nfracdrdt = frac4 pi  (S - 1)chi_m  (m_e + Delta_m)\n   left( fracr_0r right)^m_e + Delta_m\n   fracG(T)  r^2m_0\nlabeleqr_rate\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Finally the snow autoconversion rate is computed as","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracd  q_snodt right_acnv =\n   frac1rho 4 pi  (S-1)  G(T) \n   n_0^ice  exp(-lambda_ice r_is)\n   left( fracr_is^2m_e^ice + Delta_m^ice +\n   fracr_is lambda_ice +1lambda_ice^2 right)\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nWe should include ventilation effects.For non-spherical particles the mass rate of growth should be multiplied by a function depending on the particle aspect ratio. For functions proposed for different crystal habitats see Jerry Y Harrington, Michael P Meyers, Robert L Walko, William R Cotton (1995) Appendix B.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"We also have a simplified version of snow autoconversion rate,   to be used in modeling configurations that   don't allow supersaturation to be present in the computational domain. It is formulated similarly to the rain autoconversion:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracd  q_snodt right_acnv =\n    fracmax(0 q_ice - q_ice_threshold)tau_acnv_snow\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"q_liq - liquid water specific humidity,\ntau_acnv_rain - timescale,\nq_liq_threshold - autoconversion threshold.","category":"page"},{"location":"Microphysics1M/#Accretion","page":"1-moment precipitation microphysics","title":"Accretion","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Accretion defines the rates of conversion between different categories due to   collisions between particles.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For the case of collisions between cloud water (liquid water or ice)   and precipitation (rain or snow) the sink of cloud water is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracd  q_cdt right_accr =\n  - int_0^infty n_p(r)  a^p(r)  v_term(r)  E_cp  q_c  dr\nlabeleqaccr_1\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"c subscript indicates cloud water category (cloud liquid water or ice)\np subscript indicates precipitation category (rain or snow)\nE_cp is the collision efficiency.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Integrating over the distribution yields:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracd  q_cdt right_accr =\n  - n_0^p  Pi_a v^p  q_c  E_cp \n    Gamma(Sigma_a v^p + 1) \n    frac1lambda^p \n    left( frac1r_0^p lambda^p\n    right)^Sigma_a v^p\nlabeleqaccrfin\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Pi_a v^p = a_0^p  v_0^p  chi_a^p  chi_v^p\nSigma_a v^p = a_e^p + v_e^p + Delta_a^p + Delta_v^p","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For the case of cloud liquid water and rain and cloud ice and snow collisions,   the sink of cloud water becomes simply the source for precipitation. For the case of cloud liquid water and snow collisions   for temperatures below freezing, the sink of cloud liquid water is   a source for snow. For temperatures above freezing, the accreted cloud droplets   along with some melted snow are converted to rain. In this case eq. (\\ref{eq:accrfin}) describes the sink of cloud liquid water. The sink of snow is proportional to the sink of cloud liquid water with   the coefficient fracc_vlL_f(T - T_freeze),   where c_vl is the isochoric specific heat of liquid water,  L_f is the latent heat of freezing,   and T_freeze is the freezing temperature.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The collisions between cloud ice and rain create snow. The source of snow in this case is a sum of sinks from cloud ice and rain. The sink of cloud ice is defined by eq. (\\ref{eq:accrfin}). The sink of rain is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracd  q_raidt right_accr_ri =\n  - int_0^infty int_0^infty\n  frac1rho  E_ir  n_i(r_i)  n_r(r_r)  a_r(r_r)  m_r(r_r)\n   v_term(r_r)  d r_i d r_r\nlabeleqaccr_ir\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"E_ir is the collision efficiency between rain and cloud ice\nn_i and n_r are the cloud ice and rain size distributions\nm_r, a_r and v_term are the mass(radius),   cross section(radius) and terminal velocity(radius) relations for rain\nr_i and r_r mark integration over cloud ice and rain size   distributions","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Integrating eq.(\\ref{eq:accr_ir}) yields:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracd  q_raidt right_accr_ri =\n  - frac1rho  E_ir  n_0^rai  n_0^ice \n  Pi_m a v^rai\n  Gamma(Sigma_m a v^rai + 1) \n  frac1lambda^ice  lambda^rai \n  left( frac1r_0^rai  lambda^rai\n  right)^Sigma_m a v^rai\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Pi_m a v^rai =  m_0^rai  a_0^rai  v_0^rai  chi_m^rai  chi_a^rai  chi_v^rai\nSigma_m a v^rai = m_e^rai + a_e^rai + v_e^rai + Delta_m^rai + Delta_a^rai + Delta_v^rai","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Collisions between rain and snow result in snow in temperatures below freezing   and in rain in temperatures above freezing. The source term is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracd  q_idt right_accr =\n    int_0^infty int_0^infty frac1rho\n    n_i(r_i)  n_j(r_j)  a(r_i r_j)  m_j(r_j)  E_ij \n    leftv_term(r_i) - v_term(r_j)right  dr_i dr_j\nlabeleqaccr_sr1\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"i stands for rain (TT_freezing) or snow (TT_freezing)\nj stands for snow (TT_freezing) or rain (TT_freezing)\na(r_i r_j) is the crossection of the two colliding particles","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"There are two additional assumptions that we make to integrate   eq.(\\ref{eq:accr_sr1}):","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"leftv_term(r_i) - v_term(r_j)right approx left v_ti - v_tj right We approximate the terminal velocity difference for each particle pair with a difference between mass-weighted mean terminal velocities and move it outside of the integral. See the discussion in Ikawa_and_Saito_1991 page 88.\nWe assume that a(r_i r_j) = pi (r_i + r_j)^2. This corresponds to a geometric formulation of the collision kernel, aka cylindrical formulation, see Lian-Ping Wang, Charmaine N Franklin, Orlando Ayala, Wojciech W Grabowski (2006) for discussion.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The eq.(\\ref{eq:accr_sr1}) can then be integrated as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginalign\nleft fracd  q_idt right_accr  =\n    frac1rho  pi  n_0^i  n_0^j \n    m_0^j  chi_m^j  left(frac1r_0^jright)^m_e^j + Delta_m^j\n     E_ij left v_ti - v_tj right\n    int_0^infty int_0^infty\n    (r_i + r_j)^2\n    r_j^m_e^j + Delta_m^j \n    exp(- lambda_j r_j) \n    exp(- lambda_i r_i) \n    dr_i dr_j \n     =\n    frac1rho  pi  n_0^i  n_0^j  m_0^j  chi_m^j \n    E_ij left v_ti - v_tj right \n    left( frac1r_0^j right)^m_e^j + Delta_m^j\n    left(\n        frac2 Gamma(m_e^j + Delta_m^j + 1)lambda_i^3 lambda_j^m_e^j + Delta_m^j + 1\n        + frac2 Gamma(m_e^j + Delta_m^j + 2) lambda_i^2 lambda_j^m_e^j + Delta_m^j + 2\n        + fracGamma(m_e^j + Delta_m^j + 3)lambda_i lambda_j^m_e^j + Delta_m^j + 3\n    right)\nendalign","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nBoth of the assumptions needed to integrate the snow-rain accretion rate could be revisited:The discussion on page 88 in Ikawa_and_Saito_1991 suggests an alternative approximation of the velocity difference.The (r_i + r_j)^2 assumption for the crossection is inconsistent with the snow crossection used when modelling collisions with cloud water and cloud ice.","category":"page"},{"location":"Microphysics1M/#Rain-evaporation-and-snow-sublimation","page":"1-moment precipitation microphysics","title":"Rain evaporation and snow sublimation","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"We start from a similar equation as when computing snow autoconversion rate but integrate it from 0 to infty.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracdqdt right_evap_subl =\n    frac1rho int_0^infty fracdm(r)dt n(r) dr\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"In contrast to eq.(\\ref{eq:mass_rate}), now we are taking into account   ventilation effects:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  fracdmdt = 4 pi  r  (S - 1)  G(T)  F(r)\nlabeleqmass_rate2\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"F(r) is the rain drop ventilation factor defined in (\\ref{eq:ventil_factor})\nsaturation S is computed over water or ice","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The final integral is:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginalign\nleft fracdqdt right_evap_subl  =\n    frac4 pi n_0rho (S - 1) G(T)\n    int_0^infty\n    left(\n       a_vent +\n       b_vent \n         left(fracnu_airD_vapor right)^frac13 \n         left(fracrr_0 right)^fracv_e + Delta_v2 \n         left(frac2  chi_v  v_0  rnu_air right)^frac12\n    right)\n    r  exp(-lambda r) dr \n     =\n    frac4 pi n_0rho (S - 1) G(T) lambda^-2\n    left(\n       a_vent +\n       b_vent \n         left(fracnu_airD_vapor right)^frac13 \n         left(frac1r_0  lambda right)^fracv_e + Delta_v2 \n         left(frac2  chi_v  v_0nu_air  lambda right)^frac12 \n         Gammaleft( fracv_e + Delta_v + 52 right)\n    right)\nendalign","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For the case of rain we only consider evaporation (S - 1  0). For the case of snow we consider both the source term due to vapor deposition  on snow (S - 1  0) and the sink due to vapor sublimation (S - 1  0).","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nWe should take into account the non-spherical snow shape. Modify the Reynolds number and growth equation.","category":"page"},{"location":"Microphysics1M/#Snow-melt","page":"1-moment precipitation microphysics","title":"Snow melt","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"If snow occurs in temperatures above freezing it is melting into rain. The sink for snow is parameterized again as","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracdqdt right_melt =\n    frac1rho int_0^infty fracdm(r)dt n(r) dr\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For snow melt","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  fracdmdt = 4 pi  r  fracK_thermoL_f (T - T_freeze)  F(r)\nlabeleqmass_rate3\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"F(r) is the ventilation factor defined in (\\ref{eq:ventil_factor})\nL_f is the latent heat of freezing.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"If T  T_freeze:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracdqdt right_evap_subl =\n    frac4 pi  n_0  K_thermorho  L_f (T - T_freeze) lambda^-2\n    left(\n       a_vent +\n       b_vent \n         left( fracnu_airD_vapor right)^frac13 \n         left( frac1r_0  lambda right)^fracv_e + Delta_v2 \n         left( frac2  chi_v  v_0nu_air  lambda right)^frac12 \n         Gamma left( fracv_e + Delta_v + 52 right)\n    right)\nendequation","category":"page"},{"location":"Microphysics1M/#Example-figures","page":"1-moment precipitation microphysics","title":"Example figures","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"import Plots\n\nimport Thermodynamics\nimport CloudMicrophysics\nimport CLIMAParameters\n\nconst PL = Plots\nconst CMT = CloudMicrophysics.CommonTypes\nconst CM1 = CloudMicrophysics.Microphysics1M\nconst TD = Thermodynamics\nconst CP = CLIMAParameters\nconst CP_planet = CLIMAParameters.Planet\n\nstruct EarthParameterSet <: CP.AbstractEarthParameterSet end\nconst param_set = EarthParameterSet()\n\nconst liquid = CMT.LiquidType()\nconst ice = CMT.IceType()\nconst rain = CMT.RainType()\nconst snow = CMT.SnowType()\n\n# eq. 5d in [Grabowski1996](@cite)\nfunction terminal_velocity_empirical(q_rai::DT, q_tot::DT, Ï::DT, Ï_air_ground::DT) where {DT<:Real}\n    rr  = q_rai / (DT(1) - q_tot)\n    vel = DT(14.34) * Ï_air_ground^DT(0.5) * Ï^-DT(0.3654) * rr^DT(0.1346)\n    return vel\nend\n\n# eq. 5b in [Grabowski1996](@cite)\nfunction accretion_empirical(q_rai::DT, q_liq::DT, q_tot::DT) where {DT<:Real}\n    rr  = q_rai / (DT(1) - q_tot)\n    rl  = q_liq / (DT(1) - q_tot)\n    return DT(2.2) * rl * rr^DT(7/8)\nend\n\n# eq. 5c in [Grabowski1996](@cite)\nfunction rain_evap_empirical(q_rai::DT, q::TD.PhasePartition, T::DT, p::DT, Ï::DT) where {DT<:Real}\n\n    ts_neq = TD.PhaseNonEquil_ÏTq(param_set, Ï, T, q)\n    q_sat  = TD.q_vap_saturation(param_set, ts_neq)\n    q_vap  = q.tot - q.liq\n    rr     = q_rai / (DT(1) - q.tot)\n    rv_sat = q_sat / (DT(1) - q.tot)\n    S      = q_vap/q_sat - DT(1)\n\n    ag, bg = 5.4 * 1e2, 2.55 * 1e5\n    G = DT(1) / (ag + bg / p / rv_sat) / Ï\n\n    av, bv = 1.6, 124.9\n    F = av * (Ï/DT(1e3))^DT(0.525)  * rr^DT(0.525) + bv * (Ï/DT(1e3))^DT(0.7296) * rr^DT(0.7296)\n\n    return DT(1) / (DT(1) - q.tot) * S * F * G\nend\n\n# example values\nq_liq_range  = range(1e-8, stop=5e-3, length=100)\nq_ice_range  = range(1e-8, stop=5e-3, length=100)\nq_rain_range = range(1e-8, stop=5e-3, length=100)\nq_snow_range = range(1e-8, stop=5e-3, length=100)\nÏ_air, Ï_air_ground = 1.2, 1.22\nq_liq, q_ice, q_tot = 5e-4, 5e-4, 20e-3\n\nPL.plot( q_rain_range * 1e3, [CM1.terminal_velocity(param_set, rain, Ï_air, q_rai) for q_rai in q_rain_range],     linewidth=3, xlabel=\"q_rain or q_snow [g/kg]\", ylabel=\"terminal velocity [m/s]\", label=\"Rain-CLIMA\")\nPL.plot!(q_snow_range * 1e3, [CM1.terminal_velocity(param_set, snow, Ï_air, q_sno) for q_sno in q_snow_range],     linewidth=3, label=\"Snow-CLIMA\")\nPL.plot!(q_rain_range * 1e3, [terminal_velocity_empirical(q_rai, q_tot, Ï_air, Ï_air_ground) for q_rai in q_rain_range], linewidth=3, label=\"Rain-Empirical\")\nPL.savefig(\"terminal_velocity.svg\") # hide\n\nT = 273.15\nPL.plot( q_liq_range * 1e3, [CM1.conv_q_liq_to_q_rai(param_set, q_liq) for q_liq in q_liq_range], linewidth=3, xlabel=\"q_liq or q_ice [g/kg]\", ylabel=\"autoconversion rate [1/s]\", label=\"Rain\")\nPL.plot!(q_ice_range * 1e3, [CM1.conv_q_ice_to_q_sno(param_set, TD.PhasePartition(q_tot, 0., q_ice), Ï_air, T-5)  for q_ice in q_ice_range], linewidth=3, label=\"Snow T=-5C\")\nPL.plot!(q_ice_range * 1e3, [CM1.conv_q_ice_to_q_sno(param_set, TD.PhasePartition(q_tot, 0., q_ice), Ï_air, T-10) for q_ice in q_ice_range], linewidth=3, label=\"Snow T=-15C\")\nPL.plot!(q_ice_range * 1e3, [CM1.conv_q_ice_to_q_sno(param_set, TD.PhasePartition(q_tot, 0., q_ice), Ï_air, T-15) for q_ice in q_ice_range], linewidth=3, label=\"Snow T=-25C\")\nPL.savefig(\"autoconversion_rate.svg\") # hide\n\nPL.plot( q_rain_range * 1e3, [CM1.accretion(param_set, liquid, rain, q_liq, q_rai, Ï_air) for q_rai in q_rain_range], linewidth=3, xlabel=\"q_rain or q_snow [g/kg]\", ylabel=\"accretion rate [1/s]\", label=\"Liq+Rain-CLIMA\")\nPL.plot!(q_rain_range * 1e3, [CM1.accretion(param_set, ice,    rain, q_ice, q_rai, Ï_air) for q_rai in q_rain_range], linewidth=3, label=\"Ice+Rain-CLIMA\")\nPL.plot!(q_snow_range * 1e3, [CM1.accretion(param_set, liquid, snow, q_liq, q_sno, Ï_air) for q_sno in q_snow_range], linewidth=3, label=\"Liq+Snow-CLIMA\")\nPL.plot!(q_snow_range * 1e3, [CM1.accretion(param_set, ice,    snow, q_ice, q_sno, Ï_air) for q_sno in q_snow_range], linewidth=4, linestyle=:dash, label=\"Ice+Snow-CLIMA\")\nPL.plot!(q_rain_range * 1e3, [accretion_empirical(q_rai, q_liq, q_tot) for q_rai in q_rain_range], linewidth=3, label=\"Liq+Rain-Empirical\")\nPL.savefig(\"accretion_rate.svg\") # hide\n\nq_ice = 1e-6\nPL.plot(q_rain_range * 1e3, [CM1.accretion_rain_sink(param_set, q_ice, q_rai, Ï_air) for q_rai in q_rain_range], linewidth=3, xlabel=\"q_rain or q_snow [g/kg]\", ylabel=\"accretion rain sink rate [1/s]\", label=\"q_ice=1e-6\")\nq_ice = 1e-5\nPL.plot!(q_rain_range * 1e3, [CM1.accretion_rain_sink(param_set, q_ice, q_rai, Ï_air) for q_rai in q_rain_range], linewidth=3, xlabel=\"q_rain or q_snow [g/kg]\", ylabel=\"accretion rain sink rate [1/s]\", label=\"q_ice=1e-5\")\nq_ice = 1e-4\nPL.plot!(q_rain_range * 1e3, [CM1.accretion_rain_sink(param_set, q_ice, q_rai, Ï_air) for q_rai in q_rain_range], linewidth=3, xlabel=\"q_rain or q_snow [g/kg]\", ylabel=\"accretion rain sink rate [1/s]\", label=\"q_ice=1e-4\")\nPL.savefig(\"accretion_rain_sink_rate.svg\") # hide\n\nq_sno = 1e-6\nPL.plot(q_rain_range * 1e3, [CM1.accretion_snow_rain(param_set, rain, snow, q_rai, q_sno, Ï_air) for q_rai in q_rain_range], linewidth=3, xlabel=\"q_rain [g/kg]\", ylabel=\"snow-rain accretion rate [1/s] T>0\", label=\"q_snow=1e-6\")\nq_sno = 1e-5\nPL.plot!(q_rain_range * 1e3, [CM1.accretion_snow_rain(param_set, rain, snow, q_rai, q_sno, Ï_air) for q_rai in q_rain_range], linewidth=3, label=\"q_snow=1e-5\")\nq_sno = 1e-4\nPL.plot!(q_rain_range * 1e3, [CM1.accretion_snow_rain(param_set, rain, snow, q_rai, q_sno, Ï_air) for q_rai in q_rain_range], linewidth=3, label=\"q_snow=1e-4\")\nPL.savefig(\"accretion_snow_rain_above_freeze.svg\") # hide\n\nq_rai = 1e-6\nPL.plot(q_snow_range * 1e3, [CM1.accretion_snow_rain(param_set, snow, rain, q_sno, q_rai, Ï_air) for q_sno in q_snow_range], linewidth=3, xlabel=\"q_snow [g/kg]\", ylabel=\"snow-rain accretion rate [1/s] T<0\", label=\"q_rain=1e-6\")\nq_rai = 1e-5\nPL.plot!(q_snow_range * 1e3, [CM1.accretion_snow_rain(param_set, snow, rain, q_sno, q_rai, Ï_air) for q_sno in q_snow_range], linewidth=3, label=\"q_rain=1e-5\")\nq_rai = 1e-4\nPL.plot!(q_snow_range * 1e3, [CM1.accretion_snow_rain(param_set, snow, rain, q_sno, q_rai, Ï_air) for q_sno in q_snow_range], linewidth=3, label=\"q_rain=1e-4\")\nPL.savefig(\"accretion_snow_rain_below_freeze.svg\") # hide\n\n# example values\nT, p = 273.15 + 15, 90000.\nÏµ = 1. / CP_planet.molmass_ratio(param_set)\np_sat = TD.saturation_vapor_pressure(param_set, T, TD.Liquid())\nq_sat = Ïµ * p_sat / (p + p_sat * (Ïµ - 1.))\nq_rain_range = range(1e-8, stop=5e-3, length=100)\nq_tot = 15e-3\nq_vap = 0.15 * q_sat\nq_ice = 0.\nq_liq = q_tot - q_vap - q_ice\nq = TD.PhasePartition(q_tot, q_liq, q_ice)\nR = TD.gas_constant_air(param_set, q)\nÏ = p / R / T\n\nPL.plot(q_rain_range * 1e3,  [CM1.evaporation_sublimation(param_set, rain, q, q_rai, Ï, T) for q_rai in q_rain_range], xlabel=\"q_rain [g/kg]\", linewidth=3, ylabel=\"rain evaporation rate [1/s]\", label=\"ClimateMachine\")\nPL.plot!(q_rain_range * 1e3, [rain_evap_empirical(q_rai, q, T, p, Ï) for q_rai in q_rain_range], linewidth=3, label=\"empirical\")\nPL.savefig(\"rain_evaporation_rate.svg\") # hide\n\n# example values\nT, p = 273.15 - 15, 90000.\nÏµ = 1. / CP_planet.molmass_ratio(param_set)\np_sat = TD.saturation_vapor_pressure(param_set, T, TD.Ice())\nq_sat = Ïµ * p_sat / (p + p_sat * (Ïµ - 1.))\nq_snow_range = range(1e-8, stop=5e-3, length=100)\nq_tot = 15e-3\nq_vap = 0.15 * q_sat\nq_liq = 0.\nq_ice = q_tot - q_vap - q_ice\nq = TD.PhasePartition(q_tot, q_liq, q_ice)\nR = TD.gas_constant_air(param_set, q)\nÏ = p / R / T\n\nPL.plot(q_snow_range * 1e3,  [CM1.evaporation_sublimation(param_set, snow, q, q_sno, Ï, T) for q_sno in q_snow_range], xlabel=\"q_snow [g/kg]\", linewidth=3, ylabel=\"snow deposition sublimation rate [1/s]\", label=\"T<0\")\n\nT, p = 273.15 + 15, 90000.\nÏµ = 1. / CP_planet.molmass_ratio(param_set)\np_sat = TD.saturation_vapor_pressure(param_set, T, TD.Ice())\nq_sat = Ïµ * p_sat / (p + p_sat * (Ïµ - 1.))\nq_snow_range = range(1e-8, stop=5e-3, length=100)\nq_tot = 15e-3\nq_vap = 0.15 * q_sat\nq_liq = 0.\nq_ice = q_tot - q_vap - q_ice\nq = TD.PhasePartition(q_tot, q_liq, q_ice)\nR = TD.gas_constant_air(param_set, q)\nÏ = p / R / T\n\nPL.plot!(q_snow_range * 1e3,  [CM1.evaporation_sublimation(param_set, snow, q, q_sno, Ï, T) for q_sno in q_snow_range], xlabel=\"q_snow [g/kg]\", linewidth=3, ylabel=\"snow deposition sublimation rate [1/s]\", label=\"T>0\")\nPL.savefig(\"snow_sublimation_deposition_rate.svg\") # hide\n\nT=273.15\nPL.plot( q_snow_range * 1e3,  [CM1.snow_melt(param_set, q_sno, Ï, T+2) for q_sno in q_snow_range], xlabel=\"q_snow [g/kg]\", linewidth=3, ylabel=\"snow melt rate [1/s]\", label=\"T=2C\")\nPL.plot!(q_snow_range * 1e3,  [CM1.snow_melt(param_set, q_sno, Ï, T+4) for q_sno in q_snow_range], xlabel=\"q_snow [g/kg]\", linewidth=3, label=\"T=4C\")\nPL.plot!(q_snow_range * 1e3,  [CM1.snow_melt(param_set, q_sno, Ï, T+6) for q_sno in q_snow_range], xlabel=\"q_snow [g/kg]\", linewidth=3, label=\"T=6C\")\nPL.savefig(\"snow_melt_rate.svg\") # hide\n","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"(Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"#CloudMicrophysics.jl","page":"Home","title":"CloudMicrophysics.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The CloudMicrophysics.jl is a library of bulk microphysics schemes. So far it includes a 0-moment scheme that instantly removes the precipitable cloud condensate and a simple 1-moment scheme, and an aerosol activation scheme.","category":"page"},{"location":"API/","page":"API","title":"API","text":"CurrentModule = CloudMicrophysics","category":"page"},{"location":"API/#.","page":"API","title":".","text":"","category":"section"},{"location":"API/#Non-equilibrium-cloud-formation","page":"API","title":"Non-equilibrium cloud formation","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"MicrophysicsNonEq\nMicrophysicsNonEq.Ï_relax\nMicrophysicsNonEq.conv_q_vap_to_q_liq_ice","category":"page"},{"location":"API/#CloudMicrophysics.MicrophysicsNonEq","page":"API","title":"CloudMicrophysics.MicrophysicsNonEq","text":"Non-equilibrium bulk microphysics scheme, which includes:\n\ncondensation and evaporation of cloud liquid water and deposition and sublimation of cloud ice (relaxation to equilibrium)\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.MicrophysicsNonEq.Ï_relax","page":"API","title":"CloudMicrophysics.MicrophysicsNonEq.Ï_relax","text":"Ï_relax(param_set, liquid)\nÏ_relax(param_set, ice)\n\nparam_set - abstract set with Earth parameters\nliquid - a type for cloud liquid water\nice - a type for cloud ice\n\nReturns the relaxation timescale for condensation and evaporation of cloud liquid water or the relaxation timescale for sublimation and deposition of cloud ice.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.MicrophysicsNonEq.conv_q_vap_to_q_liq_ice","page":"API","title":"CloudMicrophysics.MicrophysicsNonEq.conv_q_vap_to_q_liq_ice","text":"conv_q_vap_to_q_liq_ice(param_set, liquid, q_sat, q)\nconv_q_vap_to_q_liq_ice(param_set, ice, q_sat, q)\n\nparam_set - abstract set with Earth parameters\nliquid - a type for cloud water\nice - a type for cloud ice\nq_sat - PhasePartition at equilibrium\nq - current PhasePartition\n\nReturns the cloud water tendency due to condensation and evaporation or cloud ice tendency due to sublimation and vapor deposition. The tendency is obtained assuming a relaxation to equilibrium with a constant timescale.\n\n\n\n\n\n","category":"function"},{"location":"API/#moment-precipitation-microphysics","page":"API","title":"0-moment precipitation microphysics","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Microphysics0M\nMicrophysics0M.remove_precipitation","category":"page"},{"location":"API/#CloudMicrophysics.Microphysics0M","page":"API","title":"CloudMicrophysics.Microphysics0M","text":"Zero-moment bulk microphysics scheme that instantly removes\nmoisture above certain threshold.\nThis is equivalent to instanteneous conversion of cloud condensate\ninto precipitation and precipitation fallout with infinite\nterminal velocity.\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.Microphysics0M.remove_precipitation","page":"API","title":"CloudMicrophysics.Microphysics0M.remove_precipitation","text":"remove_precipitation(param_set::APS, q; q_vap_sat)\n\nparam_set - abstract parameter set\nq - current PhasePartition\nq_vap_sat - water vapor specific humidity at saturation\n\nReturns the q_tot tendency due to the removal of precipitation. The tendency is obtained assuming a relaxation with a constant timescale to a state with precipitable water removed. The threshold for when to remove q_tot is defined either by the condensate specific humidity or supersaturation. The thresholds and the relaxation timescale are defined in CLIMAParameters.\n\n\n\n\n\n","category":"function"},{"location":"API/#moment-precipitation-microphysics-2","page":"API","title":"1-moment precipitation microphysics","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Microphysics1M\nMicrophysics1M.v0_rai\nMicrophysics1M.n0_sno\nMicrophysics1M.lambda\nMicrophysics1M.unpack_params\nMicrophysics1M.terminal_velocity\nMicrophysics1M.conv_q_liq_to_q_rai\nMicrophysics1M.conv_q_ice_to_q_sno_no_supersat\nMicrophysics1M.conv_q_ice_to_q_sno\nMicrophysics1M.accretion\nMicrophysics1M.accretion_rain_sink\nMicrophysics1M.accretion_snow_rain\nMicrophysics1M.evaporation_sublimation\nMicrophysics1M.snow_melt","category":"page"},{"location":"API/#CloudMicrophysics.Microphysics1M","page":"API","title":"CloudMicrophysics.Microphysics1M","text":"One-moment bulk microphysics scheme, which includes:\n\nterminal velocity of precipitation\nautoconversion of cloud liquid water into rain and of cloud ice into snow\naccretion due to collisions between categories of condensed species\nevaporation and sublimation of hydrometeors\nmelting of snow into rain\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.Microphysics1M.v0_rai","page":"API","title":"CloudMicrophysics.Microphysics1M.v0_rai","text":"v0_rai(param_set, Ï)\n\nparam_set - abstract set with Earth parameters\nÏ air density\n\nReturns the proportionality coefficient in terminal velocity(r/r0).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.n0_sno","page":"API","title":"CloudMicrophysics.Microphysics1M.n0_sno","text":"n0_sno(param_set, q_sno, Ï)\n\nparam_set - abstract set with Earth parameters\nq_sno -  snow specific humidity\nÏ - air density\n\nReturns the intercept parameter of the assumed Marshall-Palmer distribution of snow particles.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.lambda","page":"API","title":"CloudMicrophysics.Microphysics1M.lambda","text":"lambda(q, Ï, n0, m0, me, r0, Ïm, Îm)\n\nq - specific humidity of rain, ice or snow\nÏ - air density\nn0 - size distribution parameter\nm0, me, Ïm, Îm, r0 - mass(radius) parameters\n\nReturns the rate parameter of the assumed size distribution of particles (rain drops, ice crystals, snow crystals).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.unpack_params","page":"API","title":"CloudMicrophysics.Microphysics1M.unpack_params","text":"unpack_params(param_set, micro, Ï, q_)\n\nparam_set - abstract set with Earth parameters\nmicro - type for cloud ice, rain or snow\nq_ - specific humidity\nÏ - air density\n\nUtility function that unpacks microphysics parameters.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.terminal_velocity","page":"API","title":"CloudMicrophysics.Microphysics1M.terminal_velocity","text":"terminal_velocity(param_set, precip, Ï, q_)\n\nparam_set - abstract set with Earth parameters\nprecip - a type for rain or snow\nÏ - air density\nq_ - rain or snow specific humidity\n\nReturns the mass weighted average terminal velocity assuming a Marshall-Palmer (1948) distribution of rain drops and snow crystals.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.conv_q_liq_to_q_rai","page":"API","title":"CloudMicrophysics.Microphysics1M.conv_q_liq_to_q_rai","text":"conv_q_liq_to_q_rai(param_set, q_liq)\n\nparam_set - abstract set with Earth parameters\nq_liq - liquid water specific humidity\n\nReturns the q_rai tendency due to collisions between cloud droplets (autoconversion), parametrized following Kessler (1995).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.conv_q_ice_to_q_sno_no_supersat","page":"API","title":"CloudMicrophysics.Microphysics1M.conv_q_ice_to_q_sno_no_supersat","text":"conv_q_ice_to_q_sno_no_supersat(param_set, q_ice)\n\nparam_set - abstract set with Earth parameters\nq_ice -  cloud ice specific humidity\n\nReturns the q_sno tendency due to autoconversion from ice. This is a simplified version of a snow autoconversion rate that can be used in simulations where there is no supersaturation (for example in TC.jl when using saturation adjustment).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.conv_q_ice_to_q_sno","page":"API","title":"CloudMicrophysics.Microphysics1M.conv_q_ice_to_q_sno","text":"conv_q_ice_to_q_sno(param_set, q, Ï, T)\n\nparam_set - abstract set with Earth parameters\nq - phase partition\nÏ - air density\nT - air temperature\n\nReturns the q_sno tendency due to autoconversion from ice. Parameterized following Harrington et al. (1996) and Kaul et al. (2015).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.accretion","page":"API","title":"CloudMicrophysics.Microphysics1M.accretion","text":"accretion(param_set, cloud, precip, q_clo, q_pre, Ï)\n\nparam_set - abstract set with Earth parameters\ncloud - type for cloud water or cloud ice\nprecip - type for rain or snow\nq_clo - cloud water or cloud ice specific humidity\nq_pre - rain water or snow specific humidity\nÏ - rain water or snow specific humidity\n\nReturns the source of precipitating water (rain or snow) due to collisions with cloud water (liquid or ice).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.accretion_rain_sink","page":"API","title":"CloudMicrophysics.Microphysics1M.accretion_rain_sink","text":"accretion_rain_sink(param_set, q_ice, q_rai, Ï)\n\nparam_set - abstract set with Earth parameters\nq_ice - cloud ice specific humidity\nq_rai - rain water specific humidity\nÏ - air density\n\nReturns the sink of rain water (partial source of snow) due to collisions with cloud ice.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.accretion_snow_rain","page":"API","title":"CloudMicrophysics.Microphysics1M.accretion_snow_rain","text":"accretion_snow_rain(param_set, type_i, type_j, q_i, q_j, Ï)\n\ni - snow for temperatures below freezing       or rain for temperatures above freezing\nj - rain for temperatures below freezing       or rain for temperatures above freezing\nparam_set - abstract set with Earth parameters\ntype_i, type_j - a type for snow or rain\nq_ - specific humidity of snow or rain\nÏ - air density\n\nReturns the accretion rate between rain and snow. Collisions between rain and snow result in snow at temperatures below freezing and in rain at temperatures above freezing.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.evaporation_sublimation","page":"API","title":"CloudMicrophysics.Microphysics1M.evaporation_sublimation","text":"evaporation_sublimation(param_set, rain, q, q_rai, Ï, T)\nevaporation_sublimation(param_set, snow, q, q_sno, Ï, T)\n\nparam_set - abstract set with Earth parameters\nrain - a type for rain\nsnow - a type for snow\nq - phase partition\nq_rai - rain specific humidity\nq_sno - snow specific humidity\nÏ - air density\nT - air temperature\n\nReturns the tendency due to rain evaporation or snow sublimation.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.snow_melt","page":"API","title":"CloudMicrophysics.Microphysics1M.snow_melt","text":"snow_melt(param_set, q_sno, Ï, T)\n\nparam_set - abstract set with Earth parameters\nq_sno - snow water specific humidity\nÏ - air density\nT - air temperature\n\nReturns the tendency due to snow melt.\n\n\n\n\n\n","category":"function"},{"location":"API/#Aerosol-model","page":"API","title":"Aerosol model","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"AerosolModel\nAerosolModel.Mode_B\nAerosolModel.Mode_Îº\nAerosolModel.AerosolDistribution","category":"page"},{"location":"API/#CloudMicrophysics.AerosolModel","page":"API","title":"CloudMicrophysics.AerosolModel","text":"A container for information on aerosol size distribution\nand chemical properties.\n\nThe size distribution is a sum of lognormal internally mixed modes.\nThe chemical composition can be expressed using kappa parameter\nor hygroscopicity parameter B.\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.AerosolModel.Mode_B","page":"API","title":"CloudMicrophysics.AerosolModel.Mode_B","text":"Mode_B\n\nRepresents the sizes and chemical composition of aerosol particles in one size distribution mode. The mode is assumed to be made up of internally mixed components and follow a lognormal size distribution. The chemical composition of aerosol particles in this mode is described using the parameters from Abdul-Razzak and Ghan 2000.\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.AerosolModel.Mode_Îº","page":"API","title":"CloudMicrophysics.AerosolModel.Mode_Îº","text":"Mode_Îº\n\nRepresents the sizes and chemical composition of aerosol particles in one size distribution mode. The mode is assumed to be made up of internally mixed components and follow a lognormal size distribution. The chemical composition of aerosol particles in this mode is described using the parameters from Petters and Kreidenweis 2007.\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.AerosolModel.AerosolDistribution","page":"API","title":"CloudMicrophysics.AerosolModel.AerosolDistribution","text":"AerosolDistribution\n\nRepresents the aerosol size distribution as a tuple with different modes. All modes have to either be of type ModeB (Abdul-Razzak and Ghan 2000) or of type ModeÎº (Petters and Kreidenweis 2007).\n\nConstructors\n\nAerosolDistribution(Modes::T)\n\n\n\n\n\n","category":"type"},{"location":"API/#Aerosol-activation","page":"API","title":"Aerosol activation","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"AerosolActivation\nAerosolActivation.mean_hygroscopicity_parameter\nAerosolActivation.max_supersaturation\nAerosolActivation.N_activated_per_mode\nAerosolActivation.M_activated_per_mode\nAerosolActivation.total_N_activated\nAerosolActivation.total_M_activated","category":"page"},{"location":"API/#CloudMicrophysics.AerosolActivation","page":"API","title":"CloudMicrophysics.AerosolActivation","text":"Aerosol activation scheme, which includes:\n\nmean hygroscopicity for each mode of the aerosol size distribution\ncritical supersaturation for each mode of the aerosol size distribution\nmaximum supersaturation\ntotal number of particles actived\ntotal mass of particles actived\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.AerosolActivation.mean_hygroscopicity_parameter","page":"API","title":"CloudMicrophysics.AerosolActivation.mean_hygroscopicity_parameter","text":"mean_hygroscopicity_parameter(param_set, ad)\n\nparam_set - abstract set with Earth's parameters\nad - aerosol distribution struct\n\nReturns a tuple of hygroscopicity parameters (one tuple element for each aerosol size distribution mode). The tuple is computed either as mass-weighted B parameters (Abdul-Razzak and Ghan 2000) or volume weighted kappa parameters (Petters and Kreidenweis 2007). Implemented via a dispatch based on aerosol distribution mode type.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.AerosolActivation.max_supersaturation","page":"API","title":"CloudMicrophysics.AerosolActivation.max_supersaturation","text":"max_supersaturation(param_set, ad, T, p, w, q)\n\nparam_set - abstract set with Earth's parameters\nad - aerosol distribution struct\nT - air temperature\np - air pressure\nw - vertical velocity\nq - phase partition\n\nReturns the maximum supersaturation.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.AerosolActivation.N_activated_per_mode","page":"API","title":"CloudMicrophysics.AerosolActivation.N_activated_per_mode","text":"N_activated_per_mode(param_set, ad, T, p, w, q)\n\nparam_set - abstract set with Earth's parameters\nad - aerosol distribution struct\nT - air temperature\np - air pressure\nw - vertical velocity\nq - phase partition\n\nReturns the number of activated aerosol particles in each aerosol size distribution mode.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.AerosolActivation.M_activated_per_mode","page":"API","title":"CloudMicrophysics.AerosolActivation.M_activated_per_mode","text":"M_activated_per_mode(param_set, ad, T, p, w, q)\n\nparam_set - abstract set with Earth's parameters\nad - aerosol distribution struct\nT - air temperature\np - air pressure\nw - vertical velocity\nq - phase partition\n\nReturns the mass of activated aerosol particles per mode of the aerosol size distribution.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.AerosolActivation.total_N_activated","page":"API","title":"CloudMicrophysics.AerosolActivation.total_N_activated","text":"total_N_activated(param_set, ad, T, p, w, q)\n\nparam_set - abstract set with Earth's parameters\nad - aerosol distribution struct\nT - air temperature\np - air pressure\nw - vertical velocity\nq - phase partition\n\nReturns the total number of activated aerosol particles.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.AerosolActivation.total_M_activated","page":"API","title":"CloudMicrophysics.AerosolActivation.total_M_activated","text":"total_M_activated(param_set, ad, T, p, w, q)\n\nparam_set - abstract set with Earth's parameters\nad - aerosol distribution struct\nT - air temperature\np - air pressure\nw - vertical velocity\nq - phase partition\n\nReturns the total mass of activated aerosol particles.\n\n\n\n\n\n","category":"function"},{"location":"API/#Common-utility-functions","page":"API","title":"Common utility functions","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Common\nCommon.G_func","category":"page"},{"location":"API/#CloudMicrophysics.Common","page":"API","title":"CloudMicrophysics.Common","text":"Module for functions shared by different parameterizations.\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.Common.G_func","page":"API","title":"CloudMicrophysics.Common.G_func","text":"G_func(param_set, T, Liquid())\nG_func(param_set, T, Ice())\n\nparam_set - abstract set with earth parameters\nT - air temperature\nLiquid(), Ice() - liquid or ice phase to dispatch over.\n\nUtility function combining thermal conductivity and vapor diffusivity effects.\n\n\n\n\n\n","category":"function"},{"location":"API/#Common-utility-types","page":"API","title":"Common utility types","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"CommonTypes\nCommonTypes.AbstractAerosolDistribution\nCommonTypes.AbstractCloudType\nCommonTypes.AbstractPrecipType\nCommonTypes.LiquidType\nCommonTypes.IceType\nCommonTypes.RainType\nCommonTypes.SnowType","category":"page"},{"location":"API/#CloudMicrophysics.CommonTypes","page":"API","title":"CloudMicrophysics.CommonTypes","text":"Additional type hierarchy to dispatch over for some microphysics parameters\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.CommonTypes.AbstractAerosolDistribution","page":"API","title":"CloudMicrophysics.CommonTypes.AbstractAerosolDistribution","text":"AbstractAerosolDistribution\n\nThe top-level super-type for all aerosol distribution types.\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.AbstractCloudType","page":"API","title":"CloudMicrophysics.CommonTypes.AbstractCloudType","text":"AbstractCloudType\n\nThe top-level super-type for cloud liquid water and cloud ice types\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.AbstractPrecipType","page":"API","title":"CloudMicrophysics.CommonTypes.AbstractPrecipType","text":"AbstractPrecipType\n\nThe top-level super-type for precipitation types (rain and snow)\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.LiquidType","page":"API","title":"CloudMicrophysics.CommonTypes.LiquidType","text":"LiquidType\n\nThe type for cloud liquid water condensate\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.IceType","page":"API","title":"CloudMicrophysics.CommonTypes.IceType","text":"IceType\n\nThe type for cloud ice condensate\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.RainType","page":"API","title":"CloudMicrophysics.CommonTypes.RainType","text":"RainType\n\nThe type for rain\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.SnowType","page":"API","title":"CloudMicrophysics.CommonTypes.SnowType","text":"SnowType\n\nThe type for snow\n\n\n\n\n\n","category":"type"}]
}
