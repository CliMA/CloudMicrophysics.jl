var documenterSearchIndex = {"docs":
[{"location":"Microphysics0M/#Microphysics-0M","page":"0-moment precipitation microphysics","title":"Microphysics 0M","text":"","category":"section"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"The Microphysics0M.jl module defines a 0-moment bulk parameterization of   the moisture sink due to precipitation. It offers a simplified way of removing the excess water   without assuming anything about the size distributions of cloud   or precipitation particles.","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"The q_tot (total water specific humidity) sink due to precipitation   is obtained by relaxation with a constant timescale   to a state with condensate exceeding a threshold value removed. The threshold for removing excess q_tot is defined either by the   condensate specific humidity or supersaturation. The thresholds and the relaxation timescale are defined in   CLIMAParameters.jl.","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"note: Note\nTo remove precipitation instantly, the relaxation timescale should be equal to the timestep length.","category":"page"},{"location":"Microphysics0M/#Moisture-sink-due-to-precipitation","page":"0-moment precipitation microphysics","title":"Moisture sink due to precipitation","text":"","category":"section"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"If based on maximum condensate specific humidity, the sink is defined as:","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"beginequation\n  left fracd  q_totdt right_precip =-\n    fracmax(0 q_liq + q_ice - q_c0)tau_precip\nendequation","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"q_liq, q_ice are cloud liquid water and cloud ice specific humidities,\nq_c0 is the condensate specific humidity threshold above which water is removed,\ntau_precip is the relaxation timescale.","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"If based on saturation excess, the sink is defined as:","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"beginequation\n  left fracd  q_totdt right_precip =-\n    fracmax(0 q_liq + q_ice - S_0  q_vap^sat)tau_precip\nendequation","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"q_liq, q_ice are cloud liquid water and cloud ice specific humidities,\nS_0 is the supersaturation threshold above which water is removed,\nq_vap^sat is the saturation specific humidity,\ntau_precip is the relaxation timescale.","category":"page"},{"location":"Microphysics1M/#Microphysics-1M","page":"1-moment precipitation microphysics","title":"Microphysics 1M","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The Microphysics1M.jl module describes a 1-moment bulk parameterization of   cloud microphysical processes. The module is based on the ideas of   Edwin Kessler (1995),   Wojciech W Grabowski (1998)   and Colleen M Kaul, Jo{\\~a}o Teixeira, Kentaroh Suzuki (2015).","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The cloud microphysics variables are expressed as specific humidities:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"q_tot - total water specific humidity,\nq_vap - water vapor specific humidity,\nq_liq - cloud water specific humidity,\nq_ice - cloud ice specific humidity,\nq_rai - rain specific humidity,\nq_sno - snow specific humidity.","category":"page"},{"location":"Microphysics1M/#Assumed-particle-size-relationships","page":"1-moment precipitation microphysics","title":"Assumed particle size relationships","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Particles are assumed to follow power-law relationships involving the mass(radius), denoted by m(r), the cross section(radius), denoted by a(r), and the terminal velocity(radius), denoted by v_term(r), respectively. The coefficients are defined in the   CLIMAParameters.jl package   and are shown in the table below. For rain and ice they correspond to spherical liquid water drops   and ice particles, respectively. There is no assumed particle shape for snow, and the relationships are   empirical.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"m(r) = chi_m  m_0 left(fracrr_0right)^m_e + Delta_m","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"a(r) = chi_a  a_0 left(fracrr_0right)^a_e + Delta_a","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"v_term(r) = chi_v  v_0 left(fracrr_0right)^v_e + Delta_v","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"r is the particle radius,\nr_0 is the typical particle radius used to nondimensionalize,\nm_0  m_e  a_0  a_e  v_0  v_e  are the default coefficients,\nchi_m, Delta_m, chi_a, Delta_a, chi_v, Delta_v are the coefficients that can be used during model calibration to expand around the default values. Without calibration all chi parameters are set to 1 and all Delta parameters are set to 0.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The above coefficients, similarly to all other microphysics parameters,   are not hardcoded in the final microphysics parameterizations. The goal is to allow easy flexibility when calibrating the scheme. With that said, the assumption about the shape of the particles is used three   times when deriving the microphysics formulae:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The mass transfer equation (\\ref{eq:mass_rate}) used in snow autoconversion, rain evaporation, snow sublimation and snow melt rates is derived assuming spherical particle shapes. To correct for non-spherical shape it should be multiplied by a function of the particle aspect ratio.\nThe geometric collision kernel used for deriving rain-snow accretion rate assumes that both colliding particles are spherical. It does not take into account the reduced cross-section of snow particles that is used when modeling snow - cloud liquid water and snow - cloud ice accretion.\nIn the definition of the Reynolds number that is used when computing ventilation factors.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"symbol definition units default value reference\nr_0^rai typical rain drop radius m 10^-3 \nm_0^rai coefficient in m(r) for rain kg frac43  pi  rho_water  r_0^3 \nm_e^rai exponent in m(r) for rain - 3 \na_0^rai coefficient in a(r) for rain m^2 pi  r_0^2 \na_e^rai exponent in a(r) for rain - 2 \nv_e^rai exponent in v_term(r) for rain - 05 \n    \nr_0^ice typical ice crystal radius m 10^-5 \nm_0^ice coefficient in m(r) for ice kg frac43  pi  rho_ice  r_0^3 \nm_e^ice exponent in m(r) for ice - 3 \n    \nr_0^sno typical snow crystal radius m 10^-3 \nm_0^sno coefficient in m(r) for snow kg 01   r_0^2 eq (6b) Wojciech W Grabowski (1998)\nm_e^sno exponent in m(r) for snow - 2 eq (6b) Wojciech W Grabowski (1998)\na_0^sno coefficient in a(r) for snow m^2 03 pi  r_0^2 alpha in eq(16b) Wojciech W Grabowski (1998).\na_e^sno exponent in a(r) for snow - 2 \nv_0^sno coefficient in v_term(r) for snow fracms 2^94 r_0^14 eq (6b) Wojciech W Grabowski (1998)\nv_e^sno exponent in v_term(r) for snow - 025 eq (6b) Wojciech W Grabowski (1998)","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"rho_water is the density of water,\nrho_ice is the density of ice.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The terminal velocity of an individual rain drop is defined by the balance   between the gravitational acceleration (taking into account   the density difference between water and air) and the drag force. Therefore the v_0^rai is defined as","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nv_0^rai =\n  left(\n    frac83  C_drag left( fracrho_waterrho -1 right)\n  right)^12 (g r_0^rai)^12\nlabeleqvdrop\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"g is the gravitational acceleration,\nC_drag is the drag coefficient,\nrho is the density of air.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nIt would be great to replace the above simple power laws with more accurate relationships. For example: Vitaly I Khvorostyanov, Judith A Curry (2002) or M Karrer, A Seifert, C Siewert, D Ori, A von Lerber, S Kneifel (2020)","category":"page"},{"location":"Microphysics1M/#Assumed-particle-size-distributions","page":"1-moment precipitation microphysics","title":"Assumed particle size distributions","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The particle size distributions are assumed to follow   Marshall-Palmer distribution   John S Marshall, W Mc K Palmer (1948)   eq. 1:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  n(r) = n_0 expleft(- lambda  r right)\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"n_0 and lambda are the Marshall-Palmer distribution parameters.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The n_0 for rain and ice is assumed constant. The n_0 for snow is defined as","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  n_0^sno = mu^sno left(fracrhorho_0 q_snoright)^nu^sno\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"mu^sno and nu^sno are the coefficients\nrho_0 is the typical air density used to nondimensionalize the equation and is equal to 1  kgm^3","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The coefficients are defined in   CLIMAParameters.jl package and are shown in the table below.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"symbol definition units default value reference\nn_0^rai rain drop size distribution parameter frac1m^4 16 cdot 10^6 eq (2) John S Marshall, W Mc K Palmer (1948)\nn_0^ice cloud ice size distribution parameter frac1m^4 2 cdot 10^7 bottom of page 4396 Colleen M Kaul, Jo{\\~a}o Teixeira, Kentaroh Suzuki (2015)\nmu^sno snow size distribution parameter coefficient frac1m^4 436 cdot 10^9  rho_0^nu^sno eq (A1) Colleen M Kaul, Jo{\\~a}o Teixeira, Kentaroh Suzuki (2015)\nnu^sno snow size distribution parameter exponent - 063 eq (A1) Colleen M Kaul, Jo{\\~a}o Teixeira, Kentaroh Suzuki (2015)","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The lambda parameter is defined as","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nlambda =\n  left(\n    frac Gamma(m_e + Delta_m + 1)  chi_m  m_0  n_0\n         q  rho  (r_0)^m_e + Delta_m\n  right)^frac1m_e + Delta_m + 1\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"q is rain, snow or ice specific humidity\nchi_m, m_0, m_e, Delta_m, r_0, and n_0 are the corresponding mass(radius) and size distribution parameters\nGamma() is the gamma function","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The cloud-ice size distribution is used   when computing snow autoconversion rate and rain sink due to accretion. In other derivations cloud ice, similar to cloud liquid water,   is treated as continuous.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nDo we want to keep the n_0 for rain constant and n_0 for snow empirical?\nDo we want to test different size distributions?","category":"page"},{"location":"Microphysics1M/#Parameterized-processes","page":"1-moment precipitation microphysics","title":"Parameterized processes","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Parameterized processes include:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"autoconversion of rain and snow,\naccretion,\nevaporation of rain water,\nsublimation, vapor deposition and melting of snow,\nsedimentation of rain and snow with mass weighted average terminal velocity (cloud water and cloud ice are part of the working fluid and do not sediment).","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Parameters used in the parameterization are defined in   CLIMAParameters.jl package. They consist of:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"symbol definition units default value reference\nC_drag rain drop drag coefficient - 055 C_drag is such that the mass averaged terminal velocity is close to Wojciech W Grabowski, Piotr K Smolarkiewicz (1996)\ntau_acnv_rain cloud liquid to rain water autoconversion timescale s 10^3 eq (5a) Wojciech W Grabowski, Piotr K Smolarkiewicz (1996)\ntau_acnv_snow cloud ice to snow autoconversion timescale s 10^2 \nq_liq_threshold cloud liquid to rain water autoconversion threshold - 5 cdot 10^-4 eq (5a) Wojciech W Grabowski, Piotr K Smolarkiewicz (1996)\nq_ice_threshold cloud ice snow autoconversion threshold - 1 cdot 10^-6 \nr_is threshold particle radius between ice and snow m 625 cdot 10^-6 abstract Jerry Y Harrington, Michael P Meyers, Robert L Walko, William R Cotton (1995)\nE_lr collision efficiency between rain drops and cloud droplets - 08 eq (16a) Wojciech W Grabowski (1998)\nE_ls collision efficiency between snow and cloud droplets - 01 Appendix B Steven A Rutledge, Peterv Hobbs (1983)\nE_ir collision efficiency between rain drops and cloud ice - 1 Appendix B Steven A Rutledge, Peter V Hobbs (1984)\nE_is collision efficiency between snow and cloud ice - 01 bottom page 3649 Hugh Morrison, Andrew Gettelman (2008)\nE_rs collision efficiency between rain drops and snow - 1 top page 3650 Hugh Morrison, Andrew Gettelman (2008)\na_vent^rai b_vent^rai rain drop ventilation factor coefficients - 15 , 053 chosen such that at q_tot=15 gkg and T=288K the evap. rate is close to empirical evap. rate in Wojciech W Grabowski, Piotr K Smolarkiewicz (1996)\na_vent^sno b_vent^sno snow ventilation factor coefficients - 065 , 044 eq (A19) Colleen M Kaul, Jo{\\~a}o Teixeira, Kentaroh Suzuki (2015)\nK_therm thermal conductivity of air fracJm  s  K 24 cdot 10^-2 \nnu_air kinematic viscosity of air fracm^2s 16 cdot 10^-5 \nD_vapor diffusivity of water vapor fracm^2s 226 cdot 10^-5 ","category":"page"},{"location":"Microphysics1M/#Ventilation-factor","page":"1-moment precipitation microphysics","title":"Ventilation factor","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The ventilation factor parameterizes the increase in the mass and heat exchange   for falling particles. Following Axel Seifert, Klaus Dieter Beheng (2006)   eq. 24  the ventilation factor is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  F(r) = a_vent + b_vent  N_Sc^13 N_Re(r)^12\nlabeleqventil_factor\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"a_vent, b_vent are coefficients,\nN_Sc is the Schmidt number,\nN_Re is the Reynolds number of a falling particle.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The Schmidt number is assumed constant:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"N_Sc = fracnu_airD_vapor","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"nu_air is the kinematic viscosity of air,\nD_vapor is the diffusivity of water.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The Reynolds number of a spherical drop is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"N_Re = frac2  r  v_term(r)nu_air","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Applying the terminal velocity(radius) relationship results in","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nF(r) = a_vent +\n       b_vent \n       left(fracnu_airD_vaporright)^frac13 \n       left(frac2  chi_v  v_0\n                  r_0^v_e + Delta_v  nu_airright)^frac12 \n       r^fracv_e + Delta_v + 12\nlabeleqvent_factor\nendequation","category":"page"},{"location":"Microphysics1M/#Terminal-velocity","page":"1-moment precipitation microphysics","title":"Terminal velocity","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The mass weighted terminal velocity v_t is defined following Yoshimitsu Ogura, Tsutomu Takahashi (1971):","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  v_t = fracint_0^infty n(r)  m(r)  v_term(r)  dr\n             int_0^infty n(r)  m(r)  dr\nlabeleqvt\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Integrating over the assumed Marshall-Palmer distribution and using the   m(r) and v_term(r) relationships results in","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  v_t = chi_v  v_0  left(frac1r_0  lambdaright)^v_e + Delta_v\n        fracGamma(m_e + v_e + Delta_m + Delta_v + 1)\n             Gamma(m_e + Delta_m + 1)\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nAssuming a constant drag coefficient is an approximation and it should be size and flow dependent, see for example here. In general we should implement these terminal velocity parameterizations: Vitaly I Khvorostyanov, Judith A Curry (2002) or M Karrer, A Seifert, C Siewert, D Ori, A von Lerber, S Kneifel (2020)","category":"page"},{"location":"Microphysics1M/#Rain-autoconversion","page":"1-moment precipitation microphysics","title":"Rain autoconversion","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Rain autoconversion defines the rate of conversion form cloud liquid water   to rain water due to collisions between cloud droplets. It is parameterized following   Edwin Kessler (1995):","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_acnv =\n    fracmax(0 q_liq - q_liq_threshold)tau_acnv_rain\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"q_liq - liquid water specific humidity,\ntau_acnv_rain - timescale,\nq_liq_threshold - autoconversion threshold.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nThis is the simplest possible autoconversion parameterization. It would be great to implement others and test the impact on precipitation. See for example R. Wood (2005) Table 1 for other simple choices.","category":"page"},{"location":"Microphysics1M/#Snow-autoconversion","page":"1-moment precipitation microphysics","title":"Snow autoconversion","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Snow autoconversion defines the rate of conversion form cloud ice to snow due   the growth of cloud ice by water vapor deposition. It is defined as the change of mass of cloud ice for cloud ice particles   larger than threshold r_is. See Jerry Y Harrington, Michael P Meyers, Robert L Walko, William R Cotton (1995)   for derivation.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracd  q_snodt right_acnv =\n  frac1rho fracddt\n    left( int_r_is^infty m(r) n(r) dr right) =\n    left frac1rho fracdrdt right_r=r_is m(r_is) n(r_is)\n    + frac1rho int_r_is^infty fracdmdt n(r) dr\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The fracdmdt is obtained by solving the water vapor diffusion equation   in spherical coordinates and linking the changes in temperature at the drop   surface to the changes in saturated vapor pressure via the Clausius-Clapeyron   equation, following   Basil John Mason (2010).","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For the simplest case of spherical particles and not taking into account   ventilation effects:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nfracdmdt = 4 pi  r  (S - 1)  G(T)\nlabeleqmass_rate\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"S(q_vap q_vap^sat) = fracq_vapq_vap^sat is saturation,\nq_vap^sat   is the saturation vapor specific humidity (over ice in this case),\nG(T) = left(fracL_sKT left(fracL_sR_v T - 1 right) + fracR_v Tp_vap^sat D right)^-1   combines the effects of thermal conductivity and water diffusivity.\nL_s is the latent heat of sublimation,\nK_thermo is the thermal conductivity of air,\nR_v is the gas constant of water vapor,\nD_vapor is the diffusivity of water vapor","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Using eq. (\\ref{eq:mass_rate}) and the assumed m(r) relationship we obtain","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nfracdrdt = frac4 pi  (S - 1)chi_m  (m_e + Delta_m)\n   left( fracr_0r right)^m_e + Delta_m\n   fracG(T)  r^2m_0\nlabeleqr_rate\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Finally the snow autoconversion rate is computed as","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracd  q_snodt right_acnv =\n   frac1rho 4 pi  (S-1)  G(T) \n   n_0^ice  exp(-lambda_ice r_is)\n   left( fracr_is^2m_e^ice + Delta_m^ice +\n   fracr_is lambda_ice +1lambda_ice^2 right)\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nWe should include ventilation effects.For non-spherical particles the mass rate of growth should be multiplied by a function depending on the particle aspect ratio. For functions proposed for different crystal habitats see Jerry Y Harrington, Michael P Meyers, Robert L Walko, William R Cotton (1995) Appendix B.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"We also have a simplified version of snow autoconversion rate,   to be used in modeling configurations that   don't allow supersaturation to be present in the computational domain. It is formulated similarly to the rain autoconversion:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracd  q_snodt right_acnv =\n    fracmax(0 q_ice - q_ice_threshold)tau_acnv_snow\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"q_liq - liquid water specific humidity,\ntau_acnv_rain - timescale,\nq_liq_threshold - autoconversion threshold.","category":"page"},{"location":"Microphysics1M/#Accretion","page":"1-moment precipitation microphysics","title":"Accretion","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Accretion defines the rates of conversion between different categories due to   collisions between particles.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For the case of collisions between cloud water (liquid water or ice)   and precipitation (rain or snow) the sink of cloud water is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracd  q_cdt right_accr =\n  - int_0^infty n_p(r)  a^p(r)  v_term(r)  E_cp  q_c  dr\nlabeleqaccr_1\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"c subscript indicates cloud water category (cloud liquid water or ice)\np subscript indicates precipitation category (rain or snow)\nE_cp is the collision efficiency.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Integrating over the distribution yields:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracd  q_cdt right_accr =\n  - n_0^p  Pi_a v^p  q_c  E_cp \n    Gamma(Sigma_a v^p + 1) \n    frac1lambda^p \n    left( frac1r_0^p lambda^p\n    right)^Sigma_a v^p\nlabeleqaccrfin\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Pi_a v^p = a_0^p  v_0^p  chi_a^p  chi_v^p\nSigma_a v^p = a_e^p + v_e^p + Delta_a^p + Delta_v^p","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For the case of cloud liquid water and rain and cloud ice and snow collisions,   the sink of cloud water becomes simply the source for precipitation. For the case of cloud liquid water and snow collisions   for temperatures below freezing, the sink of cloud liquid water is   a source for snow. For temperatures above freezing, the accreted cloud droplets   along with some melted snow are converted to rain. In this case eq. (\\ref{eq:accrfin}) describes the sink of cloud liquid water. The sink of snow is proportional to the sink of cloud liquid water with   the coefficient fracc_vlL_f(T - T_freeze),   where c_vl is the isochoric specific heat of liquid water,  L_f is the latent heat of freezing,   and T_freeze is the freezing temperature.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The collisions between cloud ice and rain create snow. The source of snow in this case is a sum of sinks from cloud ice and rain. The sink of cloud ice is defined by eq. (\\ref{eq:accrfin}). The sink of rain is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracd  q_raidt right_accr_ri =\n  - int_0^infty int_0^infty\n  frac1rho  E_ir  n_i(r_i)  n_r(r_r)  a_r(r_r)  m_r(r_r)\n   v_term(r_r)  d r_i d r_r\nlabeleqaccr_ir\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"E_ir is the collision efficiency between rain and cloud ice\nn_i and n_r are the cloud ice and rain size distributions\nm_r, a_r and v_term are the mass(radius),   cross section(radius) and terminal velocity(radius) relations for rain\nr_i and r_r mark integration over cloud ice and rain size   distributions","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Integrating eq.(\\ref{eq:accr_ir}) yields:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracd  q_raidt right_accr_ri =\n  - frac1rho  E_ir  n_0^rai  n_0^ice \n  Pi_m a v^rai\n  Gamma(Sigma_m a v^rai + 1) \n  frac1lambda^ice  lambda^rai \n  left( frac1r_0^rai  lambda^rai\n  right)^Sigma_m a v^rai\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Pi_m a v^rai =  m_0^rai  a_0^rai  v_0^rai  chi_m^rai  chi_a^rai  chi_v^rai\nSigma_m a v^rai = m_e^rai + a_e^rai + v_e^rai + Delta_m^rai + Delta_a^rai + Delta_v^rai","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Collisions between rain and snow result in snow in temperatures below freezing   and in rain in temperatures above freezing. The source term is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracd  q_idt right_accr =\n    int_0^infty int_0^infty frac1rho\n    n_i(r_i)  n_j(r_j)  a(r_i r_j)  m_j(r_j)  E_ij \n    leftv_term(r_i) - v_term(r_j)right  dr_i dr_j\nlabeleqaccr_sr1\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"i stands for rain (TT_freezing) or snow (TT_freezing)\nj stands for snow (TT_freezing) or rain (TT_freezing)\na(r_i r_j) is the crossection of the two colliding particles","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"There are two additional assumptions that we make to integrate   eq.(\\ref{eq:accr_sr1}):","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"leftv_term(r_i) - v_term(r_j)right approx left v_ti - v_tj right We approximate the terminal velocity difference for each particle pair with a difference between mass-weighted mean terminal velocities and move it outside of the integral. See the discussion in Ikawa_and_Saito_1991 page 88.\nWe assume that a(r_i r_j) = pi (r_i + r_j)^2. This corresponds to a geometric formulation of the collision kernel, aka cylindrical formulation, see Lian-Ping Wang, Charmaine N Franklin, Orlando Ayala, Wojciech W Grabowski (2006) for discussion.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The eq.(\\ref{eq:accr_sr1}) can then be integrated as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginalign\nleft fracd  q_idt right_accr  =\n    frac1rho  pi  n_0^i  n_0^j \n    m_0^j  chi_m^j  left(frac1r_0^jright)^m_e^j + Delta_m^j\n     E_ij left v_ti - v_tj right\n    int_0^infty int_0^infty\n    (r_i + r_j)^2\n    r_j^m_e^j + Delta_m^j \n    exp(- lambda_j r_j) \n    exp(- lambda_i r_i) \n    dr_i dr_j \n     =\n    frac1rho  pi  n_0^i  n_0^j  m_0^j  chi_m^j \n    E_ij left v_ti - v_tj right \n    left( frac1r_0^j right)^m_e^j + Delta_m^j\n    left(\n        frac2 Gamma(m_e^j + Delta_m^j + 1)lambda_i^3 lambda_j^m_e^j + Delta_m^j + 1\n        + frac2 Gamma(m_e^j + Delta_m^j + 2) lambda_i^2 lambda_j^m_e^j + Delta_m^j + 2\n        + fracGamma(m_e^j + Delta_m^j + 3)lambda_i lambda_j^m_e^j + Delta_m^j + 3\n    right)\nendalign","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nBoth of the assumptions needed to integrate the snow-rain accretion rate could be revisited:The discussion on page 88 in Ikawa_and_Saito_1991 suggests an alternative approximation of the velocity difference.The (r_i + r_j)^2 assumption for the crossection is inconsistent with the snow crossection used when modelling collisions with cloud water and cloud ice.","category":"page"},{"location":"Microphysics1M/#Rain-evaporation-and-snow-sublimation","page":"1-moment precipitation microphysics","title":"Rain evaporation and snow sublimation","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"We start from a similar equation as when computing snow autoconversion rate but integrate it from 0 to infty.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracdqdt right_evap_subl =\n    frac1rho int_0^infty fracdm(r)dt n(r) dr\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"In contrast to eq.(\\ref{eq:mass_rate}), now we are taking into account   ventilation effects:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  fracdmdt = 4 pi  r  (S - 1)  G(T)  F(r)\nlabeleqmass_rate2\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"F(r) is the rain drop ventilation factor defined in (\\ref{eq:ventil_factor})\nsaturation S is computed over water or ice","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The final integral is:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginalign\nleft fracdqdt right_evap_subl  =\n    frac4 pi n_0rho (S - 1) G(T)\n    int_0^infty\n    left(\n       a_vent +\n       b_vent \n         left(fracnu_airD_vapor right)^frac13 \n         left(fracrr_0 right)^fracv_e + Delta_v2 \n         left(frac2  chi_v  v_0  rnu_air right)^frac12\n    right)\n    r  exp(-lambda r) dr \n     =\n    frac4 pi n_0rho (S - 1) G(T) lambda^-2\n    left(\n       a_vent +\n       b_vent \n         left(fracnu_airD_vapor right)^frac13 \n         left(frac1r_0  lambda right)^fracv_e + Delta_v2 \n         left(frac2  chi_v  v_0nu_air  lambda right)^frac12 \n         Gammaleft( fracv_e + Delta_v + 52 right)\n    right)\nendalign","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For the case of rain we only consider evaporation (S - 1  0). For the case of snow we consider both the source term due to vapor deposition  on snow (S - 1  0) and the sink due to vapor sublimation (S - 1  0).","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nWe should take into account the non-spherical snow shape. Modify the Reynolds number and growth equation.","category":"page"},{"location":"Microphysics1M/#Snow-melt","page":"1-moment precipitation microphysics","title":"Snow melt","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"If snow occurs in temperatures above freezing it is melting into rain. The sink for snow is parameterized again as","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracdqdt right_melt =\n    frac1rho int_0^infty fracdm(r)dt n(r) dr\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For snow melt","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  fracdmdt = 4 pi  r  fracK_thermoL_f (T - T_freeze)  F(r)\nlabeleqmass_rate3\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"F(r) is the ventilation factor defined in (\\ref{eq:ventil_factor})\nL_f is the latent heat of freezing.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"If T  T_freeze:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracdqdt right_evap_subl =\n    frac4 pi  n_0  K_thermorho  L_f (T - T_freeze) lambda^-2\n    left(\n       a_vent +\n       b_vent \n         left( fracnu_airD_vapor right)^frac13 \n         left( frac1r_0  lambda right)^fracv_e + Delta_v2 \n         left( frac2  chi_v  v_0nu_air  lambda right)^frac12 \n         Gamma left( fracv_e + Delta_v + 52 right)\n    right)\nendequation","category":"page"},{"location":"Microphysics1M/#Example-figures","page":"1-moment precipitation microphysics","title":"Example figures","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"import Plots\n\nimport Thermodynamics\nimport CloudMicrophysics\nimport CLIMAParameters\n\nconst PL = Plots\nconst CMT = CloudMicrophysics.CommonTypes\nconst CM1 = CloudMicrophysics.Microphysics1M\nconst TD = Thermodynamics\nconst CP = CLIMAParameters\nconst CMP = CloudMicrophysics.Parameters\n\ninclude(joinpath(pkgdir(CloudMicrophysics), \"test\", \"create_parameters.jl\"))\nFT = Float64\ntoml_dict = CP.create_toml_dict(FT; dict_type = \"alias\")\nconst param_set = cloud_microphysics_parameters(toml_dict)\nthermo_params = CMP.thermodynamics_params(param_set)\n\nconst liquid = CMT.LiquidType()\nconst ice = CMT.IceType()\nconst rain = CMT.RainType()\nconst snow = CMT.SnowType()\n\n# eq. 5d in [Grabowski1996](@cite)\nfunction terminal_velocity_empirical(q_rai::DT, q_tot::DT, ρ::DT, ρ_air_ground::DT) where {DT<:Real}\n    rr  = q_rai / (DT(1) - q_tot)\n    vel = DT(14.34) * ρ_air_ground^DT(0.5) * ρ^-DT(0.3654) * rr^DT(0.1346)\n    return vel\nend\n\n# eq. 5b in [Grabowski1996](@cite)\nfunction accretion_empirical(q_rai::DT, q_liq::DT, q_tot::DT) where {DT<:Real}\n    rr  = q_rai / (DT(1) - q_tot)\n    rl  = q_liq / (DT(1) - q_tot)\n    return DT(2.2) * rl * rr^DT(7/8)\nend\n\n# eq. 5c in [Grabowski1996](@cite)\nfunction rain_evap_empirical(q_rai::DT, q::TD.PhasePartition, T::DT, p::DT, ρ::DT) where {DT<:Real}\n\n    ts_neq = TD.PhaseNonEquil_ρTq(thermo_params, ρ, T, q)\n    q_sat  = TD.q_vap_saturation(thermo_params, ts_neq)\n    q_vap  = q.tot - q.liq\n    rr     = q_rai / (DT(1) - q.tot)\n    rv_sat = q_sat / (DT(1) - q.tot)\n    S      = q_vap/q_sat - DT(1)\n\n    ag, bg = 5.4 * 1e2, 2.55 * 1e5\n    G = DT(1) / (ag + bg / p / rv_sat) / ρ\n\n    av, bv = 1.6, 124.9\n    F = av * (ρ/DT(1e3))^DT(0.525)  * rr^DT(0.525) + bv * (ρ/DT(1e3))^DT(0.7296) * rr^DT(0.7296)\n\n    return DT(1) / (DT(1) - q.tot) * S * F * G\nend\n\n# example values\nq_liq_range  = range(1e-8, stop=5e-3, length=100)\nq_ice_range  = range(1e-8, stop=5e-3, length=100)\nq_rain_range = range(1e-8, stop=5e-3, length=100)\nq_snow_range = range(1e-8, stop=5e-3, length=100)\nρ_air, ρ_air_ground = 1.2, 1.22\nq_liq, q_ice, q_tot = 5e-4, 5e-4, 20e-3\n\nPL.plot( q_rain_range * 1e3, [CM1.terminal_velocity(param_set, rain, ρ_air, q_rai) for q_rai in q_rain_range],     linewidth=3, xlabel=\"q_rain or q_snow [g/kg]\", ylabel=\"terminal velocity [m/s]\", label=\"Rain-CLIMA\")\nPL.plot!(q_snow_range * 1e3, [CM1.terminal_velocity(param_set, snow, ρ_air, q_sno) for q_sno in q_snow_range],     linewidth=3, label=\"Snow-CLIMA\")\nPL.plot!(q_rain_range * 1e3, [terminal_velocity_empirical(q_rai, q_tot, ρ_air, ρ_air_ground) for q_rai in q_rain_range], linewidth=3, label=\"Rain-Empirical\")\nPL.savefig(\"terminal_velocity.svg\") # hide\n\nT = 273.15\nPL.plot( q_liq_range * 1e3, [CM1.conv_q_liq_to_q_rai(param_set, q_liq) for q_liq in q_liq_range], linewidth=3, xlabel=\"q_liq or q_ice [g/kg]\", ylabel=\"autoconversion rate [1/s]\", label=\"Rain\")\nPL.plot!(q_ice_range * 1e3, [CM1.conv_q_ice_to_q_sno(param_set, TD.PhasePartition(q_tot, 0., q_ice), ρ_air, T-5)  for q_ice in q_ice_range], linewidth=3, label=\"Snow T=-5C\")\nPL.plot!(q_ice_range * 1e3, [CM1.conv_q_ice_to_q_sno(param_set, TD.PhasePartition(q_tot, 0., q_ice), ρ_air, T-10) for q_ice in q_ice_range], linewidth=3, label=\"Snow T=-10C\")\nPL.plot!(q_ice_range * 1e3, [CM1.conv_q_ice_to_q_sno(param_set, TD.PhasePartition(q_tot, 0., q_ice), ρ_air, T-15) for q_ice in q_ice_range], linewidth=3, label=\"Snow T=-15C\")\nPL.savefig(\"autoconversion_rate.svg\") # hide\n\nPL.plot( q_rain_range * 1e3, [CM1.accretion(param_set, liquid, rain, q_liq, q_rai, ρ_air) for q_rai in q_rain_range], linewidth=3, xlabel=\"q_rain or q_snow [g/kg]\", ylabel=\"accretion rate [1/s]\", label=\"Liq+Rain-CLIMA\")\nPL.plot!(q_rain_range * 1e3, [CM1.accretion(param_set, ice,    rain, q_ice, q_rai, ρ_air) for q_rai in q_rain_range], linewidth=3, label=\"Ice+Rain-CLIMA\")\nPL.plot!(q_snow_range * 1e3, [CM1.accretion(param_set, liquid, snow, q_liq, q_sno, ρ_air) for q_sno in q_snow_range], linewidth=3, label=\"Liq+Snow-CLIMA\")\nPL.plot!(q_snow_range * 1e3, [CM1.accretion(param_set, ice,    snow, q_ice, q_sno, ρ_air) for q_sno in q_snow_range], linewidth=4, linestyle=:dash, label=\"Ice+Snow-CLIMA\")\nPL.plot!(q_rain_range * 1e3, [accretion_empirical(q_rai, q_liq, q_tot) for q_rai in q_rain_range], linewidth=3, label=\"Liq+Rain-Empirical\")\nPL.savefig(\"accretion_rate.svg\") # hide\n\nq_ice = 1e-6\nPL.plot(q_rain_range * 1e3, [CM1.accretion_rain_sink(param_set, q_ice, q_rai, ρ_air) for q_rai in q_rain_range], linewidth=3, xlabel=\"q_rain or q_snow [g/kg]\", ylabel=\"accretion rain sink rate [1/s]\", label=\"q_ice=1e-6\")\nq_ice = 1e-5\nPL.plot!(q_rain_range * 1e3, [CM1.accretion_rain_sink(param_set, q_ice, q_rai, ρ_air) for q_rai in q_rain_range], linewidth=3, xlabel=\"q_rain or q_snow [g/kg]\", ylabel=\"accretion rain sink rate [1/s]\", label=\"q_ice=1e-5\")\nq_ice = 1e-4\nPL.plot!(q_rain_range * 1e3, [CM1.accretion_rain_sink(param_set, q_ice, q_rai, ρ_air) for q_rai in q_rain_range], linewidth=3, xlabel=\"q_rain or q_snow [g/kg]\", ylabel=\"accretion rain sink rate [1/s]\", label=\"q_ice=1e-4\")\nPL.savefig(\"accretion_rain_sink_rate.svg\") # hide\n\nq_sno = 1e-6\nPL.plot(q_rain_range * 1e3, [CM1.accretion_snow_rain(param_set, rain, snow, q_rai, q_sno, ρ_air) for q_rai in q_rain_range], linewidth=3, xlabel=\"q_rain [g/kg]\", ylabel=\"snow-rain accretion rate [1/s] T>0\", label=\"q_snow=1e-6\")\nq_sno = 1e-5\nPL.plot!(q_rain_range * 1e3, [CM1.accretion_snow_rain(param_set, rain, snow, q_rai, q_sno, ρ_air) for q_rai in q_rain_range], linewidth=3, label=\"q_snow=1e-5\")\nq_sno = 1e-4\nPL.plot!(q_rain_range * 1e3, [CM1.accretion_snow_rain(param_set, rain, snow, q_rai, q_sno, ρ_air) for q_rai in q_rain_range], linewidth=3, label=\"q_snow=1e-4\")\nPL.savefig(\"accretion_snow_rain_above_freeze.svg\") # hide\n\nq_rai = 1e-6\nPL.plot(q_snow_range * 1e3, [CM1.accretion_snow_rain(param_set, snow, rain, q_sno, q_rai, ρ_air) for q_sno in q_snow_range], linewidth=3, xlabel=\"q_snow [g/kg]\", ylabel=\"snow-rain accretion rate [1/s] T<0\", label=\"q_rain=1e-6\")\nq_rai = 1e-5\nPL.plot!(q_snow_range * 1e3, [CM1.accretion_snow_rain(param_set, snow, rain, q_sno, q_rai, ρ_air) for q_sno in q_snow_range], linewidth=3, label=\"q_rain=1e-5\")\nq_rai = 1e-4\nPL.plot!(q_snow_range * 1e3, [CM1.accretion_snow_rain(param_set, snow, rain, q_sno, q_rai, ρ_air) for q_sno in q_snow_range], linewidth=3, label=\"q_rain=1e-4\")\nPL.savefig(\"accretion_snow_rain_below_freeze.svg\") # hide\n\n# example values\nT, p = 273.15 + 15, 90000.\nϵ = 1. / CMP.molmass_ratio(param_set)\np_sat = TD.saturation_vapor_pressure(thermo_params, T, TD.Liquid())\nq_sat = ϵ * p_sat / (p + p_sat * (ϵ - 1.))\nq_rain_range = range(1e-8, stop=5e-3, length=100)\nq_tot = 15e-3\nq_vap = 0.15 * q_sat\nq_ice = 0.\nq_liq = q_tot - q_vap - q_ice\nq = TD.PhasePartition(q_tot, q_liq, q_ice)\nR = TD.gas_constant_air(thermo_params, q)\nρ = p / R / T\n\nPL.plot(q_rain_range * 1e3,  [CM1.evaporation_sublimation(param_set, rain, q, q_rai, ρ, T) for q_rai in q_rain_range], xlabel=\"q_rain [g/kg]\", linewidth=3, ylabel=\"rain evaporation rate [1/s]\", label=\"ClimateMachine\")\nPL.plot!(q_rain_range * 1e3, [rain_evap_empirical(q_rai, q, T, p, ρ) for q_rai in q_rain_range], linewidth=3, label=\"empirical\")\nPL.savefig(\"rain_evaporation_rate.svg\") # hide\n\n# example values\nT, p = 273.15 - 15, 90000.\nϵ = 1. / CMP.molmass_ratio(param_set)\np_sat = TD.saturation_vapor_pressure(thermo_params, T, TD.Ice())\nq_sat = ϵ * p_sat / (p + p_sat * (ϵ - 1.))\nq_snow_range = range(1e-8, stop=5e-3, length=100)\nq_tot = 15e-3\nq_vap = 0.15 * q_sat\nq_liq = 0.\nq_ice = q_tot - q_vap - q_liq\nq = TD.PhasePartition(q_tot, q_liq, q_ice)\nR = TD.gas_constant_air(thermo_params, q)\nρ = p / R / T\n\nPL.plot(q_snow_range * 1e3,  [CM1.evaporation_sublimation(param_set, snow, q, q_sno, ρ, T) for q_sno in q_snow_range], xlabel=\"q_snow [g/kg]\", linewidth=3, ylabel=\"snow deposition sublimation rate [1/s]\", label=\"T<0\")\n\nT, p = 273.15 + 15, 90000.\nϵ = 1. / CMP.molmass_ratio(param_set)\np_sat = TD.saturation_vapor_pressure(thermo_params, T, TD.Ice())\nq_sat = ϵ * p_sat / (p + p_sat * (ϵ - 1.))\nq_snow_range = range(1e-8, stop=5e-3, length=100)\nq_tot = 15e-3\nq_vap = 0.15 * q_sat\nq_liq = 0.\nq_ice = q_tot - q_vap - q_liq\nq = TD.PhasePartition(q_tot, q_liq, q_ice)\nR = TD.gas_constant_air(thermo_params, q)\nρ = p / R / T\n\nPL.plot!(q_snow_range * 1e3,  [CM1.evaporation_sublimation(param_set, snow, q, q_sno, ρ, T) for q_sno in q_snow_range], xlabel=\"q_snow [g/kg]\", linewidth=3, ylabel=\"snow deposition sublimation rate [1/s]\", label=\"T>0\")\nPL.savefig(\"snow_sublimation_deposition_rate.svg\") # hide\n\nT=273.15\nPL.plot( q_snow_range * 1e3,  [CM1.snow_melt(param_set, q_sno, ρ, T+2) for q_sno in q_snow_range], xlabel=\"q_snow [g/kg]\", linewidth=3, ylabel=\"snow melt rate [1/s]\", label=\"T=2C\")\nPL.plot!(q_snow_range * 1e3,  [CM1.snow_melt(param_set, q_sno, ρ, T+4) for q_sno in q_snow_range], xlabel=\"q_snow [g/kg]\", linewidth=3, label=\"T=4C\")\nPL.plot!(q_snow_range * 1e3,  [CM1.snow_melt(param_set, q_sno, ρ, T+6) for q_sno in q_snow_range], xlabel=\"q_snow [g/kg]\", linewidth=3, label=\"T=6C\")\nPL.savefig(\"snow_melt_rate.svg\") # hide\n","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"(Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"IceNucleation/#Ice-Nucleation","page":"Ice Nucleation","title":"Ice Nucleation","text":"","category":"section"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"The IceNucleation.jl module includes   the parameterization of activation of dust aerosol particles into ice crystals   via deposition of water vapor and water activity based parameterization of immersion freezing. These are heterogeneous ice nucleation processes. The parameterization for deposition on dust particles is an implementation of   the empirical formulae from O. Möhler, P. R. Field, P. Connolly, S. Benz, H. Saathoff, M. Schnaiter, R. Wagner, R. Cotton, M. Krämer, A. Mangold, A. J. Heymsfield (2006)   and is valid for two types of dust particles:   Arizona Test Dust and desert dust from Sahara.   The parameterization for immersion freezing is an implementation of Daniel A. Knopf, Peter A. Alpert (2013)    and is valid for droplets containing sulphuric acid.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"note: Note\nFuture work includes adding parameterizations for other nucleation paths such as heterogeneous immersion freezing or homogeneous freezing and modeling the competition between them.","category":"page"},{"location":"IceNucleation/#Activated-fraction-for-deposition-freezing-on-dust","page":"Ice Nucleation","title":"Activated fraction for deposition freezing on dust","text":"","category":"section"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"The parameterization models the activated fraction   as an empirical function of ice saturation ratio,   see eq. (3) in O. Möhler, P. R. Field, P. Connolly, S. Benz, H. Saathoff, M. Schnaiter, R. Wagner, R. Cotton, M. Krämer, A. Mangold, A. J. Heymsfield (2006).","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"beginequation\nf_i(S_i) = expa(S_i - S_0) - 1\nendequation","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"where:","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"f_i is the activated fraction   (the ratio of aerosol particles acting as ice nuclei to the total number of aerosol particles),\nS_i is the ice saturation ratio   (the ratio of water vapor partial pressure and the water vapor partial pressure at saturation over ice),\nS_0 is the threshold ice saturation ratio,\na is a scaling parameter dependent on aerosol properties and temperature.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"Limited experimental values for the free parameters S_0 and a can be found in O. Möhler, P. R. Field, P. Connolly, S. Benz, H. Saathoff, M. Schnaiter, R. Wagner, R. Cotton, M. Krämer, A. Mangold, A. J. Heymsfield (2006). Both parameters are dependent on aerosol properties and temperature.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"note: Note\nFor a f_i values above 0.08 or S_i between 1.35 and 1.5, freezing occurs in a different ice nucleation mode (either a second deposition or other condensation type mode).","category":"page"},{"location":"IceNucleation/#ABIFM-for-Sulphuric-Acid-Containing-Droplets","page":"Ice Nucleation","title":"ABIFM for Sulphuric Acid Containing Droplets","text":"","category":"section"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"Water Activity-Based Immersion Freezing Model (ABFIM)    is a method of parameterizing immersion freezing inspired by the time-dependent   classical nucleation theory (CNT). More on CNT can be found in S. Karthika, T. K. Radhakrishnan, P. Kalaichelvi (2016).    The nucleation rate coefficient, J, describes the number of ice nuclei formed per unit area    per unit time and can be determined by the water activity, a_w. This parameterization follows   Daniel A. Knopf, Peter A. Alpert (2013), Thomas Koop (2002), D. M. Murphy, T. Koop (2005), and Beiping Luo, Kenneth S. Carslaw, Thomas Peter, Simon L. Clegg (1995). In this model,   aerosols are assumed to contain an insoluble and soluble material. When immersed in water,   the soluble material diffuses into the liquid water to create a sulphuric acid solution.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"Using empirical coefficients, m and c, from Daniel A. Knopf, Peter A. Alpert (2013),    the heterogeneous nucleation rate coefficient in units of cm^-2s^-1 can be determined by the linear equation","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"beginequation\n  log_10J_het = m Delta a_w + c\nendequation","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"note: Note\nOur source code for the nucleation rate coefficient returns  J in base SI units.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"Delta a_wis the difference between the water activity of the droplet, a_w, and the water activity of ice at the same temperature, a_wice(T). From Thomas Koop (2002), ","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"beginequation\n  a_w = fracp_solp_sat\nendequation","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"beginequation\n  a_wice = fracp_isatp_sat\nendequation","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"where p_sol is saturated vapor pressure of water above solution, p_sat   is saturated vapor pressure above pure liquid water, and p_isat is saturated   vapor pressure above ice. p_sol is determined in mbar using a parameterization   for supercooled, binary H_2SO_4H_2O solution from Beiping Luo, Kenneth S. Carslaw, Thomas Peter, Simon L. Clegg (1995) which is valid for 185K  T  235K:","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"beginequation\n  ln(p_sol) = 23306 - 53465x + 12xw_h - 819xw_h^2 + frac1T(-5814 + 9289x - 18767xw_h)\nendequation","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"where x is the weight fraction of sulphuric acid in the droplets   (i.e. if droplets are 10% sulphuric acid by mass, x = 01), w_h = 14408x,   and temperature is in Kelvins.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"Once J_het is calculated, it can be used to determine the ice production rate, P_ice, per second via immersion freezing.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"beginequation\n  P_ice = J_hetA(N_tot-N_ice)\nendequation","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"where A is surface area of an individual ice nuclei, N_tot is total number    of ice nuclei, and N_ice is number of ice crystals already in the system. ","category":"page"},{"location":"IceNucleation/#Homogeneous-Freezing-for-Sulphuric-Acid-Containing-Droplets","page":"Ice Nucleation","title":"Homogeneous Freezing for Sulphuric Acid Containing Droplets","text":"","category":"section"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"Homogeneous freezing occurs when supercooled liquid droplets freeze on their own.   Closly based off Thomas Koop, et al (2000), this parameterization determines a homoegneous nucleation   rate coefficient, J_hom, using water activity. The change in water activity,   Delta a_w(cTP), can be found in the same fashion that it is determined under the ABIFM   section above. It is then used to empirically calculate J_hom(Delta a_w) with units of   cm^-3s^-1.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"The nucleation rate coefficient is determined with the cubic function from Thomas Koop, et al (2000)","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"beginequation\n  logJ_hom = -9067 + 8502 Delta a_w - 26924(Delta a_w)^2 + 29180(Delta a_w)^3\nendequation","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"This parameterization is valid only when 026  Delta a_w  036 and 185K  T  235K.","category":"page"},{"location":"IceNucleation/#ABIFM-Example-Figures","page":"Ice Nucleation","title":"ABIFM Example Figures","text":"","category":"section"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"import Plots\n\nimport CloudMicrophysics\nimport CLIMAParameters\nimport Thermodynamics\n\nconst PL = Plots\nconst IN = CloudMicrophysics.HetIceNucleation\nconst CMP = CloudMicrophysics.Parameters\nconst CT = CloudMicrophysics.CommonTypes\nconst CO = CloudMicrophysics.Common\nconst CP =  CLIMAParameters\nconst TD = Thermodynamics\n\ninclude(joinpath(pkgdir(CloudMicrophysics), \"test\", \"create_parameters.jl\"))\nFT = Float64\ntoml_dict = CP.create_toml_dict(FT; dict_type = \"alias\")\nconst prs = cloud_microphysics_parameters(toml_dict)\nthermo_params = CMP.thermodynamics_params(prs)\n\n# Initializing\ntemp = collect(210.0:2:232.0) # air temperature\nx = 0.1                     # wt% sulphuric acid in droplets\nDelta_a = Vector{Float64}(undef, length(temp))\nJ = Vector{Float64}(undef, length(temp))\n\n# Knopf and Alpert 2013 Figure 4A\n# https://doi.org/10.1039/C3FD00035D \ndust_type = CT.KaoliniteType()\n\nit = 1\nfor T in temp\n        Delta_a[it] = CO.Delta_a_w(prs, x, T)\n        J[it] = IN.ABIFM_J(dust_type, Delta_a[it])\n        global it += 1\nend\nlog10J_converted = @. log10(J*1e-4)\n\n# data read from Fig 4 in Knopf & Alpert 2013\n# using https://automeris.io/WebPlotDigitizer/\nKA13_Delta_a_obs = [0.13641, 0.16205, 0.21538, 0.23897, 0.24513, 0.24718, 0.25026, 0.25128, 0.25231, 0.25333, 0.25538, 0.25744, 0.25846, 0.25949, 0.26051, 0.26051, 0.26462, 0.26462, 0.26872, 0.26974, 0.27077, 0.27077, 0.27179, 0.27385, 0.27692, 0.27795, 0.27795, 0.27795, 0.28308, 0.28410, 0.28410, 0.28615, 0.28718, 0.28718, 0.29128, 0.29128, 0.29231, 0.29333, 0.29744, 0.29744, 0.29744, 0.29949, 0.30359, 0.30462, 0.30564, 0.30667, 0.31077, 0.31077, 0.31077]\nKA13_log10J_obs = [-3.51880, -3.20301, 2.21053, 2.57143, 2.25564, 3.56391, 3.20301, 2.25564, 3.78947, 4.42105, 3.51880, 2.84211, 4.15038, 3.24812, 3.78947, 4.37594, 3.38346, 4.46617, 4.06015, 4.73684, 4.06015, 3.60902, 6.13534, 4.51128, 4.37594, 4.82707, 4.96241, 5.23308, 3.92481, 5.36842, 5.63910, 5.81955, 4.60150, 4.96241, 5.50376, 6.00000, 5.14286, 5.77444, 5.41353, 6.09023, 5.77444, 5.14286, 6.18045, 5.86466, 5.54887, 5.27820, 6.09023, 5.77444, 5.54887]\n\nKA13_Delta_a_param = [0.10256, 0.35692, 0.21949]\nKA13_log10J_param = [-4.91729, 8.97744, 1.44361]\n\nPL.plot(Delta_a, log10J_converted, label=\"CliMA\", xlabel=\"Delta a_w [unitless]\", ylabel=\"log10(J) [cm^-2 s^-1]\")\nPL.scatter!(KA13_Delta_a_obs, KA13_log10J_obs, markercolor = :black, label=\"paper observations\")\nPL.plot!(KA13_Delta_a_param, KA13_log10J_param, linecolor = :red, label=\"paper parameterization\")\n\nPL.savefig(\"Knopf_Alpert_fig_1.svg\")","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"(Image: )","category":"page"},{"location":"AerosolNucleation/#Aerosol-Nucleation","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"Homogeneous aerosol nucleation describes the formation of aerosol particles from trace gases. The process occurs when the collisions and clustering   of individual trace gas molecules outpace the cluster evaporation rate. It typically involves sulfuric acid,   and is a significant source of ultrafine aerosol particles.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"The Nucleation.jl module contains parameterizations of different nucleation paths:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"binary sulfuric acid - water nucleation, from E.M. Dunne, et al (2016),\nternary sulfuric acid - water - ammonia nucleation, from E.M. Dunne, et al (2016),\npure organic nucleation, from Jasper Kirkby, et al (2016),\norganic with sulfuric acid nucleation, from Francesco. Riccobono, et al (2014).","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"The parameterizations are based on the CLOUD   experiments at CERN and return nucleation rates for 1.7nm particles","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"note: Note\nIn the below documentation we show the rates as described in the original papers  with concentrations in units of cm^-3 (or additionally normalized by reference concentrations)  and the nucleation rates in units of cm^-3 s^-1.  Our actual implementation uses only base SI units.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"note: Note\nOne of the highlights of CLOUD measurements is the incorporation of ion-induced nucleation.  We can assume ion concentration is a prescribed function of height,  but we still need to learn what would make a good prescribed profile.","category":"page"},{"location":"AerosolNucleation/#Binary-and-ternary-sulfuric-acid-nucleation","page":"Aerosol Nucleation","title":"Binary and ternary sulfuric acid nucleation","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"This is an implementation of E.M. Dunne, et al (2016), see Appendix sections 8-10 for details. J_H_2SO_4 is the binary H_2SO_4-H_2O nucleation rate     and J_H_2SO_4NH_3 is the ternary H_2SO_4-NH_3-H_2O nucleation rate:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"J_H_2SO_4 =\n    k_bn(T)  H_2SO_4^p_bn\n    +\n    k_bi(T)  H_2SO_4^p_bi  n_-","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"J_H_2SO_4NH_3 =\n    k_tn(T)  f(H_2SO_4NH_3)  H_2SO_4^p_tn\n    +\n    k_ti(T)  f(H_2SO_4NH_3)  H_2SO_4^p_ti  n_-","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"where:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"cdot denotes the concentration,\nk_xy is an empirical function of temperature T,\nf_y is an empirical function of H_2SO_4 and NH_3.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"ln  k_xy(T) = u_xy - expleft(v_xyleftfracT1000-w_xyrightright)","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"f_y(H_2SO_4NH_3) = fracNH_3a_y + fracH_2SO_4^p_tyNH_3^p_Ay","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"The values of free parameters p, u, v, w, and a are defined in E.M. Dunne, et al (2016).","category":"page"},{"location":"AerosolNucleation/#Example-plots","page":"Aerosol Nucleation","title":"Example plots","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"Below figure reproduces results from E.M. Dunne, et al (2016) without negative ion concentrations.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"include(\"nucleation_plotting/CLOUD_Nucleation_Plots.jl\")","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"(Image: )","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"H. Vehkamäki, M. Kulmala, I. Napari, K. E. J. Lehtinen, C. Timmreck, M. Noppel, A. Laaksonen (2002) is a commonly used parameterization of binary H_2SO_4-H_2O nucleation. The parameterization is a fit to the theoretical nucleation rate   and includes the effects of relative humidity. Below we show a comparison between the Vehkamaki et al 2002 parameterization   and the Dunne et al 2016 parameterization for two relative humidities.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"include(\"nucleation_plotting/compare_vehkamaki_CLOUD_nucleation.jl\")","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"(Image: ) (Image: )","category":"page"},{"location":"AerosolNucleation/#Pure-organic-nucleation","page":"Aerosol Nucleation","title":"Pure organic nucleation","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"Pure organic nucleation is parameterized based on Jasper Kirkby, et al (2016). The J_org is the organic nucleation rate given by:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"J_org =\n    J_norg + J_iorg =\n    a_1  HOM^a_2 + a_5HOM\n    +\n    a_3  HOM^a_4 + a_5HOM  n_pm","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"where:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"HOM is the concentration of highly oxygenated organic molecules from monoterpene (MT) oxidation,\nn_pmis the ion concentration.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"The HOM is parameterized as:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"HOM =\n    fracY_MTO_3  k_MTO_3  MT  O_3\n    +\n    Y_MTOH  k_MTOH  MT  OH \n    CS","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"where:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"Y_MTO_3, Y_MTOH are the HOM yields from MT oxidation with O_3 and OH radicals in the CLOUD chamber respectively,\nMT is the monoterpene concentration,\nCS is the condensation sink (s^-1).","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"The k_MTO_3 k_MTOH are functions of temperature T given by:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"k_MTO_3 = 805  10^-16  exp(444T)\n\nk_MTOH = 12  10^-11  exp(444T)","category":"page"},{"location":"AerosolNucleation/#Example-plots-2","page":"Aerosol Nucleation","title":"Example plots","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"include(\"nucleation_plotting/Kirkby_organic_nucleation_plots.jl\")","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"(Image: )","category":"page"},{"location":"AerosolNucleation/#Nucleation-of-organics-with-sulfuric-acid","page":"Aerosol Nucleation","title":"Nucleation of organics with sulfuric acid","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"This parameterization is given by Francesco. Riccobono, et al (2014). The nucleation rate J_H_2SO_4org is given by:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"J_H_2SO_4org= 05  k_H_2SO_4org  H_2SO_4^2  BioOxOrg","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"where:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"[H2SO4] is the sulfuric acid concentration,\n[BioOxOrg] is the concentration of highly oxygenated organic molecules.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"BioOxOrg is a proxy for HOM, but represents a different group of compounds from HOM,   due to different measurement techniques. An empirical derivation is given by:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"BioOxOrg = frack_MTOH  MT  OHCS","category":"page"},{"location":"AerosolNucleation/#Example-plots-3","page":"Aerosol Nucleation","title":"Example plots","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"Below is a plot reproducing the results from Francesco. Riccobono, et al (2014), with a constant H_2SO_4 concentration of `2.6e6 cm\\^{-3}.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"include(\"nucleation_plotting/Riccobono_mixed_nucleation_plots.jl\")","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"(Image: )","category":"page"},{"location":"AerosolNucleation/#Apparent-nucleation-rate","page":"Aerosol Nucleation","title":"Apparent nucleation rate","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"It can happen that the parameterized nucleation rate is   defined for aerosol particles that are too small to be represented in an aerosol module. The apparent nucleation rate parameterization takes into account the   growth rate due to condensation, and sink terms to coagulation   and outputs the nucleation rate at a larger aerosol particle size. The parameterization is based on Kari E.J. Lehtinen, Miikka {Dal Maso}, Markku Kulmala, Veli-Matti Kerminen (2007).","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"The apparent nucleation rate J_x at diameter d_x is given by:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"J_x = J_1  expleft(-gamma  d_1  fracCG(d_1)GRright)","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"where:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"J_1 is the nucleation rate at diameter d_1,\nCG(d_1) is the coagulation rate at diameter d_1,\nGR is the growth rate by condensation.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"The parameter gamma is parameterized as:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"gamma = frac1m + 1  leftleft(fracd_xd_1right)^(m + 1) - 1right","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"where:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"m can be prescribed as a constant value between -1.5 and -1.9 or computed as","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"m = fraclog(CG(d_x)  CG(d_1))(log(d_x  d_1)","category":"page"},{"location":"AerosolNucleation/#Example-plots-4","page":"Aerosol Nucleation","title":"Example plots","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"include(\"nucleation_plotting/lehtinen_apparent_nucleation_rate.jl\")","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"(Image: )","category":"page"},{"location":"IceNucleationBox/#dimensional-ice-nucleation-model","page":"Box model ice nucleation example","title":"0-dimensional ice nucleation model","text":"","category":"section"},{"location":"IceNucleationBox/#Equations","page":"Box model ice nucleation example","title":"Equations","text":"","category":"section"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"This is a 0-dimensional adiabatic parcel model for testing nucleation schemes. It is based on Alexei V. Korolev, Ilia P. Mazin (2003), as well as the cirrus box model   B. Kärcher, J. Hendricks, U. Lohmann (2006), C. Tully, D. Neubauer, U. Lohmann (2022). The model solves for saturation in a 0-dimensional   adiabatic parcel raising with constant velocity.","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"note: Note\nFor now, the equations are written assuming that only the water vapor and cloud ice are present in the system.","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"We define ice saturation ratio S_i","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\nS_i = fracee_si\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"e - is the partial pressure of water vapor,\ne_si - is the partial pressure of water vapor at saturation over ice.","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"The change in saturation can be described as","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\nfracdS_idt = frac1e_si fracdedt - fracee_si^2 fracde_sidt\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"From ideal gas law the partial pressure of water vapor can be written as","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\ne = q_v p fracR_vR_a\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"q_v is the water vapor specific humidity\np is the air pressure\nR_v, R_a are the gas constants for water vapor and air.","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"The change in partial pressure can be written as","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\nfracdedt = fracdq_vdt p fracR_vR_a + q_v fracdpdtfracR_vR_a\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"From the Clausius–Clapeyron relation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\nfracde_sidt = fracL_s e_siR_v T^2 fracdTdt\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"L_s is the latent heat of sublimation\nT is the temperature.","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"From the moist adiabatic assumption","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\nfracdTdt = fracR_a Tc_p p fracdpdt + fracL_wc_p fracdq_ldt + fracL_sc_p fracd q_idt\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"L_w is the latent heat of evaporation.","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"From hydrostatic balance and assuming constant vertical velocity:","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\nfracdpdt = -fracp gR_a T w\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"g is the gravitational acceleration\nw is the constant vertical velocity.","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"Assuming only water vapor and ice are present q_l = 0, fracdq_vdt = -fracdq_idt, and rearranging the terms","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\nfracdS_idt = a_1 w S_i - left(a_2 + a_3 S_iright) fracdq_idt\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\na_1 = fracL_s gc_p T^2 R_v - fracgR_a T\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\na_2 = fracpe_si fracR_vR_a\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\na_3 = fracL_s^2R_v T^2 c_p\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"The crux of the problem is modeling the fracdq_idt for different homogeneous and heterogeneous ice nucleation paths. For now we only consider the water vapor deposition on dust particles.","category":"page"},{"location":"IceNucleationBox/#Water-vapour-deposition-on-dust","page":"Box model ice nucleation example","title":"Water vapour deposition on dust","text":"","category":"section"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"For the simplest case of a spherical ice particle growing through water vapor deposition (see discussion), the change of it's mass is defined as","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\n  fracdmdt = 4 pi  r  alpha_m  (S_i - 1)  G(T)\n  labeleqmassratesphere\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"r is the particle radius,\nalpha_m is the accommodation coefficient that takes into account the fact that not all water vapor molecules   that arrive at the particle surface will join the growing crystal,\nG(T) = left(fracL_sKT left(fracL_sR_v T - 1 right) + fracR_v Te_si D right)^-1   combines the effects of thermal conductivity and water diffusivity,\nK is the thermal conductivity of air,\nD is the diffusivity of water vapor.","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"note: Note\nThe r in eq. (\\ref{eq:massratesphere}) should be replaced by the capacitance C, when considering non-spherical particles. For a sphere C=r, for a circular disc C=2rpi.","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"The rate of change of ice specific humidity q_i can be computed as","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\n  fracd  q_idt =\n  frac1rho int_0^infty fracdmdt n(r) dr\n  labeleqqi_rat\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"Assuming that the size distribution of nucleated and growing ice crystals is a delta function","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\nn(r) = N_act delta(r-r_0)\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"eq. (\\ref{eq:qi_rat}) can be written as","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\n  fracd  q_idt =\n  frac1rho N_act alpha_m 4 pi  r_0  (S_i - 1)  G(T)\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"where N_act is the number of activated ice particles.","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"N_act can be computed from activated fraction f_i","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"beginequation\n  N_act = N_tot * f_i\nendequation","category":"page"},{"location":"IceNucleationBox/#Example-figures","page":"Box model ice nucleation example","title":"Example figures","text":"","category":"section"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"Here we show example simulation results from the adiabatic parcel model. The model is run three times for 30 minutes simulation time,   (shown by three different colors on the plot). Between each run the water vapor specific humidity is changed,   while keeping all other state variables the same as at the last time step   of the previous run. The prescribed vertical velocity is equal to 3.5 cm/s.","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"include(\"../../parcel/parcel.jl\")","category":"page"},{"location":"IceNucleationBox/","page":"Box model ice nucleation example","title":"Box model ice nucleation example","text":"(Image: )","category":"page"},{"location":"MicrophysicsNonEq/#Microphysics-NonEquilibrium","page":"Non-equilibrium cloud formation","title":"Microphysics NonEquilibrium","text":"","category":"section"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"The MicrophysicsNonEq.jl module describes a bulk parameterization of   diffusion of water vapour on cloud droplets and cloud ice crystals   modeled as a relaxation to equilibrium.","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"The cloud microphysics variables are expressed as specific humidities:","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"q_tot - total water specific humidity,\nq_vap - water vapor specific humidity,\nq_liq - cloud water specific humidity,\nq_ice - cloud ice specific humidity,","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"Parameters used in the parameterization are defined in   CLIMAParameters.jl package. They consist of:","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"symbol definition units default value reference\ntau_cond_evap cloud water condensation/evaporation timescale s 10 \ntau_dep_sub cloud ice deposition/sublimation timescale s 10 ","category":"page"},{"location":"MicrophysicsNonEq/#Cloud-water-condensation/evaporation","page":"Non-equilibrium cloud formation","title":"Cloud water condensation/evaporation","text":"","category":"section"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"Condensation and evaporation of cloud liquid water is parameterized   as a relaxation to equilibrium value at the current time step.","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"beginequation\n  left fracd  q_liqdt right_cond evap =\n    fracq^eq_liq - q_liqtau_cond_evap\nendequation","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"where:","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"q^eq_liq - liquid water specific humidity in equilibrium,\nq_liq - liquid water specific humidity,\ntau_cond_evap - relaxation timescale.","category":"page"},{"location":"MicrophysicsNonEq/#Cloud-ice-deposition/sublimation","page":"Non-equilibrium cloud formation","title":"Cloud ice deposition/sublimation","text":"","category":"section"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"Deposition and sublimation of cloud ice is parameterized as   a relaxation to equilibrium value at the current time step.","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"beginequation\n  left fracd  q_icedt right_dep sub =\n    fracq^eq_ice - q_icetau_dep_sub\nendequation","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"where:","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"q^eq_ice - ice specific humidity in equilibrium,\nq_ice - ice specific humidity,\ntau_dep_sub - relaxation timescale.","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"note: Note\nBoth tau_cond_evap and tau_dep_sub are assumed constant here. It would be great to make the relaxation time a function of available condensation nuclei, turbulence intensity, etc. See works by prof Raymond Shaw for hints. In particular, Neel Desai, KK Chandrakar, G Kinney, W Cantrell, RA Shaw (2019).","category":"page"},{"location":"References/#References","page":"References","title":"References","text":"","category":"section"},{"location":"References/","page":"References","title":"References","text":"","category":"page"},{"location":"Microphysics2M/#Microphysics-2M","page":"2-moment precipitation microphysics","title":"Microphysics 2M","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The Microphysics2M.jl module provides 2-moment warm rain bulk parameterization of cloud microphysical processes including autoconversion, accretion, cloud droplets and raindrops self-collection, raindrops breakup, mean terminal velocity and rain evaporation. Autoconversion defines the rate of transfer from cloud liquid water to rain water due to collisions between cloud droplets. Accretion defines the rate of transfer from cloud liquid water to rain water due to collisions between cloud droplets and rain drops. Cloud self-collection defines the rate of change of cloud droplets number density due to collisions between cloud droplets, and similarly, rain self-collection defines the rate of change of raindrops number density due to collsions between raindrops. Rain drops breakup defines the rate of new raindrops production due to the disintegration of larger raindrops. Mean terminal velocity represents the mean fall speed of raindrops, and rain evaporation describes the rate of the transformation of rainwater to water vapor. Specifically, Microphysics2M.jl implements:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"the double-moment Axel Seifert, Klaus Dieter Beheng (2006) parametrization, which includes autoconversion, accretion, cloud and rain self-collection rates, breakup, terminal velocity and evaporation;\nand other double-moment autoconversion and accretions schemes from R. Wood (2005) based on the works of M. Khairoutdinov, Y. Kogan (2000), K.D. Beheng (1994), G.J. Tripoli, W.R. Cotton (1980) and Y. Liu, P.H. Daum (2004).","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The microphysics variables are expressed as specific humidities [kg/kg] and number densities [1/m^3]:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq - cloud water specific humidity,\nq_rai - rain specific humidity,\nN_liq - cloud droplets number density,\nN_rai - raindrops number density.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default values of free parameters are defined in   CLIMAParameters   and can be overwritten using the toml files.","category":"page"},{"location":"Microphysics2M/#The-Seifert-and-Beheng-(2006)-parametrization","page":"2-moment precipitation microphysics","title":"The Seifert and Beheng (2006) parametrization","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The Axel Seifert, Klaus Dieter Beheng (2006) parametrization provides process rates for autoconversion, accretion, self-collection of cloud droplets and raindrops, raindrops breakup, raindrops mean fall speed, and rain evaporation. This parametrization is directly derived from the stochastic collection equation (SCE) with a piecewise polynomial collsion kernel and assumming a gamma size distribution for cloud droplets and an exponential size distribution for raindrops.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The piece-wise polynomial collection Kernel, used for the derivation of the parametrization, is given by:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n    K(xy) = \n    begincases\n    k_cc(x^2+y^2) quad  xwedge y  x^*\n    k_cr(x+y) quad  xoplus y geq x^*\n    k_rr(x+y)exp-kappa_rr (x^13 + y^13) quad  xwedge y geq x^*\n    endcases\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where x and y are drop masses and x^* is the mass threshold chosen to separate the cloud and rain portions of the mass distribution. For K in m^3 s^-1 the constants are ","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nk_cc 444 times 10^9   m^3 cdot kg^2 cdot s^-1\nk_cr 525   m^3 cdot kg cdot s^-1\nk_rr 712   m^3 cdot kg cdot s^-1\nkappa_rr 607   m^3 cdot kg cdot s^-1\nx^* 26 times 10^-10  kg","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default value of x^*=26times 10^-10 kg corresponds to the drop radius r^* approx 40 mu m.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The cloud droplets Gamma distribution function is described by","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n    f_c(x)=Ax^nu e^-Bxquad nu=textconst\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the raindrops exponential distribution is expressed as","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n    f_r(D)=alpha e^-beta D\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where D is the drop diameter which is proportional to x^13.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"note: Note\nIn the derivation of the parametrization, it is assumed that the cloud droplet distribution f_c(x) does not contain a significant number of droplets with masses almost equal or larger than x^*. This is reffered to as the undeveloped cloud droplet spectrum assumption. Similarly the raindrop distribution does not contain a significant number of rain drops with masses almost equal or smaller than x^*. These assumptions allow us to simplify the calculation of moments of the distributions by integrating from zero to infinity.","category":"page"},{"location":"Microphysics2M/#Autoconversion","page":"2-moment precipitation microphysics","title":"Autoconversion","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The autoconversion rate can be estimated by looking at variations in the second moment of the particle mass spectrum. Specifically, the sum of variations in the second moment of the cloud droplets and raindrops spectrum equals the variations in the second moment of the particle mass spectrum:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\nfracpartial Zpartial t = fracpartial Z_cpartial t + fracpartial Z_rpartial t\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where Z represents the second moment, and c and r subscripts denote cloud and rain categories respectively. In the early stages of rain evolution, an estimate of the variations in the second moment of the particle mass spectrum is obtained from the stochastic collection equation: partial Z  partial t  approx  2k_c L_c M_c^(3), where M_c^(3) is the third moment of the cloud droplets spectrum. Using these equations, along with computing Z_c, M_c^(3), Z_r directly by integrating the distribution functions, allows us to derive an equation for the autoconversion rate. To simplify the derivation, we assume that in the initial stage of the rain evolution raindrops have sizes of the order of x^* and the mean radius of cloud droplets is much less than x^*. This approach yields an approximation of the autoconversion rate in the early stages of rain evolution. The early stage rain evolution assumption is then relaxed by means of a universal function that depends on a process time scale.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The rate of change of rain specific humidity by autoconversion is finally expressed as","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracpartial q_raipartial t right_acnv = frack_cc20  x^*  rho frac(nu+2)(nu+4)(nu+1)^2 (q_liq rho)^2 overlinex_c^2 left(1+fracphi_acnv(tau)1-tau^2right)fracrho_0rho\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nrho is the moist air density,\nrho_0 = 1225  kg cdot m^-3 is the air density at surface conditions,\nk_cc is the cloud-cloud collection kernel constant,\nnu is the cloud droplet gamma distribution parameter,\nx^* is the drop mass separating the cloud and rain categories \noverlinex_c = (q_liq rho)  N_liq is the cloud droplet mean mass with N_liq denoting the cloud droplet number density. Here, to ensure numerical stability, we limit overlinex_c by the upper bound of x^*.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The function phi_acnv(tau) is used to correct the autoconversion rate for the undeveloped cloud droplet spectrum and the early stage rain evolution assumptions. This is a universal function which is obtained by fitting to numerical results of the SCE:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  phi_acnv(tau) = A tau^b(1-tau^b)^c\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"tau = 1 - q_liq(q_liq + q_rai) is a dimensionless internal time scale with q_rai being the cloud liquid water specific humidity.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nnu 2\nA 400\na 07\nc 3","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The rate of change of raindrops number density is","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracpartial N_raipartial t right_acnv = fracrhox^* left fracd  q_raidt right_acnv\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the rate of change of liquid water specific humidity and cloud droplets number density are","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n  left fracpartial q_liqpartial t right_acnv = - left fracpartial q_raipartial t right_acnv\n  left fracpartial N_liqpartial t right_acnv = -2 left fracpartial N_raipartial t right_acnv\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"note: Note\nThe Seifert and Beheng parametrization is formulated for the rate of change of liquid water content L = rho q. Here, we assume constant rho and divide the rates by rho to derive the equations for the rate of change of specific humidities.","category":"page"},{"location":"Microphysics2M/#Accretion","page":"2-moment precipitation microphysics","title":"Accretion","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"An approximation for the accretion rate is obtained by directly evaluating the integral:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n    left fracpartial q_raipartial t right_accr = frac1rho int_x=0^inftyint_y=0^infty f_c(x) f_r(y) K(xy) x dy dx\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"Similar to the autoconversion rate, the accretion rate is modified by a universal function. Thus, the rate of change of rain specific humidity by accretion becomes","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n  left fracpartial q_raipartial t right_accr =  frack_crrho (q_liq rho) (q_rai rho) phi_accr(tau)nonumber\n   =  k_r rho q_liq q_rai phi_accr(tau) left(fracrho_0rhoright)^12\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nq_rai is the rain liquid water specific humidity,\nrho is the moist air density,\nrho_0 is the air density at surface conditions,\nk_cr is the cloud-rain collection kernel constant.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The universal function phi_accr(tau) is used to correct the accretion rate for the assumption of collsion efficiency being one. Fitting to numerical solutions of the SCE obtains:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  phi_accr(tau) = left(fractautau+tau_0right)^c\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"tau = 1 - q_liq(q_liq + q_rai) is a dimensionless internal time scale.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\ntau_0 5 times 10^-5\nc 4","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The rate of change of raindrops number density by accretion is zero, and the rate of change of liquid water specific humidity and cloud droplets number density are","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n  left fracpartial q_liqdt right_accr = - left fracpartial q_raidt right_accr\n  left fracpartial N_liqdt right_accr = fracrhooverlinex_c left fracpartial q_liqdt right_accr\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where overlinex_c = (q_liq rho)  N_liq is the cloud droplet mean mass.","category":"page"},{"location":"Microphysics2M/#Cloud-droplets-self-collection","page":"2-moment precipitation microphysics","title":"Cloud droplets self-collection","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"An approximation for the self-collection rate of cloud droplets is obtained by the following equation:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n   left fracpartial N_liqpartial t right_sc =  left fracpartial N_liqpartial t right_acnv sc - left fracpartial q_raipartial t right_acnvnonumber\n   =  -frac12int_x=0^inftyint_y=0^infty f_c(x) f_c(y) K(xy) dy dx - left fracd  q_raidt right_acnv\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"Direct evaluation of the integral results in the following approximation of the rate of change of cloud droplets number density due to self-collection","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracpartial N_liqpartial t right_sc = -k_cc fracnu + 2nu + 1 fracrho_0rho (q_liq rho)^2 - left fracpartial N_liqpartial t right_acnv\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nrho is the moist air density,\nrho_0 is the air density at surface conditions,\nk_cc is the Long's collection kernel constant,\nnu is the cloud droplet gamma distribution parameter,\nleft fracd  N_liqdt right_acnv is the rate of change of cloud droplets number density by autoconversion.","category":"page"},{"location":"Microphysics2M/#Raindrops-self-collection","page":"2-moment precipitation microphysics","title":"Raindrops self-collection","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"An approximation for rate of change of raindrops number density due to self-collection is obtained by directly evaluating the integral:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n    left fracpartial N_raipartial t right_sc= -frac12int_x=0^inftyint_y=0^infty f_r(x) f_r(y) K(xy) dy dx\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"This yields,","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracpartial N_raipartial t right_sc = -k_rr N_rai (q_rai rho) left(1+frackappa_rrlambda_r right)^d left(fracrho_0rhoright)^12\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_rai is the rain water specific humidity,\nrho is the moist air density,\nrho_0 is the air density at surface conditions,\nN_rai is the raindrops number density,\nk_rr and kappa_rr are the rain-rain collection kernel constants.\nlambda_r is the raindrops size distribution parameter (based on drop mass): lambda_r = left(frac6overlinex_rright)^13.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default constant value is:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nd -5","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"note: Note\nIn the paper d=-9 which seems to be a mistake! Evaluating the integral for derving the self-collection rate results in d=-5.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"note: Note\nFor the same numerical instabilities which in the paper are mentioned for terminal velocity and evaporation, here for rain self-collection, the value of lambda_r is bounded within a range. In fact we first compute the bounded lambda_r based on drop diameter by the algorithm given in the paper and then convert it to lambda_r based on mass (the conversion can be done by multiplying to a constant value).","category":"page"},{"location":"Microphysics2M/#Raindrops-breakup","page":"2-moment precipitation microphysics","title":"Raindrops breakup","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"Raindrops breakup is modeled by assuming that in a precipitation event coalescence and breakup ultimately reach an equilibrium with a self-similar equilibrium size distribution. As a result, the breakup process can be coupled to raindrops self-collection by the following parameterization","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracpartial N_raipartial t right_br = -Phi_br(Delta overlineD_r) + 1 left fracpartial N_raipartial t right_sc\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where Delta overlineD_r = overlineD_r - overlineD_eq with overlineD_r denoting the mean volume raindrop diameter and overlineD_eq being the equilibrium mean diameter. The function Phi_br(Delta overlineD_r) is given by","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"  beginalign\n    Phi_br(Delta overlineD_r) = \n    begincases\n    -1 quad  overlineD_r  overlineD_threshold\n    k_br Delta overlineD_r quad  overlineD_threshold  overlineD_r  overlineD_eq\n    2 (exp(kappa_br Delta overlineD_r) -1) quad  overlineD_eq  overlineD_r\n    endcases\n  endalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nk_br 1000  m^-1\nkappa_br 2300  m^-1\noverlineD_threshold 035 times 10^-3   m\noverlineD_eq 09 times 10^-3   m","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"note: Note\nIn the paper for overlineD_eq  overlineD_r the equation Phi_br(Delta overlineD_r) = 2 exp(kappa_br Delta overlineD_r) -1 is given. This equations seems to be missing parentheses as the equation must be continuous at Delta overlineD_r = 0 as shown in Fig. 2 of the paper.","category":"page"},{"location":"Microphysics2M/#Terminal-velocity","page":"2-moment precipitation microphysics","title":"Terminal velocity","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"For the two moment scheme which is based on number density and mass, it is straightforward to model sedimentation of particles by using number- and mass-weighted mean terminal velocities. For rain water these terminal velocities are obtained by calculating the following integral:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  overlinev_r k = frac1M_r^k int_0^infty x^k f_r(x) v(x) dx\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where the superscript k indicates the moment number, k=0 for number density and k=1 for mass. The individual terminal velocity of particles is approximated by v_(x) = (rho_0rho)^12 a_R - b_R exp(-c_R D_r) where a_R, b_R and c_R are three free parameters and D_r is the particle diameter. Evaluating the integral results in the following equation for terminal velocity:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  overlinev_r k = left(fracrho_0rhoright)^frac12lefta_R - b_R left(1+fracc_Rlambda_rright)^-(3k+1)right\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where lambda_r is the raindrops size distribution parameter (based on diameter): lambda_r = (phi rho_woverlinex_r)^13. To avoid numerical instabilities, especially when N_rai rightarrow 0 and q_rai rightarrow 0, lambda_r is bounded. The limiting algorithm is as follows:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\nwidetildex_r = max left(overlinex_r min  min left(overlinex_r max  fracrho q_raiN_rairight)right)\nN_0 = max left(N_0 min  min left(N_0 max  N_raileft(fracpi rho_wwidetildex_rright)^frac13right)right)\nlambda_r = max left(lambda_min  min left(lambda_max  left(fracpi rho_w N_0rho q_rairight)^frac14right)right)\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\na_R 965  m cdot s^-1\nb_R 103  m cdot s^-1\nc_R 600  m^-1\noverlinex_r min 26 times 10^-10  m\noverlinex_r max 5 times 10^-6   m\nN_0 min 25 times 10^5   m^-4\nN_0 max 2 times 10^7   m^-4\nlambda_min 1 times 10^3   m^-1\nlambda_max 1 times 10^4   m^-1","category":"page"},{"location":"Microphysics2M/#Rain-evaporation","page":"2-moment precipitation microphysics","title":"Rain evaporation","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The parametrization of rain evaporation is obtained by considering the time scale of evaporation of individual raindrops:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  tau_eva = fracx_rfracdx_rdtbigg_eva = fracx_r2 pi G_lv(T p) S D_r(x_r) F_v(x_r)\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  G_lv(T p) = leftfracR_v Tp_lv(T) D_v + fracL_lvK_T T left(fracL_lvR_v T-1right)right^-1\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"with temperature T, thermal conductivity K_T, diffucivity of water vapor D_v, specific gas constant for water vapor R_v, latent heat of evaporation L_lv and liquid-vapor saturation pressure p_lv. The ventilation factor is given by F_v(x_r) = a_v + b_v N_Sc^13 N_Re(x_r)^12 where N_Sc = nu_air  D_v is the Schmidt number and N_Re(x_r) = fracv_r (x_r) D_r (x_r)nu_air is the Reynolds number with kinematic viscosity of air nu_air. The average evaporation rates are obtained from the following integral:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  fracpartial M_r^kpartial tbigg_eva = int_0^infty fracx^k f_r(x)tau_eva dx = 2 pi G_lv(T p) S int_0^infty D_r(x) F_v(x) f_r(x) x^k-1 dx\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where the superscript k indicates the moment number, k=0 for number-weighted and k=1 for mass-weighted average. Here in the computation of the evaporation rate, a power-law fall speed is assumed: v_r(x) cong alpha_r x^beta_r left(fracrho_0rhoright)^frac12. Evaluating the integral results in:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  fracpartial M_r^kpartial tbigg_eva = 2 pi G_lv(T p) S N_rai D_r(overlinex_r) overlineF_v k(overlinex_r) overlinex_r^k-1\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where overlineF_v k is an average ventilation factor for the k-th moment:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\noverlineF_v k(overlinex_r) = a_vent k + b_vent k N_Sc^13 N_Re(overlinex_r)^12\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"with","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n  a_vent k = a_v 6^23-k Gamma(3k-1)\n  b_vent k = b_v 6^12-beta_r2-k Gamma(3k-12+3beta_r2)\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"note: Note\nFor k = 0 the integral for computing the mean evaporation rate does not converge. In this case it is reasonable to change the lower bound of the integral to x=x^*. The results remain the same except that the Gamma functions in the equations for a_vent 0 and b_vent 0, which are Gamma(-1) and Gamma(-12+3beta_r2), are replaced by the upper incomplete gamma function Gamma(-1 (6 x^*  overlinex_r)^13) and Gamma(-12+3beta_r2 (6 x^*  overlinex_r)^13), respectively. This issue and the suggested workaround are not mentioned in the paper.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The two-moment parametrization of evaporation suffers from the similar numerical instability issues as the sedimentation scheme. Thus, the same limiting algorithm as the sedimentation scheme is applied here to bound size distribution parameters. These limited parameters are then used to compute the mean raindrop mass by the following equation:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  overlinex_r = max left(overlinex_r min  min left(overlinex_r max  fracrho q_rai lambda_rN_0right)right)\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"This mean mass is used for computing the evaporation rate. ","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\na_v 078\nb_v 0308\nalpha_r 159  m cdot s^-1 cdot kg^-beta_r\nalpha_r 0266","category":"page"},{"location":"Microphysics2M/#Other-double-moment-autoconversion-and-accretion-schemes","page":"2-moment precipitation microphysics","title":"Other double-moment autoconversion and accretion schemes","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The other autoconversion and accretion rates in the Microphysics2M.jl module are implemented after Table 1 from R. Wood (2005)   and are based on the works of   M. Khairoutdinov, Y. Kogan (2000),   K.D. Beheng (1994),   G.J. Tripoli, W.R. Cotton (1980) and   Y. Liu, P.H. Daum (2004) respectively. From the above works:   (i) the M. Khairoutdinov, Y. Kogan (2000) parameterisation is based   on a fit to drop spectrum resolving scheme and designed to work   for stratocumulus topped boundary layers,   (ii) the K.D. Beheng (1994) parameterisation is based on a fit   to stochastic collection equation,   (iii) the G.J. Tripoli, W.R. Cotton (1980) parameterisation is developed   for a deep convective case, and   (iv) the Y. Liu, P.H. Daum (2004) parameterisation is derived to   include the effects of relative dispersion   of the cloud droplet size distribution on precipitation formation rates   and assumes a modified gamma distribution.","category":"page"},{"location":"Microphysics2M/#Autoconversion-2","page":"2-moment precipitation microphysics","title":"Autoconversion","text":"","category":"section"},{"location":"Microphysics2M/#Khairoutdinov-and-Kogan-(2000)","page":"2-moment precipitation microphysics","title":"Khairoutdinov and Kogan (2000)","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_acnv = A  q_liq^a  N_d^b  rho^c\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nN_d is the cloud droplet concentration,\nrho is the air density,","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nA 742 times 10^13\na 247\nb -179\nc -147","category":"page"},{"location":"Microphysics2M/#Beheng-(1994)","page":"2-moment precipitation microphysics","title":"Beheng (1994)","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_acnv = fracC  d^a  (q_liq rho)^b  N_d^crho\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nN_d is the cloud droplet number concentration,","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nC 3 times 10^34\na -17\nb 47\nc -33\nd 99 for N_d  200 cm^-3,  39 for N_d  200 cm ^-3","category":"page"},{"location":"Microphysics2M/#Tripoli-and-Cotton-(1980)","page":"2-moment precipitation microphysics","title":"Tripoli and Cotton (1980)","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_acnv =\n    D  q_liq^a  N_d^b  mathrmH(q_liq - q_liq_threshold)\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nq_liq_threshold is the cloud liquid to rain water threshold,\nN_d is the cloud droplet number concentration,\nmathrmH(x) is the Heaviside step function.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The cloud liquid to rain water autoconversion threshold is defined   assuming spherical liquid water drops of radius equal to 7 mu m:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  q_liq_threshold = frac43 pi rho_w N_d r_cm^3\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"rho_w is the liquid water density,","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nD 3268\na frac73\nb frac-13\nr_cm 7 times 10^-6 m","category":"page"},{"location":"Microphysics2M/#Liu-and-Daum-(2004)","page":"2-moment precipitation microphysics","title":"Liu and Daum (2004)","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_acnv =\n    fracE  (q_liq  rho)^3  mathrmH(R_6 - R_6C)N_d  rho\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nN_d is the cloud droplet number concentration,\nrho is the air density.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The parameterisation is formulated using mean volume radius   r_vol expressed in mu m which we compute as","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n    r_vol = left(fracrho q_liq43 pi  rho_w  N_dright)^13 10^6\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"rho_w is the liquid water density.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"Then the R_6 and R_6C are defined as","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"R_6 = beta_6  r_vol\nR_6C = fracR_C0(q_liq rho)^16 R_6^12\nbeta_6 = left( fracr_vol + 3r_vol right)^13\nE = E_0 beta_6^6","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nR_C0 75\nE_0 108 times 10^10","category":"page"},{"location":"Microphysics2M/#Accretion-2","page":"2-moment precipitation microphysics","title":"Accretion","text":"","category":"section"},{"location":"Microphysics2M/#Khairoutdinov-and-Kogan-(2000)-2","page":"2-moment precipitation microphysics","title":"Khairoutdinov and Kogan (2000)","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_accr = A  (q_liq q_rai)^a  rho^b\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nq_rai is the rain water specific humidity,\nrho    is the air density,","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nA 67\na 115\nb -13","category":"page"},{"location":"Microphysics2M/#Beheng-(1994)-2","page":"2-moment precipitation microphysics","title":"Beheng (1994)","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_accr = A  q_liq  q_rai  rho\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nq_rai is the rain specific humidity,\nrho    is the air density,","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nA 6","category":"page"},{"location":"Microphysics2M/#Tripoli-and-Cotton-(1980)-2","page":"2-moment precipitation microphysics","title":"Tripoli and Cotton (1980)","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_accr = A  q_liq  q_rai\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is cloud liquid water specific humidity\nq_rai is rain specific humidity","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nA 47","category":"page"},{"location":"Microphysics2M/#Example-figures","page":"2-moment precipitation microphysics","title":"Example figures","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"\nusing CairoMakie\nCairoMakie.activate!(type = \"svg\")\n\nimport CloudMicrophysics\nimport CLIMAParameters\n\nconst CMT = CloudMicrophysics.CommonTypes\nconst CM1 = CloudMicrophysics.Microphysics1M\nconst CM2 = CloudMicrophysics.Microphysics2M\nconst CP = CLIMAParameters\nconst CMP = CloudMicrophysics.Parameters\n\ninclude(joinpath(pkgdir(CloudMicrophysics), \"test\", \"create_parameters.jl\"))\nFT = Float64\ntoml_dict = CP.create_toml_dict(FT; dict_type = \"alias\")\nconst param_set = cloud_microphysics_parameters(toml_dict)\nthermo_params = CMP.thermodynamics_params(param_set)\n\nconst liquid = CMT.LiquidType()\nconst rain = CMT.RainType()\n\nconst KK2000 = CMT.KK2000Type()\nconst B1994  = CMT.B1994Type()\nconst TC1980 = CMT.TC1980Type()\nconst LD2004 = CMT.LD2004Type()\nconst SB2006 = CMT.SB2006Type()\n\ninclude(joinpath(pkgdir(CloudMicrophysics), \"docs\", \"src\", \"Wooddata.jl\"))\n\n# Example values\nq_liq_range = range(1e-8, stop=1e-3, length=1000)\nq_rai_range = range(1e-8, stop=1e-3, length=1000)\nN_d_range = range(1e7, stop=1e9, length=1000)\nq_liq = 5e-4\nq_rai = 5e-4\nρ_air = 1.0 # kg m^-3\n\nq_liq_KK2000 = [CM2.conv_q_liq_to_q_rai(param_set, KK2000, q_liq, ρ_air, N_d = 1e8) for q_liq in q_liq_range]\nq_liq_B1994 = [CM2.conv_q_liq_to_q_rai(param_set, B1994, q_liq, ρ_air, N_d = 1e8) for q_liq in q_liq_range]\nq_liq_TC1980 = [CM2.conv_q_liq_to_q_rai(param_set, TC1980, q_liq, ρ_air, N_d = 1e8) for q_liq in q_liq_range]\nq_liq_LD2004 = [CM2.conv_q_liq_to_q_rai(param_set, LD2004, q_liq, ρ_air, N_d = 1e8) for q_liq in q_liq_range]\nq_liq_SB2006 = [CM2.autoconversion(param_set, SB2006, q_liq, q_rai, ρ_air, 1e8).dq_rai_dt for q_liq in q_liq_range]\nq_liq_K1969 = [CM1.conv_q_liq_to_q_rai(param_set, q_liq) for q_liq in q_liq_range]\n\nN_d_KK2000 = [CM2.conv_q_liq_to_q_rai(param_set, KK2000, 5e-4, ρ_air, N_d = N_d) for N_d in N_d_range]\nN_d_B1994 = [CM2.conv_q_liq_to_q_rai(param_set, B1994, 5e-4, ρ_air, N_d = N_d) for N_d in N_d_range]\nN_d_TC1980 = [CM2.conv_q_liq_to_q_rai(param_set, TC1980, 5e-4, ρ_air, N_d = N_d) for N_d in N_d_range]\nN_d_LD2004 = [CM2.conv_q_liq_to_q_rai(param_set, LD2004, 5e-4, ρ_air, N_d = N_d) for N_d in N_d_range]\nN_d_SB2006 = [CM2.autoconversion(param_set, SB2006, q_liq, q_rai, ρ_air, N_d).dq_rai_dt for N_d in N_d_range]\n\naccKK2000_q_liq = [CM2.accretion(param_set, KK2000, q_liq, q_rai, ρ_air) for q_liq in q_liq_range]\naccB1994_q_liq = [CM2.accretion(param_set, B1994, q_liq, q_rai, ρ_air) for q_liq in q_liq_range]\naccTC1980_q_liq = [CM2.accretion(param_set, TC1980, q_liq, q_rai) for q_liq in q_liq_range]\naccSB2006_q_liq = [CM2.accretion(param_set, SB2006, q_liq, q_rai, ρ_air, 1e8).dq_rai_dt for q_liq in q_liq_range]\naccK1969_q_liq = [CM1.accretion(param_set, liquid, rain, q_liq, q_rai, ρ_air) for q_liq in q_liq_range]\n\naccKK2000_q_rai = [CM2.accretion(param_set, KK2000, q_liq, q_rai, ρ_air) for q_rai in q_rai_range]\naccB1994_q_rai = [CM2.accretion(param_set, B1994, q_liq, q_rai, ρ_air) for q_rai in q_rai_range]\naccTC1980_q_rai = [CM2.accretion(param_set, TC1980, q_liq, q_rai) for q_rai in q_rai_range]\naccSB2006_q_rai = [CM2.accretion(param_set, SB2006, q_liq, q_rai, ρ_air, 1e8).dq_rai_dt for q_rai in q_rai_range]\naccK1969_q_rai = [CM1.accretion(param_set, liquid, rain, q_liq, q_rai, ρ_air) for q_rai in q_rai_range]\n\nfig = Figure()\n\nax1 = Axis(fig[1, 1]; yscale = log10)\nax2 = Axis(fig[1, 2]; xscale = log10, yscale = log10)\nax3 = Axis(fig[2, 1]; yscale = log10)\nax4 = Axis(fig[2, 2]; yscale = log10)\n\nylims!(ax1, [1e-13, 1e-5])\nylims!(ax2, [1e-13, 1e-5])\nylims!(ax3, [1e-7, 5e-6])\nylims!(ax4, [1e-7, 5e-6])\n\nl1 = lines!(ax1, q_liq_range * 1e3, q_liq_KK2000,    color = :red)\nl2 = lines!(ax1, q_liq_range * 1e3, q_liq_B1994,     color = :green)\nl3 = lines!(ax1, q_liq_range * 1e3, q_liq_TC1980,    color = :blue)\nl4 = lines!(ax1, q_liq_range * 1e3, q_liq_LD2004,    color = :purple)\nl5 = lines!(ax1, q_liq_range * 1e3, q_liq_K1969,     color = :black)\nl6 = lines!(ax1, KK2000_x_q_liq,    KK2000_y_q_liq,  color = :red, linestyle = :dash)\nl7 = lines!(ax1, B1994_x_q_liq,     B1994_y_q_liq,   color = :green, linestyle = :dash)\nl8 = lines!(ax1, TC1980_x_q_liq,    TC1980_y_q_liq,  color = :blue, linestyle = :dash)\nl9 = lines!(ax1, LD2004_x_q_liq,    LD2004_y_q_liq,  color = :purple, linestyle = :dash)\n\nl10 = lines!(ax2, N_d_range * 1e-6, N_d_KK2000, color = :red)\nl11 = lines!(ax2, N_d_range * 1e-6, N_d_B1994, color = :green)\nl12 = lines!(ax2, N_d_range * 1e-6, N_d_TC1980, color = :blue)\nl13 = lines!(ax2, N_d_range * 1e-6, N_d_LD2004, color = :purple)\nl14 = lines!(ax2, KK2000_x_N_d, KK2000_y_N_d, color = :red, linestyle = :dash)\nl15 = lines!(ax2, B1994_x_N_d, B1994_y_N_d, color = :green, linestyle = :dash)\nl16 = lines!(ax2, TC1980_x_N_d, TC1980_y_N_d, color = :blue, linestyle = :dash)\nl17 = lines!(ax2, LD2004_x_N_d, LD2004_y_N_d, color = :purple, linestyle = :dash)\n\nl18 = lines!(ax3, q_liq_range * 1e3, accKK2000_q_liq, color = :red)\nl19 = lines!(ax3, q_liq_range * 1e3, accB1994_q_liq, color = :green)\nl20 = lines!(ax3, q_liq_range * 1e3, accTC1980_q_liq, color = :blue)\nl21 = lines!(ax3, q_liq_range * 1e3, accK1969_q_liq, color = :black)\n\nl22 = lines!(ax4, q_rai_range * 1e3, accKK2000_q_rai, color = :red)\nl23 = lines!(ax4, q_rai_range * 1e3, accB1994_q_rai, color = :green)\nl24 = lines!(ax4, q_rai_range * 1e3, accTC1980_q_rai, color = :blue)\nl25 = lines!(ax4, q_rai_range * 1e3, accK1969_q_rai, color = :black)\n\nl26 = lines!(ax1, q_liq_range * 1e3, q_liq_SB2006,    color = :cyan)\nl27 = lines!(ax2, N_d_range * 1e-6, N_d_SB2006,    color = :cyan)\nl28 = lines!(ax3, q_liq_range * 1e3, accSB2006_q_liq,    color = :cyan)\nl28 = lines!(ax4, q_rai_range * 1e3, accSB2006_q_rai,    color = :cyan)\n\nax1.xlabel = \"q_liq [g/kg]\"\nax1.ylabel = \"autoconversion rate [1/s]\"\nax2.xlabel = \"N_d [1/cm3]\"\nax2.ylabel = \"autoconversion rate [1/s]\"\nax3.xlabel = \"q_liq [g/kg] (q_rai = 0.5 g/kg)\"\nax3.ylabel = \"accretion rate [1/s]\"\nax4.xlabel = \"q_rai [g/kg] (q_liq = 0.5 g/kg)\"\nax4.ylabel = \"accretion rate [1/s]\"\n\nLegend(\n    fig[1, 3],\n    [l1, l2, l3, l4, l26, l5, l6, l7, l8, l9],\n    [\"KK2000\", \"B1994\", \"TC1980\", \"LD2004\", \"SB2006\", \"K1969\", \"Wood_KK2000\", \"Wood_B1994\", \"Wood_TC1980\", \"Wood_LD2004\"]\n)\nsave(\"Autoconversion_accretion.svg\", fig)","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"(Image: )","category":"page"},{"location":"ARG2000_example/#Example-of-Aerosol-Activation-from-ARG2000","page":"ARG2000 activation example","title":"Example of Aerosol Activation from ARG2000","text":"","category":"section"},{"location":"ARG2000_example/","page":"ARG2000 activation example","title":"ARG2000 activation example","text":"The figures below have been reproduced from Hayder Abdul-Razzak, Steven J. Ghan (2000)  using the aerosol activation parameterization implemented in this project.","category":"page"},{"location":"ARG2000_example/#Example-figures","page":"ARG2000 activation example","title":"Example figures","text":"","category":"section"},{"location":"ARG2000_example/","page":"ARG2000 activation example","title":"ARG2000 activation example","text":"include(\"ARGplots.jl\")\nmake_ARG_figX(2)\nmake_ARG_figX(3)\nmake_ARG_figX(4)\nmake_ARG_figX(5)","category":"page"},{"location":"ARG2000_example/","page":"ARG2000 activation example","title":"ARG2000 activation example","text":"(Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"PrecipitationSusceptibility/#Precipitation-Susceptibility","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"","category":"section"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"The PrecipitationSusceptibility.jl module contains functions for determining the precipitation susceptibility rates due to various processes for 2-moment microphysics schemes, as described in Franziska Glassmeier, Ulrike Lohmann (2016).","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"The precipitation susceptibility describes the rate of change of precipitation production due to some moment of the particle size distribution:","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"For some partial moment X, such as q_liq, q_rai, N_liq, or N_rai and some process rate of precipitation production r, such as autoconversion, accretion, etc, this is defined as:","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"fracpartial ln rpartial ln X","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"The total precipitation susceptibility, then, is","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"fracpartial ln PPpartial ln X = sum_r in R\n    fracrPP fracpartial ln rpartial ln X","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"Where R is the set of all process rates that contribute to precipitation production.","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"Example reproducing Fig. 2 From Franziska Glassmeier, Ulrike Lohmann (2016):","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"include(\"PrecipitationSusceptibilityPlots.jl\")","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"(Image: )","category":"page"},{"location":"ThresholdsTransition/#Smooth-transition-at-thresholds","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"","category":"section"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"To avoid abrupt change of values at thresholds we can use the logistic function to make the transition smooth. The logistic function is defined as","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"f(t k) = frac11+e^-kt","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"where","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"t is the independent parameter,\nand k is the growth rate of the curve characterizing the steepness of the transition.","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"The value of the logistic function changes from zero at t rightarrow -infty to one at t rightarrow infty with the majority of the change happening around t = 0. In our microphysics applications, the independent parameter (typically specific humidities) takes only non-negative values, and when this parameter is zero the function should return zero. Thus, we use the change of variable t = xx_0 - x_0x, where x_0 is the threshold value of x. Therefore, the logistic function for smooth transitioning from f(x) = 0, for x  x_0, to f(x)=1, for x  x_0, is defined as","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"f(x x_0 k) = frac11+e^-k(xx_0 - x_0x)","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"Note that when both x and x_0 are zero the value given by the above equation is undefined. In this case we return a zero value instead.","category":"page"},{"location":"ThresholdsTransition/#Smooth-transition-of-derivative-at-thresholds","page":"Smooth transition at thresholds","title":"Smooth transition of derivative at thresholds","text":"","category":"section"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"When the function itself is continuous but its derivative changes abruptly at a threshold we can use the indefinite integral of the logistic function for smooth transitioning. In this case, the following function can be used","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"f(x x_0 k) = fracx_0k lnleft(1+e^k(xx_0 - 1 + a_trnslt) right) - a_trnslt x_0","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"where a is a fixed value that is defined to enforce zero at x=0:","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"a_trnslt = -frac1klnleft(1 - e^-kright)","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"The curve defined by the above equation smoothly transition from f(x) = 0, for x  x_0, to f(x)=x-x_0, for x  x_0. Note that when both x and x_0 are zero the value of the function is undefined. In this case we return a zero value instead.","category":"page"},{"location":"ThresholdsTransition/#Example-figures","page":"Smooth transition at thresholds","title":"Example figures","text":"","category":"section"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"import Plots\nimport CloudMicrophysics\nimport CLIMAParameters\n\nconst PL = Plots\nconst CMT = CloudMicrophysics.CommonTypes\nconst CM1 = CloudMicrophysics.Microphysics1M\nconst CM2 = CloudMicrophysics.Microphysics2M\nconst CP = CLIMAParameters\n\ninclude(joinpath(pkgdir(CloudMicrophysics), \"test\", \"create_parameters.jl\"))\nFT = Float64\n\nparam_set=[]\nk_thrshld_stpnss_values = [5.0, 2.0, 12.0]\nfor i in 1:3\n    override_file = joinpath(\"override_dict.toml\")\n    open(override_file, \"w\") do io\n        println(io, \"[threshold_smooth_transition_steepness]\")\n        println(io, \"alias = \\\"k_thrshld_stpnss\\\"\")\n        println(io, \"value = \" * string(k_thrshld_stpnss_values[i]))\n        println(io, \"type = \\\"float\\\"\")\n    end\n    toml_dict = CP.create_toml_dict(FT; override_file, dict_type=\"alias\")\n    isfile(override_file) && rm(override_file; force=true)\n    push!(param_set, cloud_microphysics_parameters(toml_dict))\nend\n\nconst B1994  = CMT.B1994Type()\nconst TC1980 = CMT.TC1980Type()\nconst LD2004 = CMT.LD2004Type()\n\n# example values\nq_liq_range  = range(1e-8, stop=1.5e-3, length=1000)\nN_d_range = range(1e7, stop=1e9, length=1000)\nρ_air = 1.0 # kg m^-3\n\nq_liq_K1969 = [CM1.conv_q_liq_to_q_rai(param_set[1], q_liq) for q_liq in q_liq_range]\nq_liq_K1969_s = [CM1.conv_q_liq_to_q_rai(param_set[1], q_liq, smooth_transition = true) for q_liq in q_liq_range]\n\nq_liq_TC1980 = [CM2.conv_q_liq_to_q_rai(param_set[2], TC1980, q_liq, ρ_air) for q_liq in q_liq_range]\nq_liq_TC1980_s = [CM2.conv_q_liq_to_q_rai(param_set[2], TC1980, q_liq, ρ_air, smooth_transition = true) for q_liq in q_liq_range]\nq_liq_LD2004 = [CM2.conv_q_liq_to_q_rai(param_set[2], LD2004, q_liq, ρ_air) for q_liq in q_liq_range]\nq_liq_LD2004_s = [CM2.conv_q_liq_to_q_rai(param_set[2], LD2004, q_liq, ρ_air, smooth_transition = true) for q_liq in q_liq_range]\n\nN_d_B1994 = [CM2.conv_q_liq_to_q_rai(param_set[3], B1994, 5e-4, ρ_air, N_d = N_d) for N_d in N_d_range]\nN_d_B1994_s = [CM2.conv_q_liq_to_q_rai(param_set[3], B1994, 5e-4, ρ_air, N_d = N_d, smooth_transition = true) for N_d in N_d_range]\n\n\nPL.plot(q_liq_range * 1e3, q_liq_K1969,\n    linewidth=2,\n    xlabel=\"q_liq [g/kg]\",\n    ylabel=\"autoconversion rate [1/s]\",\n    label=\"K1969 without smoothing\"\n)\nPL.plot!(q_liq_range * 1e3, q_liq_K1969_s, linewidth=2, label=\"K1969 with smoothing\")\nPL.savefig(\"q_liq_K1969.svg\") # hide\n\nPL.plot(q_liq_range * 1e3, q_liq_TC1980,\n    linewidth=2,\n    xlabel=\"q_liq [g/kg]\",\n    ylabel=\"autoconversion rate [1/s]\",\n    label=\"TC1980 without smoothing\",\n    yaxis=:log,\n    ylim=(1e-10, 1e-5)\n)\nPL.plot!(q_liq_range * 1e3, q_liq_TC1980_s, linewidth=2, label=\"TC1980 with smoothing\")\nPL.plot!(q_liq_range * 1e3, q_liq_LD2004, linewidth=2, label=\"LD2004 without smoothing\")\nPL.plot!(q_liq_range * 1e3, q_liq_LD2004_s, linewidth=2, label=\"LD2004 with smoothing\")\nPL.savefig(\"q_liq_TC1980_LD2004.svg\") # hide\n\nPL.plot(N_d_range * 1e-6, N_d_B1994,\n    linewidth=2,\n    xlabel=\"N_d [1/cm3]\",\n    ylabel=\"autoconversion rate [1/s]\",\n    label=\"B1994 without smoothing\",\n    xaxis=:log,\n    yaxis=:log,\n    ylim=(1e-13, 1e-5)\n)\nPL.plot!(N_d_range * 1e-6, N_d_B1994_s, linewidth=2, label=\"B1994 with smoothing\")\nPL.savefig(\"N_d_B1994.svg\") # hide","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"(Image: ) (Image: ) (Image: )","category":"page"},{"location":"API/","page":"API","title":"API","text":"CurrentModule = CloudMicrophysics","category":"page"},{"location":"API/#.","page":"API","title":".","text":"","category":"section"},{"location":"API/#Non-equilibrium-cloud-formation","page":"API","title":"Non-equilibrium cloud formation","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"MicrophysicsNonEq\nMicrophysicsNonEq.τ_relax\nMicrophysicsNonEq.conv_q_vap_to_q_liq_ice","category":"page"},{"location":"API/#CloudMicrophysics.MicrophysicsNonEq","page":"API","title":"CloudMicrophysics.MicrophysicsNonEq","text":"Non-equilibrium bulk microphysics scheme, which includes:\n\ncondensation and evaporation of cloud liquid water and deposition and sublimation of cloud ice (relaxation to equilibrium)\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.MicrophysicsNonEq.τ_relax","page":"API","title":"CloudMicrophysics.MicrophysicsNonEq.τ_relax","text":"τ_relax(prs, liquid)\nτ_relax(prs, ice)\n\nprs - abstract set with Earth parameters\nliquid or ice - a type for cloud liquid water or ice\n\nReturns the relaxation timescale for condensation and evaporation of cloud liquid water or the relaxation timescale for sublimation and deposition of cloud ice.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.MicrophysicsNonEq.conv_q_vap_to_q_liq_ice","page":"API","title":"CloudMicrophysics.MicrophysicsNonEq.conv_q_vap_to_q_liq_ice","text":"conv_q_vap_to_q_liq_ice(prs, liquid, q_sat, q)\nconv_q_vap_to_q_liq_ice(prs, ice, q_sat, q)\n\nprs - abstract set with Earth parameters\nliquid or ice - a type for cloud water or ice\nq_sat - PhasePartition at equilibrium\nq - current PhasePartition\n\nReturns the cloud water tendency due to condensation and evaporation or cloud ice tendency due to sublimation and vapor deposition. The tendency is obtained assuming a relaxation to equilibrium with a constant timescale.\n\n\n\n\n\n","category":"function"},{"location":"API/#moment-precipitation-microphysics","page":"API","title":"0-moment precipitation microphysics","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Microphysics0M\nMicrophysics0M.remove_precipitation","category":"page"},{"location":"API/#CloudMicrophysics.Microphysics0M","page":"API","title":"CloudMicrophysics.Microphysics0M","text":"Microphysics0M\n\nZero-moment bulk microphysics scheme that instantly removes moisture above certain threshold. This is equivalent to instanteneous conversion of cloud condensate into precipitation and precipitation fallout with infinite terminal velocity.\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.Microphysics0M.remove_precipitation","page":"API","title":"CloudMicrophysics.Microphysics0M.remove_precipitation","text":"remove_precipitation(param_set::APS, q; q_vap_sat)\n\nparam_set - abstract parameter set\nq - current PhasePartition\nq_vap_sat - water vapor specific humidity at saturation\n\nReturns the q_tot tendency due to the removal of precipitation. The tendency is obtained assuming a relaxation with a constant timescale to a state with precipitable water removed. The threshold for when to remove q_tot is defined either by the condensate specific humidity or supersaturation. The thresholds and the relaxation timescale are defined in CLIMAParameters.\n\n\n\n\n\n","category":"function"},{"location":"API/#moment-precipitation-microphysics-2","page":"API","title":"1-moment precipitation microphysics","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Microphysics1M\nMicrophysics1M.v0\nMicrophysics1M.n0\nMicrophysics1M.lambda\nMicrophysics1M.terminal_velocity\nMicrophysics1M.conv_q_liq_to_q_rai\nMicrophysics1M.conv_q_ice_to_q_sno_no_supersat\nMicrophysics1M.conv_q_ice_to_q_sno\nMicrophysics1M.accretion\nMicrophysics1M.accretion_rain_sink\nMicrophysics1M.accretion_snow_rain\nMicrophysics1M.evaporation_sublimation\nMicrophysics1M.snow_melt","category":"page"},{"location":"API/#CloudMicrophysics.Microphysics1M","page":"API","title":"CloudMicrophysics.Microphysics1M","text":"One-moment bulk microphysics scheme, which includes:\n\nterminal velocity of precipitation\nautoconversion of cloud liquid water into rain and of cloud ice into snow\naccretion due to collisions between categories of condensed species\nevaporation and sublimation of hydrometeors\nmelting of snow into rain\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.Microphysics1M.v0","page":"API","title":"CloudMicrophysics.Microphysics1M.v0","text":"v0(prs, ρ, rain_type)\n\nprs - abstract set with Earth parameters\nρ - air density\ntype - type for dispatch\n\nReturns the proportionality coefficient in terminal velocity(r/r0).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.n0","page":"API","title":"CloudMicrophysics.Microphysics1M.n0","text":"n0(prs, q_sno, ρ, snow_type)\n\nprs - abstract set with Earth parameters\nq_sno -  snow specific humidity\nρ - air density\ntype - type for dispatch\n\nReturns the intercept parameter of the assumed Marshall-Palmer distribution\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.lambda","page":"API","title":"CloudMicrophysics.Microphysics1M.lambda","text":"lambda(q, ρ, n0, m0, me, r0, χm, Δm)\n\nq - specific humidity of rain, ice or snow\nρ - air density\nn0 - size distribution parameter\nm0, me, χm, Δm, r0 - mass(radius) parameters\n\nReturns the rate parameter of the assumed size distribution of particles (rain drops, ice crystals, snow crystals).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.terminal_velocity","page":"API","title":"CloudMicrophysics.Microphysics1M.terminal_velocity","text":"terminal_velocity(prs, precip, ρ, q_)\n\nprs - abstract set with Earth parameters\nprecip - a type for rain or snow\nρ - air density\nq_ - rain or snow specific humidity\n\nReturns the mass weighted average terminal velocity assuming a Marshall-Palmer (1948) distribution of rain drops and snow crystals.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.conv_q_liq_to_q_rai","page":"API","title":"CloudMicrophysics.Microphysics1M.conv_q_liq_to_q_rai","text":"conv_q_liq_to_q_rai(prs, q_liq)\n\nprs - abstract set with Earth parameters\nq_liq - liquid water specific humidity\n\nReturns the q_rai tendency due to collisions between cloud droplets (autoconversion), parametrized following Kessler (1995).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.conv_q_ice_to_q_sno_no_supersat","page":"API","title":"CloudMicrophysics.Microphysics1M.conv_q_ice_to_q_sno_no_supersat","text":"conv_q_ice_to_q_sno_no_supersat(prs, q_ice)\n\nprs - abstract set with Earth parameters\nq_ice -  cloud ice specific humidity\n\nReturns the q_sno tendency due to autoconversion from ice. This is a simplified version of a snow autoconversion rate that can be used in simulations where there is no supersaturation (for example in TC.jl when using saturation adjustment).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.conv_q_ice_to_q_sno","page":"API","title":"CloudMicrophysics.Microphysics1M.conv_q_ice_to_q_sno","text":"conv_q_ice_to_q_sno(prs, q, ρ, T)\n\nprs - abstract set with Earth parameters\nq - phase partition\nρ - air density\nT - air temperature\n\nReturns the q_sno tendency due to autoconversion from ice. Parameterized following Harrington et al. (1996) and Kaul et al. (2015).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.accretion","page":"API","title":"CloudMicrophysics.Microphysics1M.accretion","text":"accretion(prs, cloud, precip, q_clo, q_pre, ρ)\n\nprs - abstract set with Earth parameters\ncloud - type for cloud water or cloud ice\nprecip - type for rain or snow\nq_clo - cloud water or cloud ice specific humidity\nq_pre - rain water or snow specific humidity\nρ - rain water or snow specific humidity\n\nReturns the source of precipitating water (rain or snow) due to collisions with cloud water (liquid or ice).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.accretion_rain_sink","page":"API","title":"CloudMicrophysics.Microphysics1M.accretion_rain_sink","text":"accretion_rain_sink(prs, q_ice, q_rai, ρ)\n\nprs - abstract set with Earth parameters\nq_ice - cloud ice specific humidity\nq_rai - rain water specific humidity\nρ - air density\n\nReturns the sink of rain water (partial source of snow) due to collisions with cloud ice.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.accretion_snow_rain","page":"API","title":"CloudMicrophysics.Microphysics1M.accretion_snow_rain","text":"accretion_snow_rain(prs, type_i, type_j, q_i, q_j, ρ)\n\ni - snow for temperatures below freezing       or rain for temperatures above freezing\nj - rain for temperatures below freezing       or snow for temperatures above freezing\nprs - abstract set with Earth parameters\ntype_i, type_j - a type for snow or rain\nq_ - specific humidity of snow or rain\nρ - air density\n\nReturns the accretion rate between rain and snow. Collisions between rain and snow result in snow at temperatures below freezing and in rain at temperatures above freezing.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.evaporation_sublimation","page":"API","title":"CloudMicrophysics.Microphysics1M.evaporation_sublimation","text":"evaporation_sublimation(prs, rain, q, q_rai, ρ, T)\nevaporation_sublimation(prs, snow, q, q_sno, ρ, T)\n\nprs - abstract set with Earth parameters\nrain - a type for rain\nsnow - a type for snow\nq - phase partition\nq_rai - rain specific humidity\nq_sno - snow specific humidity\nρ - air density\nT - air temperature\n\nReturns the tendency due to rain evaporation or snow sublimation.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.snow_melt","page":"API","title":"CloudMicrophysics.Microphysics1M.snow_melt","text":"snow_melt(prs, q_sno, ρ, T)\n\nprs - abstract set with Earth parameters\nq_sno - snow water specific humidity\nρ - air density\nT - air temperature\n\nReturns the tendency due to snow melt.\n\n\n\n\n\n","category":"function"},{"location":"API/#moment-precipitation-microphysics-3","page":"API","title":"2-moment precipitation microphysics","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Microphysics2M\nMicrophysics2M.LiqRaiRates\nMicrophysics2M.raindrops_limited_vars\nMicrophysics2M.autoconversion\nMicrophysics2M.accretion\nMicrophysics2M.liquid_self_collection\nMicrophysics2M.autoconversion_and_liquid_self_collection\nMicrophysics2M.rain_self_collection\nMicrophysics2M.rain_breakup\nMicrophysics2M.rain_self_collection_and_breakup\nMicrophysics2M.rain_terminal_velocity\nMicrophysics2M.rain_evaporation\nMicrophysics2M.conv_q_liq_to_q_rai","category":"page"},{"location":"API/#CloudMicrophysics.Microphysics2M","page":"API","title":"CloudMicrophysics.Microphysics2M","text":"Double-moment bulk microphysics parametrizations including:\n\nautoconversion, accretion, self-collection, breakup, mean terminal velocity of raindrops and rain  evaporation rates from Seifert and Beheng 2006,\nadditional double-moment bulk microphysics autoconversion and accretion rates from: Khairoutdinov and Kogan 2000, Beheng 1994, Tripoli and Cotton 1980, and Liu and Daum 2004.\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.Microphysics2M.LiqRaiRates","page":"API","title":"CloudMicrophysics.Microphysics2M.LiqRaiRates","text":"A structure containing the rates of change of the specific humidities and number densities of liquid and rain water.\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Microphysics2M.raindrops_limited_vars","page":"API","title":"CloudMicrophysics.Microphysics2M.raindrops_limited_vars","text":"raindrops_limited_vars(param_set, q_rai, ρ, N_rai)\n\nparam_set - abstract set with Earth parameters\nq_rai - rain water specific humidity\nρ - air density\nN_rai raindrops number density\n\nReturns a named tupple containing the mean mass of raindrops, xr, and the rate parameter of the assumed size distribution of raindrops (based on drops diameter), λr, limited within prescribed ranges\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.autoconversion","page":"API","title":"CloudMicrophysics.Microphysics2M.autoconversion","text":"autoconversion(param_set, scheme, q_liq, q_rai, ρ, N_liq)\n\nparam_set - abstract set with Earth parameters\nscheme - type for 2-moment rain autoconversion parameterization\nq_liq - cloud water specific humidity\nq_rai - rain water specific humidity\nρ - air density\nN_liq - cloud droplet number density\n\nReturns a LiqRaiRates object containing q_liq, N_liq, q_rai, N_rai tendencies due to collisions between cloud droplets (autoconversion) for scheme == SB2006Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.accretion","page":"API","title":"CloudMicrophysics.Microphysics2M.accretion","text":"accretion(param_set, scheme, q_liq, q_rai, ρ, N_liq)\n\nparam_set - abstract set with Earth parameters\nscheme - type for 2-moment accretion parameterization\nq_liq - cloud water specific humidity\nq_rai - rain water specific humidity\nρ - air density\nN_liq - cloud droplet number density\n\nReturns a LiqRaiRates object containing q_liq, N_liq, q_rai, N_rai tendencies due to collisions between raindrops and cloud droplets (accretion) for scheme == SB2006Type\n\n\n\n\n\naccretion(param_set, scheme, q_liq, q_rai, ρ)\n\nparam_set - abstract set with Earth parameters\nscheme - type for 2-moment rain accretion parameterization\nq_liq - cloud water specific humidity\nq_rai - rain water specific humidity\nρ - air density (for KK2000Type and Beheng1994Type)\n\nReturns the accretion rate of rain, parametrized following\n\nKhairoutdinov and Kogan (2000) for scheme == KK2000Type\nBeheng (1994) for scheme == B1994Type\nTripoli and Cotton (1980) for scheme == TC1980Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.liquid_self_collection","page":"API","title":"CloudMicrophysics.Microphysics2M.liquid_self_collection","text":"liquid_self_collection(param_set, scheme, q_liq, ρ, dN_liq_dt_au)\n\nparam_set - abstract set with Earth parameters\nscheme - type for 2-moment liquid self-collection parameterization\nq_liq - cloud water specific humidity\nρ - air density\ndN_liq_dt_au - rate of change of cloud droplets number density due to autoconversion\n\nReturns the cloud droplets number density tendency due to collisions of cloud droplets that produce larger cloud droplets (self-collection) for scheme == SB2006Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.autoconversion_and_liquid_self_collection","page":"API","title":"CloudMicrophysics.Microphysics2M.autoconversion_and_liquid_self_collection","text":"autoconversion_and_liquid_self_collection(param_set, scheme, q_liq, q_rai, ρ, N_liq)\n\nparam_set - abstract set with Earth parameters\nscheme - type for 2-moment rain autoconversion parameterization\nq_liq - cloud water specific humidity\nq_rai - rain water specific humidity\nρ - air density\nN_liq - cloud droplet number density\n\nReturns a named tupple containing a LiqRaiRates object for the autoconversion rate and the liquid self-collection rate for scheme == SB2006Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.rain_self_collection","page":"API","title":"CloudMicrophysics.Microphysics2M.rain_self_collection","text":"rain_self_collection(param_set, scheme, q_rai, ρ, N_rai)\n\nparam_set - abstract set with Earth parameters\nscheme - type for 2-moment rain self-collection parameterization\nq_rai - rain water specific humidity\nρ - air density\nN_rai - raindrops number density\n\nReturns the raindrops number density tendency due to collisions of raindrops that produce larger raindrops (self-collection) for scheme == SB2006Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.rain_breakup","page":"API","title":"CloudMicrophysics.Microphysics2M.rain_breakup","text":"rain_breakup(param_set, scheme, q_rai, ρ, dN_rai_dt_sc)\n\nparam_set - abstract set with Earth parameters\nscheme - type for 2-moment liquid self-collection parameterization\nq_rai - rain water specific humidity\nρ - air density\nN_rai - raindrops number density\ndN_rai_dt_sc - rate of change of raindrops number density due to self-collection\n\nReturns the raindrops number density tendency due to breakup of raindrops that produce smaller raindrops for scheme == SB2006Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.rain_self_collection_and_breakup","page":"API","title":"CloudMicrophysics.Microphysics2M.rain_self_collection_and_breakup","text":"rain_sef_collection_and_breakup(param_set, scheme, q_rai, ρ)\n\nparam_set - abstract set with Earth parameters\nscheme - type for 2-moment liquid self-collection parameterization\nq_rai - rain water specific humidity\nρ - air density\nN_rai - raindrops number density\n\nReturns a named tupple containing the raindrops self-collection and breakup rates for scheme == SB2006Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.rain_terminal_velocity","page":"API","title":"CloudMicrophysics.Microphysics2M.rain_terminal_velocity","text":"rain_terminal_velocity(param_set, scheme, q_rai, ρ, N_rai)\n\nparam_set - abstract set with Earth parameters\nscheme - type for 2-moment liquid self-collection parameterization\nq_rai - rain water specific humidity\nρ - air density\nN_rai - raindrops number density\n\nReturns a tuple containing the number and mass weigthed mean fall velocities of raindrops, assuming an empirical relation similar to Rogers (1993) for fall velocity of individual drops and an exponential size distribution, for scheme == SB2006Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.rain_evaporation","page":"API","title":"CloudMicrophysics.Microphysics2M.rain_evaporation","text":"rain_evaporation(param_set, scheme, q, q_rai, ρ, N_rai, T)\n\nparam_set - abstract set with Earth parameters\nscheme - type for 2-moment liquid self-collection parameterization\nq - phase partition\nq_rai - rain specific humidity\nρ - air density\nN_rai - raindrops number density\nT - air temperature\n\nReturns a tupple containing the tendency of raindrops number density and rain water specific humidity due to rain rain_evaporation, assuming a power law velocity relation for fall velocity of individual drops and an exponential size distribution, for scheme == SB2006Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.conv_q_liq_to_q_rai","page":"API","title":"CloudMicrophysics.Microphysics2M.conv_q_liq_to_q_rai","text":"conv_q_liq_to_q_rai(param_set, scheme, q_liq, ρ; N_d, smooth_transition)\n\nparam_set - abstract set with Earth parameters\nscheme - type for 2-moment rain autoconversion parameterization\nq_liq - cloud water specific humidity\nρ - air density\nN_d - prescribed cloud droplet number concentration\n\nReturns the q_rai tendency due to collisions between cloud droplets (autoconversion), parametrized following:\n\nKhairoutdinov and Kogan (2000) for scheme == KK2000Type\nBeheng (1994) for scheme == B1994Type\nTripoli and Cotton (1980) for scheme == TC1980Type\nLiu and Daum (2004) for scheme ==LD2004Type\n\nN_d is an optional argument with the default value of 100 cm-3\n\nThe Beheng1994Type, TC1980Type and LD2004Type of schemes additionally accept smooth_transition flag that smoothes their thershold behaviour if set to true. The default value is false.\n\n\n\n\n\n","category":"function"},{"location":"API/#Aerosol-model","page":"API","title":"Aerosol model","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"AerosolModel\nAerosolModel.Mode_B\nAerosolModel.Mode_κ\nAerosolModel.AerosolDistribution","category":"page"},{"location":"API/#CloudMicrophysics.AerosolModel","page":"API","title":"CloudMicrophysics.AerosolModel","text":"A container for information on aerosol size distribution\nand chemical properties.\n\nThe size distribution is a sum of lognormal internally mixed modes.\nThe chemical composition can be expressed using kappa parameter\nor hygroscopicity parameter B.\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.AerosolModel.Mode_B","page":"API","title":"CloudMicrophysics.AerosolModel.Mode_B","text":"Mode_B\n\nRepresents the sizes and chemical composition of aerosol particles in one size distribution mode. The mode is assumed to be made up of internally mixed components and follow a lognormal size distribution. The chemical composition of aerosol particles in this mode is described using the parameters from Abdul-Razzak and Ghan 2000.\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.AerosolModel.Mode_κ","page":"API","title":"CloudMicrophysics.AerosolModel.Mode_κ","text":"Mode_κ\n\nRepresents the sizes and chemical composition of aerosol particles in one size distribution mode. The mode is assumed to be made up of internally mixed components and follow a lognormal size distribution. The chemical composition of aerosol particles in this mode is described using the parameters from Petters and Kreidenweis 2007.\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.AerosolModel.AerosolDistribution","page":"API","title":"CloudMicrophysics.AerosolModel.AerosolDistribution","text":"AerosolDistribution\n\nRepresents the aerosol size distribution as a tuple with different modes. All modes have to either be of type ModeB (Abdul-Razzak and Ghan 2000) or of type Modeκ (Petters and Kreidenweis 2007).\n\nConstructors\n\nAerosolDistribution(Modes::T)\n\n\n\n\n\n","category":"type"},{"location":"API/#Aerosol-activation","page":"API","title":"Aerosol activation","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"AerosolActivation\nAerosolActivation.mean_hygroscopicity_parameter\nAerosolActivation.max_supersaturation\nAerosolActivation.N_activated_per_mode\nAerosolActivation.M_activated_per_mode\nAerosolActivation.total_N_activated\nAerosolActivation.total_M_activated","category":"page"},{"location":"API/#CloudMicrophysics.AerosolActivation","page":"API","title":"CloudMicrophysics.AerosolActivation","text":"Aerosol activation scheme, which includes:\n\nmean hygroscopicity for each mode of the aerosol size distribution\ncritical supersaturation for each mode of the aerosol size distribution\nmaximum supersaturation\ntotal number of particles actived\ntotal mass of particles actived\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.AerosolActivation.mean_hygroscopicity_parameter","page":"API","title":"CloudMicrophysics.AerosolActivation.mean_hygroscopicity_parameter","text":"mean_hygroscopicity_parameter(param_set, ad)\n\nparam_set - abstract set with Earth's parameters\nad - aerosol distribution struct\n\nReturns a tuple of hygroscopicity parameters (one tuple element for each aerosol size distribution mode). The tuple is computed either as mass-weighted B parameters (Abdul-Razzak and Ghan 2000) or volume weighted kappa parameters (Petters and Kreidenweis 2007). Implemented via a dispatch based on aerosol distribution mode type.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.AerosolActivation.max_supersaturation","page":"API","title":"CloudMicrophysics.AerosolActivation.max_supersaturation","text":"max_supersaturation(param_set, ad, T, p, w, q)\n\nparam_set - abstract set with Earth's parameters\nad - aerosol distribution struct\nT - air temperature\np - air pressure\nw - vertical velocity\nq - phase partition\n\nReturns the maximum supersaturation.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.AerosolActivation.N_activated_per_mode","page":"API","title":"CloudMicrophysics.AerosolActivation.N_activated_per_mode","text":"N_activated_per_mode(param_set, ad, T, p, w, q)\n\nparam_set - abstract set with Earth's parameters\nad - aerosol distribution struct\nT - air temperature\np - air pressure\nw - vertical velocity\nq - phase partition\n\nReturns the number of activated aerosol particles in each aerosol size distribution mode.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.AerosolActivation.M_activated_per_mode","page":"API","title":"CloudMicrophysics.AerosolActivation.M_activated_per_mode","text":"M_activated_per_mode(param_set, ad, T, p, w, q)\n\nparam_set - abstract set with Earth's parameters\nad - aerosol distribution struct\nT - air temperature\np - air pressure\nw - vertical velocity\nq - phase partition\n\nReturns the mass of activated aerosol particles per mode of the aerosol size distribution.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.AerosolActivation.total_N_activated","page":"API","title":"CloudMicrophysics.AerosolActivation.total_N_activated","text":"total_N_activated(param_set, ad, T, p, w, q)\n\nparam_set - abstract set with Earth's parameters\nad - aerosol distribution struct\nT - air temperature\np - air pressure\nw - vertical velocity\nq - phase partition\n\nReturns the total number of activated aerosol particles.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.AerosolActivation.total_M_activated","page":"API","title":"CloudMicrophysics.AerosolActivation.total_M_activated","text":"total_M_activated(param_set, ad, T, p, w, q)\n\nparam_set - abstract set with Earth's parameters\nad - aerosol distribution struct\nT - air temperature\np - air pressure\nw - vertical velocity\nq - phase partition\n\nReturns the total mass of activated aerosol particles.\n\n\n\n\n\n","category":"function"},{"location":"API/#Heterogeneous-ice-nucleation","page":"API","title":"Heterogeneous ice nucleation","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"HetIceNucleation\nHetIceNucleation.dust_activated_number_fraction\nHetIceNucleation.ABIFM_J","category":"page"},{"location":"API/#CloudMicrophysics.HetIceNucleation","page":"API","title":"CloudMicrophysics.HetIceNucleation","text":"Parameterization for heterogenous ice nucleation.\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.HetIceNucleation.dust_activated_number_fraction","page":"API","title":"CloudMicrophysics.HetIceNucleation.dust_activated_number_fraction","text":"dust_activated_number_fraction(prs, Si, T, dust_type)\n\nprs - set with model parameters\nSi - ice saturation ratio\nT - air temperature [K]\ndust_type - a type for different dusts.\n\nReturns the number fraction of mineral dust particles acting as deposition nuclei (n ice nuclei / n dust particles). From Mohler et al 2006 Table 2 (averages from different measurements excluding those where a was not measured)\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.HetIceNucleation.ABIFM_J","page":"API","title":"CloudMicrophysics.HetIceNucleation.ABIFM_J","text":"ABIFM_J(dust_type, Δa_w)\n\ndust_type - choosing aerosol type\nΔa_w - change in water activity [unitless].\n\nReturns the immersion freezing nucleation rate coefficient, J, in m^-2 s^-1 for sulphuric acid containing solutions.  For other solutions, psol should be adjusted accordingly. Deltaaw can be found using the Deltaa_w function in Common.jl.  m and c constants are taken from Knopf & Alpert 2013.\n\n\n\n\n\n","category":"function"},{"location":"API/#Homogeneous-ice-nucleation","page":"API","title":"Homogeneous ice nucleation","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"HomIceNucleation\nHomIceNucleation.homogeneous_J","category":"page"},{"location":"API/#CloudMicrophysics.HomIceNucleation","page":"API","title":"CloudMicrophysics.HomIceNucleation","text":"Parameterization for homogeneous ice nucleation\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.HomIceNucleation.homogeneous_J","page":"API","title":"CloudMicrophysics.HomIceNucleation.homogeneous_J","text":"homogeneous_J(Δa_w)\n\nΔa_w - change in water activity\n\nReturns the homogeneous freezing nucleation rate coefficient, J, in m^-3 s^-1 for sulphuric acid containing solutions. Parameterization based off Koop 2000. Deltaaw can be found using the Deltaaw function in Common.jl.\n\n\n\n\n\n","category":"function"},{"location":"API/#Common-utility-functions","page":"API","title":"Common utility functions","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Common\nCommon.G_func\nCommon.logistic_function\nCommon.logistic_function_integral\nCommon.H2SO4_soln_saturation_vapor_pressure\nCommon.Delta_a_w","category":"page"},{"location":"API/#CloudMicrophysics.Common","page":"API","title":"CloudMicrophysics.Common","text":"Module for functions shared by different parameterizations.\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.Common.G_func","page":"API","title":"CloudMicrophysics.Common.G_func","text":"G_func(param_set, T, Liquid())\nG_func(param_set, T, Ice())\n\nparam_set - abstract set with earth parameters\nT - air temperature\nLiquid(), Ice() - liquid or ice phase to dispatch over.\n\nUtility function combining thermal conductivity and vapor diffusivity effects.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Common.logistic_function","page":"API","title":"CloudMicrophysics.Common.logistic_function","text":"logistic_function(x, x_0, k)\n\nx - independent variable\nx_0 - threshold value for x\nk - growth rate of the curve, characterizing steepness of the transition\n\nReturns the value of the logistic function for smooth transitioning at thresholds. This is a normalized curve changing from 0 to 1 while x varies from 0 to Inf (for positive k). For x < 0 the value at x = 0 (zero) is returned. For x_0 = 0 H(x) is returned.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Common.logistic_function_integral","page":"API","title":"CloudMicrophysics.Common.logistic_function_integral","text":"logistic_function_integral(x, x_0, k)\n\nx - independent variable\nx_0 - threshold value for x\nk - growth rate of the logistic function, characterizing steepness of the transition\n\nReturns the value of the indefinite integral of the logistic function, for smooth transitioning of piecewise linear profiles at thresholds. This curve smoothly transition from y = 0 for 0 < x < x0 to y = x - x0 for x_0 < x.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Common.H2SO4_soln_saturation_vapor_pressure","page":"API","title":"CloudMicrophysics.Common.H2SO4_soln_saturation_vapor_pressure","text":"H2SO4_soln_saturation_vapor_pressure(x, T)\n\nx - wt percent sulphuric acid [unitless] \nT - air temperature [K].\n\nReturns the saturation vapor pressure above a sulphuric acid solution droplet in Pa. x is, for example, 0.1 if droplets are 10 percent sulphuric acid by weight\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Common.Delta_a_w","page":"API","title":"CloudMicrophysics.Common.Delta_a_w","text":"Delta_a_w(prs, x, T)\n\nprs - set with model parameters\nx - wt percent sulphuric acid [unitless]\nT - air temperature [K].\n\nReturns the change in water activity when droplet undergoes immersion freezing. x is, for example, 0.1 if droplets are 10 percent sulphuric acid by weight.\n\n\n\n\n\n","category":"function"},{"location":"API/#Common-utility-types","page":"API","title":"Common utility types","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"CommonTypes\nCommonTypes.AbstractAerosolDistribution\nCommonTypes.AbstractCloudType\nCommonTypes.AbstractPrecipType\nCommonTypes.LiquidType\nCommonTypes.IceType\nCommonTypes.RainType\nCommonTypes.SnowType\nCommonTypes.Abstract2MPrecipType\nCommonTypes.KK2000Type\nCommonTypes.B1994Type\nCommonTypes.TC1980Type\nCommonTypes.LD2004Type\nCommonTypes.SB2006Type\nCommonTypes.AbstractAerosolType\nCommonTypes.ArizonaTestDustType\nCommonTypes.DesertDustType","category":"page"},{"location":"API/#CloudMicrophysics.CommonTypes","page":"API","title":"CloudMicrophysics.CommonTypes","text":"Additional type hierarchy to dispatch over for some microphysics parameters\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.CommonTypes.AbstractAerosolDistribution","page":"API","title":"CloudMicrophysics.CommonTypes.AbstractAerosolDistribution","text":"AbstractAerosolDistribution\n\nThe top-level super-type for all aerosol distribution types.\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.AbstractCloudType","page":"API","title":"CloudMicrophysics.CommonTypes.AbstractCloudType","text":"AbstractCloudType\n\nThe top-level super-type for cloud liquid water and cloud ice types\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.AbstractPrecipType","page":"API","title":"CloudMicrophysics.CommonTypes.AbstractPrecipType","text":"AbstractPrecipType\n\nThe top-level super-type for precipitation types (rain and snow)\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.LiquidType","page":"API","title":"CloudMicrophysics.CommonTypes.LiquidType","text":"LiquidType\n\nThe type for cloud liquid water condensate\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.IceType","page":"API","title":"CloudMicrophysics.CommonTypes.IceType","text":"IceType\n\nThe type for cloud ice condensate\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.RainType","page":"API","title":"CloudMicrophysics.CommonTypes.RainType","text":"RainType\n\nThe type for rain\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.SnowType","page":"API","title":"CloudMicrophysics.CommonTypes.SnowType","text":"SnowType\n\nThe type for snow\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.Abstract2MPrecipType","page":"API","title":"CloudMicrophysics.CommonTypes.Abstract2MPrecipType","text":"Abstract2MPrecipType\n\nThe top-level super-type for 2-moment precipitation formation types\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.KK2000Type","page":"API","title":"CloudMicrophysics.CommonTypes.KK2000Type","text":"KK2000Type\n\nThe type for 2-moment precipitation formation by Khairoutdinov and Kogan (2000)\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.B1994Type","page":"API","title":"CloudMicrophysics.CommonTypes.B1994Type","text":"B1994Type\n\nThe type for 2-moment precipitation formation by Beheng (1994)\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.TC1980Type","page":"API","title":"CloudMicrophysics.CommonTypes.TC1980Type","text":"TC1980Type\n\nThe type for 2-moment precipitation formation by Tripoli and Cotton (1980)\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.LD2004Type","page":"API","title":"CloudMicrophysics.CommonTypes.LD2004Type","text":"LD2004Type\n\nThe type for 2-moment precipitation formation by Liu and Daum (2004)\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.SB2006Type","page":"API","title":"CloudMicrophysics.CommonTypes.SB2006Type","text":"SB2006Type\n\nThe type for 2-moment precipitation formation by Seifert and Beheng (2006)\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.AbstractAerosolType","page":"API","title":"CloudMicrophysics.CommonTypes.AbstractAerosolType","text":"AbstractAerosolType\n\nThe top-level super-type for all aerosol types.\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.ArizonaTestDustType","page":"API","title":"CloudMicrophysics.CommonTypes.ArizonaTestDustType","text":"ArizonaTestDustType\n\nThe type for Arizona test dust for deposition activated fraction\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.CommonTypes.DesertDustType","page":"API","title":"CloudMicrophysics.CommonTypes.DesertDustType","text":"DesertDustType\n\nThe type for desert dust for deposition activated fraction\n\n\n\n\n\n","category":"type"},{"location":"API/#Precipitation-susceptibility","page":"API","title":"Precipitation susceptibility","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"PrecipitationSusceptibility.precipitation_susceptibility_autoconversion\nPrecipitationSusceptibility.precipitation_susceptibility_accretion","category":"page"},{"location":"API/#CloudMicrophysics.PrecipitationSusceptibility.precipitation_susceptibility_autoconversion","page":"API","title":"CloudMicrophysics.PrecipitationSusceptibility.precipitation_susceptibility_autoconversion","text":"precipitation_susceptibility_autoconversion(param_set, scheme, q_liq, q_rai, ρ, N_liq)\n\nparam_set - abstract set with Earth parameters\nscheme - type for 2-moment rain autoconversion parameterization\nq_liq - cloud water specific humidity\nq_rai - rain water specific humidity\nρ - air density\nN_liq - cloud droplet number density\n\nReturns the precipitation susceptibility rates due to autoconversion as a precip_susceptibility_rates object, using automatic differentiation. Works for any 2-moment scheme, as long as autoconversion is defined for it.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.PrecipitationSusceptibility.precipitation_susceptibility_accretion","page":"API","title":"CloudMicrophysics.PrecipitationSusceptibility.precipitation_susceptibility_accretion","text":"precipitation_susceptibility_accretion(param_set, scheme, q_liq, q_rai, ρ, N_liq)\n\nparam_set - abstract set with Earth parameters\nscheme - type for 2-moment rain autoconversion parameterization\nq_liq - cloud water specific humidity\nq_rai - rain water specific humidity\nρ - air density\nN_liq - cloud droplet number density\n\nReturns the precipitation susceptibility rates due to accretion as a precip_susceptibility_rates object, using automatic differentiation. Works for any 2-moment scheme, as long as accretion is defined for it.\n\n\n\n\n\n","category":"function"},{"location":"AerosolActivation/#Aerosol-Activation","page":"Aerosol activation","title":"Aerosol Activation","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The AerosolActivation.jl module contains parameterization   of activation of aerosol particles into cloud droplets   via deposition of water vapor. Accompanying it, is the AerosolDistribution.jl module, which contains   information about the aerosol size distribution and chemical properties. The parameterization computes the total activated number and mass   from a given aerosol size distribution. It is based on Köhler theory   and assumes equilibrium thermodynamics. The modules are an implementation of the parameterization   from Hayder Abdul-Razzak, Steven J. Ghan, Carlos Rivera-Carpio (1998) and   Hayder Abdul-Razzak, Steven J. Ghan (2000). The aerosol chemical composition can be expressed using the B parameter   from Hayder Abdul-Razzak, Steven J. Ghan (2000)   or the kappa parameter from M. D. Petters, S. M. Kreidenweis (2007).","category":"page"},{"location":"AerosolActivation/#Assumed-aerosol-size-distribution-and-properties","page":"Aerosol activation","title":"Assumed aerosol size distribution and properties","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"Aerosol particles are assumed to follow a multi-mode lognormal   size distribution. Particles in each mode are assumed to be internally mixed. The following table lists the parameters defining the aerosol   physical and chemical properties using the B parameter. The r_dry, sigma, and N_tot are given for each mode. Other parameters are defined for each component in each mode.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"variable name definition units\nr_dry geometric mean dry radius m\nsigma geometric standard deviation -\nN_tot total number concentration m^-3\nr component mass mixing ratio -\nepsilon mass fraction of water soluble material -\nphi osmotic coefficient -\nM_a molar mass kg  mol^-1\nnu number of ions the salt dissociates into in water -\nrho_a aerosol density kg  m^-3","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"When using the kappa formulation, one has to specify fewer parameters.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"variable name definition units\nr_dry geometric mean dry radius m\nsigma geometric standard deviation -\nN_tot total number concentration m^-3\nr_vol component volume mixing ratio -\nM_a molar mass kg  mol^-1\nkappa kappa parameter -","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"note: Note\nThe parameterization assumes that the solute is sufficiently soluble so that its concentration does not increase as the droplet grows. The effects of surfactants on surface tension are also not considered.","category":"page"},{"location":"AerosolActivation/#Mean-Hygroscopicity","page":"Aerosol activation","title":"Mean Hygroscopicity","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"Hygroscopicity describes the impact of solute on aerosol efficiency in taking up   water vapor from the environment (i.e. the Raoult's law). The parametrization accepts two ways of describing it, either using the   B parameter or kappa parameter. The B parameter is defined in eq. (3) in Hayder Abdul-Razzak, Steven J. Ghan (2000):","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"B = fracnu  phi  M_w  rho_aM_a  rho_w","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"nu  phi  M_a  rho_a are the aerosol properties defined in the above table,\nM_w is the molar mass of water,\nrho_w is the density of water.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The mean B parameter for internally mixed mode i   made up of j aerosol species is computed   according to eq. (4) in Hayder Abdul-Razzak, Steven J. Ghan (2000):","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nbarB_i = fracM_w sum_j = 1^J fracr_ij  nu_ij  phi_ij  epsilon_ijM_aijrho_w sum_j = 1^J fracr_ijrho_aij\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"i = 1 2  I iterates over aerosol size distribution modes,\nj = 1 2  J iterates over aerosol components within a given mode,\nr_ij is the mass ratio of component j in mode i.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The kappa parameter values for different chemical compounds are provided   in Table 1 in  M. D. Petters, S. M. Kreidenweis (2007). The mean kappa parameter for internally mixed mode i   made up of j aerosol species is computed as a volume weighted average:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"kappa_i = sum_j=1^J r_ij vol kappa_ij","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"r_ij  vol is the volume ratio of component j in mode i.","category":"page"},{"location":"AerosolActivation/#Critical-supersaturation","page":"Aerosol activation","title":"Critical supersaturation","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"Supersaturation S is the ratio of water vapor pressure to saturation vapor pressure. Köhler theory defines S at which the growing aerosol particle   is in equilibrium with the environment over a range of its sizes. It takes into account the curvature effects and the solute effects. Aerosol activation occurs when the threshold supersaturation,   named critical supersaturation S_c, is reached. After reaching S_c, even when S decreases,   as long as the conditions remain saturated,   the particle will continue to grow. The critical supersaturation is defined by the maximum of the   Köhler curve. For example, eq.(9) in Hayder Abdul-Razzak, Steven J. Ghan (2000) defines the   the critical supersaturation for a particle with   dry radius equal to the mean mode radius:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nS_ci = frac2sqrtbarH_i bigg( fracA3  r_dry  i bigg)^32\nlabeleqScriti\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"H_i is either the B_i or the kappa_i hygroscopicity parameter\nA is the coefficient describing the curvature effects (i.e. Kelvin effect),\nr_dry  i is the mean dry radius for mode i.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"Coefficient A is defined as in equation (5) in Hayder Abdul-Razzak, Steven J. Ghan, Carlos Rivera-Carpio (1998).","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nA = frac2 tau M_wrho_w R T\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"tau is the surface tension of water,\nR is the universal gas constant,\nT is the temperature.","category":"page"},{"location":"AerosolActivation/#Maximum-Supersaturation","page":"Aerosol activation","title":"Maximum Supersaturation","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"Maximum supersaturation reached by the system S_max governs   what aerosol sizes are activated and what aren't. We estimate S_max by considering a parcel of air raising adiabatically   with a constant velocity, see for example R.R. Rogers (1975). The time rate of change of S is given by eq (10) in R.R. Rogers (1975)","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\n  fracdSdt = alpha w - gamma fracdchidt\n  labeleqSevolution\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"w is the vertical velocity,\ndchi  dt is the water condensation rate during aerosol activation and growth,\nalpha and gamma are coefficients that do not depend on aerosol properties.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The parameters alpha and gamma are defined by eq. (11) and (12)   in Hayder Abdul-Razzak, Steven J. Ghan, Carlos Rivera-Carpio (1998) . Here, they are implemented following the R.R. Rogers (1975) eq. (10):","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nalpha = fracL_v  g  epsilonR_m  c_pm  T^2 - fracgR_m  T\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\ngamma = fracR_m Tepsilon  p_vap^sat + fracepsilon  L_v^2c_pm  T  p\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"L_v is the latent heat of vaporization,\ng is gravitational acceleration,\nepsilon is the ratio of water molar mass to dry air molar mass,\nR_m is the gas constant of air (dry air and moisture)\nc_pm is the specific heat of air (dry air and moisture),\np_vap^sat is the saturation vapor pressure,\np is the total air pressure.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The maximum supersaturation is estimated from eq. (\\ref{eq:Sevolution})   assuming steady a state solution dSdt = 0. Hayder Abdul-Razzak, Steven J. Ghan, Carlos Rivera-Carpio (1998) and Hayder Abdul-Razzak, Steven J. Ghan (2000)   show how to derive an approximate solution for S_max,   since analytical solution is in general not possible. They consider approximate solutions for very small and very large   critical supersaturation values relative to maximum supersaturation,   and combine them into a final expression for S_max. The final formula is presented in eq (6) in Hayder Abdul-Razzak, Steven J. Ghan (2000)","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nS_max = frac1Bigg sum_i=1^Ifrac1S_ci^2biggf_i Big( fraczetaeta_i Big)^frac32 + g_i Big(fracS_ci^2eta_i + 3zeta Big)^frac34bigg Bigg^frac12\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"S_ci is the critical supersaturation for mode i defined in eq. (\\ref{eq:Scriti}),\nf_i, g_i, zeta, eta_i are the coefficients defined in eqs. (7, 8, 10 and 11) in  Hayder Abdul-Razzak, Steven J. Ghan (2000).","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nf_i  = 05  mathrmexp (25  mathrmln^2 sigma_i)\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\ng_i  = 1 + 025  mathrmln sigma_i\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nzeta = frac2A3 bigg(fracalpha wGbigg)^frac12\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\neta_i = bigg(fracalpha wGbigg)^frac32 frac12 pi rho_w gamma N_i\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"G(T) = frac1rho_w  left(fracL_vKT left(fracL_vR_v T - 1 right) + fracR_v Tp_vap^sat D right)^-1   combines the effects of thermal conductivity K and water diffusivity D.","category":"page"},{"location":"AerosolActivation/#Number-and-mass-of-activated-particles","page":"Aerosol activation","title":"Number and mass of activated particles","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The total number N_act and mass M_act of activated aerosol particles   can be computed by integrating their size distribution   starting from the smallest activated size. Following the derivations of   Hayder Abdul-Razzak, Steven J. Ghan, Carlos Rivera-Carpio (1998) and Hayder Abdul-Razzak, Steven J. Ghan (2000)   this can be expressed in terms of critical supersaturations of each   size distribution mode S_ci and the maximum supersaturation S_max.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nN_act = sum_i = 1^I N_ifrac12bigg1 - mathrmerf(u_i)bigg\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nM_act = sum_i = 1^I M_ifrac12bigg1 - mathrmerfbigg(u_i - frac3 sqrt22 ln(sigma_i)bigg)bigg\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"M_i is the average molar mass of aerosol particles in mode i,\nu_i is given in equation (15) in Hayder Abdul-Razzak, Steven J. Ghan (2000).","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nu_i = frac23sqrt2  ln(sigma_i) lnbigg( fracS_ciS_max bigg)\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"S_ci is the mode critical supersaturation,\nS_max is the maximum supersaturation.","category":"page"},{"location":"AerosolActivation/#Example-figures","page":"Aerosol activation","title":"Example figures","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"import Plots\n\nimport CloudMicrophysics\nimport CLIMAParameters\nimport Thermodynamics\n\nconst PL = Plots\nconst AM = CloudMicrophysics.AerosolModel\nconst AA = CloudMicrophysics.AerosolActivation\nconst CMP = CloudMicrophysics.Parameters\nconst CP =  CLIMAParameters\nconst TD = Thermodynamics\n\ninclude(joinpath(pkgdir(CloudMicrophysics), \"test\", \"create_parameters.jl\"))\nFT = Float64\ntoml_dict = CP.create_toml_dict(FT; dict_type = \"alias\")\nconst param_set = cloud_microphysics_parameters(toml_dict)\nthermo_params = CMP.thermodynamics_params(param_set)\n\n# Atmospheric conditions\nT = 294.0         # air temperature\np = 1000.0 *1e2   # air pressure\nw = 0.5           # vertical velocity\n\n# We need the phase partition here only so that we can compute the\n# moist R_m and cp_m in aerosol activation module.\n# We are assuming here saturated conditions and no liquid water or ice.\n# This is consistent with the assumptions of the aerosol activation scheme.\np_vs = TD.saturation_vapor_pressure(thermo_params, T, TD.Liquid())\nq_vs = 1 / (1 - CMP.molmass_ratio(param_set) * (p_vs - p) / p_vs)\nq = TD.PhasePartition(q_vs, 0.0, 0.0)\n\n# Abdul-Razzak and Ghan 2000 Figure 1 mode 1\n# https://doi.org/10.1029/1999JD901161\nr_dry = 0.05 * 1e-6 # um\nstdev = 2.0         # -\nN_1 = 100.0 * 1e6   # 1/m3\n\n# Sulfate - universal parameters\nM_sulfate = CMP.molmass_sulfate(param_set)\nρ_sulfate = CMP.rho_sulfate(param_set)\nϕ_sulfate = CMP.osm_coeff_sulfate(param_set)\nν_sulfate = CMP.N_ion_sulfate(param_set)\nϵ_sulfate = CMP.water_soluble_mass_frac_sulfate(param_set)\n\nn_components_1 = 1\nmass_fractions_1 = (1.0,)\npaper_mode_1_B = AM.Mode_B(\n    r_dry,\n    stdev,\n    N_1,\n    mass_fractions_1,\n    (ϵ_sulfate,),\n    (ϕ_sulfate,),\n    (M_sulfate,),\n    (ν_sulfate,),\n    (ρ_sulfate,),\n    n_components_1,\n)\n\nN_2_range = range(0, stop=5000 * 1e6, length=100)\nN_act_frac_B = Vector{Float64}(undef, 100)\n\nit = 1\nfor N_2 in N_2_range\n        n_components_2 = 1\n        mass_fractions_2 = (1.0,)\n        paper_mode_2_B = AM.Mode_B(\n          r_dry,\n          stdev,\n          N_2,\n          mass_fractions_2,\n          (ϵ_sulfate,),\n          (ϕ_sulfate,),\n          (M_sulfate,),\n          (ν_sulfate,),\n          (ρ_sulfate,),\n          n_components_2,\n        )\n        AD_B =  AM.AerosolDistribution((paper_mode_1_B, paper_mode_2_B))\n        N_act_frac_B[it] = AA.N_activated_per_mode(param_set, AD_B, T, p, w, q)[1] / N_1\n        global it += 1\nend\n\n# data read from Fig 1 in Abdul-Razzak and Ghan 2000\n# using https://automeris.io/WebPlotDigitizer/\ninclude(\"ARGdata.jl\")\n\nPL.plot(N_2_range * 1e-6, N_act_frac_B, label=\"CliMA-B\", xlabel=\"Mode 2 aerosol number concentration [1/cm3]\", ylabel=\"Mode 1 number fraction activated\")\nPL.scatter!(Fig1_x_obs, Fig1_y_obs, markercolor = :black, label=\"paper observations\")\nPL.plot!(Fig1_x_param, Fig1_y_param, linecolor = :black, label=\"paper parameterization\")\n\nPL.savefig(\"Abdul-Razzak_and_Ghan_fig_1.svg\")","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"(Image: )","category":"page"},{"location":"#CloudMicrophysics.jl","page":"Home","title":"CloudMicrophysics.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The CloudMicrophysics.jl is a library of bulk cloud microphysics and aerosol schemes.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The goal of a cloud microphysics scheme is to represent the micro-scale processes   leading to the formation of clouds and precipitation. Bulk microphysics schemes represent overall properties of cloud and precipitation particles,   instead of solving for the evolution of individual cloud droplets or ice crystals. Bulk schemes typically consider different somewhat arbitrary water categories   such as cloud water, cloud ice, rain and snow. They then predict total mass and (optionally) number concentration of particles in each category. A scheme that predicts the total mass of particles per category is called 1-moment,   because the total mass of particles is proportional to the 3rd moment of the particle size distribution. A scheme that predicts the total mass and number concentration of particles per category is called 2-moment,   because the predicted quantities are proportional to the 3rd and 0th moment of the particle size distribution. Aerosol particles serve as nuclei for forming cloud droplets and ice crystals. Additional schemes are needed to predict how many cloud droplets or ice crystals   form for a given population of aerosol particles, when using a 2-moment microphysics scheme.","category":"page"},{"location":"","page":"Home","title":"Home","text":"So far CloudMicrophysics.jl includes:","category":"page"},{"location":"","page":"Home","title":"Home","text":"0-moment scheme that instantly removes the precipitable cloud condensate,\n1-moment scheme for warm rain and mixed-phase clouds (cloud water and ice, ran and snow (aggregate)),\n2-moment scheme for warm rain clouds (cloud water and rain),\ncollection of different 2-moment autoconversion and accretion functions,\nexperimental non-equilibrium cloud formation scheme,\na collection of logistic functions for smooth transitions at thresholds,\naerosol activation scheme,\nice nucleation scheme through water vapor deposition on dust aerosol.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This documentation provides some use examples for different available schemes,   along with derivation notes and links to the literature. The CI tests include unit tests and some very simple performance benchmarks and GPU tests.","category":"page"},{"location":"#Authors","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CloudMicrophysics.jl is being developed by the   Climate Modeling Alliance. (Image: Clima logo)","category":"page"}]
}
