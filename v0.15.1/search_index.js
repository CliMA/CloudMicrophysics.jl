var documenterSearchIndex = {"docs":
[{"location":"Microphysics0M/#Microphysics-0M","page":"0-moment precipitation microphysics","title":"Microphysics 0M","text":"","category":"section"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"The Microphysics0M.jl module defines a 0-moment bulk parameterization of   the moisture sink due to precipitation. It offers a simplified way of removing the excess water   without assuming anything about the size distributions of cloud   or precipitation particles.","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"The q_tot (total water specific humidity) sink due to precipitation   is obtained by relaxation with a constant timescale   to a state with condensate exceeding a threshold value removed. The threshold for removing excess q_tot is defined either by the   condensate specific humidity or supersaturation. The thresholds and the relaxation timescale are defined in   CLIMAParameters.jl.","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"note: Note\nTo remove precipitation instantly, the relaxation timescale should be equal to the timestep length.","category":"page"},{"location":"Microphysics0M/#Moisture-sink-due-to-precipitation","page":"0-moment precipitation microphysics","title":"Moisture sink due to precipitation","text":"","category":"section"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"If based on maximum condensate specific humidity, the sink is defined as:","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"beginequation\n  left fracd  q_totdt right_precip =-\n    fracmax(0 q_liq + q_ice - q_c0)tau_precip\nendequation","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"q_liq, q_ice are cloud liquid water and cloud ice specific humidities,\nq_c0 is the condensate specific humidity threshold above which water is removed,\ntau_precip is the relaxation timescale.","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"If based on saturation excess, the sink is defined as:","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"beginequation\n  left fracd  q_totdt right_precip =-\n    fracmax(0 q_liq + q_ice - S_0  q_vap^sat)tau_precip\nendequation","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics0M/","page":"0-moment precipitation microphysics","title":"0-moment precipitation microphysics","text":"q_liq, q_ice are cloud liquid water and cloud ice specific humidities,\nS_0 is the supersaturation threshold above which water is removed,\nq_vap^sat is the saturation specific humidity,\ntau_precip is the relaxation timescale.","category":"page"},{"location":"P3Scheme/#P3-Scheme","page":"P3 Scheme","title":"P3 Scheme","text":"","category":"section"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"The P3Scheme.jl module implements the predicted particle properties  (P3) scheme for ice-phase microphysics developed by [22] The P3 scheme is a 2-moment, bulk scheme involving a  single ice-phase category with 4 degrees of freedom: total mass,  rime mass, rime volume, and number mixing ratios. Traditionally, cloud ice microphysics schemes use various predefined  categories (such as ice, graupel, or hail) to represent ice modes, but the P3 scheme sidesteps the  problem of prescribing transitions between ice categories by adopting  a single ice category and evolving its properties. This simplification  aids in attempts to constrain the scheme's free parameters.","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"The prognostic variables are:","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"N_ice - number concentration 1/m3\nq_ice - ice mass density kg/m3\nq_rim - rime mass density kg/m3\nB_rim - rime volume - (volume of rime per total air volume: dimensionless)","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"note: Note\nTODO - At some point we should switch to specific humidities...","category":"page"},{"location":"P3Scheme/#Assumed-particle-size-distribution-(PSD)","page":"P3 Scheme","title":"Assumed particle size distribution (PSD)","text":"","category":"section"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"Following [22], the scheme assumes a  gamma distribution for the concentration of particles per unit volume  based on particle size measurements obtained by [23]  in tropical and midlatitude ice clouds and implemented by  [24]:","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"N(D) = N_0 D^mu  e^-lambda  D","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"where:","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"N is the number concentration in m^-4\nD is the maximum particle dimension in m,\nN_0 is the intercept parameter in m^-4,\nmu is the shape parameter (dimensionless),\nlambda is the slope parameter in m^-1.","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"We assume mu  = 000191  lambda  ^08 - 2. Following [24] we limit mu  in (06). A negative mu can occur only for very small mean particle sizesfrac1lambda  017 mm. N_0 and lambda can be found using different moments of the PSD, namely the total number concentration N and mass mixing ratio q, where","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"N = int_0^infty  N(D) mathrmdD","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"q = int_0^infty  m(D) N(D) mathrmdD","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"For liquid droplets, these equations are solved without issue, but for ice, the third moment of the size distribution listed above (i.e. int_0^infty  m(D) N(D) mathrmdD) varies as the mass relation varies across the PSD (see below for the mass regime documentation). On the other hand, the first moment of the PSD, the number concentration, does not vary across the PSD and yields N = fracN_0lambda.","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"note: Note\nTODO - The scheme uses a mean particle size value D_m for each time step to determine which mass relation to employ. In other words, N_0 and lambda must be calculated for the five different mass relations below to accommodate ranges of D_m corresponding to each mass relation. For mean particle sizes that employ the mass relations characterized by graupel and by partially rimed ice, the mass relations are time-dependent due to the presence of rho_g and F_r. This complicates the scheme's use of the PSD, and as a result, writing analytical formulas for the PSD parameters is challenging.","category":"page"},{"location":"P3Scheme/#Assumed-particle-mass-relationships","page":"P3 Scheme","title":"Assumed particle mass relationships","text":"","category":"section"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"The mass m of particles as a function of maximum particle dimension D  is a piecewise function with variable thresholds described  by the following table.","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"particle properties condition(s) m(D) relation\nsmall, spherical ice D  D_th fracpi6 rho_i  D^3\nlarge, unrimed ice q_rim = 0 and D  D_th alpha_va  D^beta_va\ndense nonspherical ice q_rim  0 and D_gr  D  D_th alpha_va  D^beta_va\ngraupel (completely rimed, spherical) q_rim  0 and D_cr  D  D_gr fracpi6 rho_g  D^3\npartially rimed ice q_rim  0 and D  D_cr fracalpha_va1-F_r D^beta_va","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"where:","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"D_th, D_gr, D_cr are particle size thresholds in m,\nrho_i is cloud ice density in kg m^-3,\nbeta_va = 19 is a dimensionless parameter from [25] (based on measurements of vapor diffusion and aggregation in midlatitude cirrus),\nalpha_va = 738  10^-11  10^6 beta_va - 3 in kg m^-Î²_va is a parameter modified for units from [25] in base SI units (also based on measurements of vapor diffusion and aggregation in midlatitude cirrus),\nrho_g is the bulk density of graupel in kg m^-3.","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"The first threshold is solely determined by the free parameters:   D_th = (fracpi rho_i6alpha_va)^frac1beta_va - 3. The remaining thresholds: D_gr, D_cr, as well as the   bulk density of graupel rho_g,   and the bulk density of the unrimed part rho_d   form a nonlinear system:","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"D_gr = (frac6alpha_vapi rho_g)^frac13 - beta_va\nD_cr =  (frac11-F_r) frac6 alpha_vapi rho_g ^frac13 - beta_va\nrho_g = rho_r F_r + (1 - F_r) rho_d\nrho_d = frac6alpha_va(D_cr^betava  - 2 - D_gr^betava  - 2)pi  (beta_va  - 2)(D_cr-D_gr)","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"where","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"F_r = fracq_rimq_ice is the rime mass fraction,\nrho_r = fracq_rimB_rim is the predicted rime density.","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"The system is solved using NonlinearSolve.jl.","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"note: Note\nTODO - The use of NonlinearSolve.jl is not ideal because of its runtime and memory allocation requirements. Currently, there is also a look-up table NetCDF file which could be used to look up values of the quantities which form the nonlinear system. However, the look-up table is not GPU-compatible and would require too much memory in an Earth System Model. The current approach may be of use for testing and for visualization of the system, but other options, such as using RootSolvers.jl or using a simpler fit that approximates the solver output, are more suitable long term solutions which do not require outside packages which employ auto-differentiation or use memory, both of which do not suit the needs of CliMA.","category":"page"},{"location":"P3Scheme/#Assumed-particle-projected-area-relationships","page":"P3 Scheme","title":"Assumed particle projected area relationships","text":"","category":"section"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"The projected area A of particles as a function of maximum particle dimension D  is another piecewise function with variable breakpoints described  by the following table. The mean particle dimension D_m, a predicted property,  determines which portion of the piecewise function to use for each time step.","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"particle properties condition(s) A(D) relation\nsmall, spherical ice D  D_th fracpi4 D^2\nlarge, unrimed ice q_rim = 0 and D  D_th gamma  D^sigma\ndense nonspherical ice q_rim  0 and D_gr  D  D_th gamma  D^sigma\ngraupel (completely rimed, spherical) q_rim  0 and D_cr  D  D_gr fracpi4 D^2\npartially rimed ice q_rim  0 and D  D_cr F_r fracpi4 D^2 + (1-F_r)gamma  D^sigma","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"where all variables from the m(D) regime are as defined above, and:","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"gamma = 02285 (m^2 - sigma) where\nsigma = 188 (dimensionless), both from the aggregates of side planes, columns, bullets, and planar polycrystals in [26].","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"note: Note\nTODO - As mentioned in issue #151, the units of gamma and sigma are not immediately clear from [26] and [22]. To resolve this issue, it may be useful to contact the authors of the paper, or, examine the representative figures below to check units. It has occured to me that the units of D are probably m and that the units of A are probably m2. I have assumed these dimensions for the time being. Another likely scenario would be if D had units of mm, in which case we would have gamma = 02285  10^3 sigma to correct for units. However, the plots of area versus particle dimension look outlandish in this case.","category":"page"},{"location":"P3Scheme/#Example-figures","page":"P3 Scheme","title":"Example figures","text":"","category":"section"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"Below we show the m(D) regime, replicating Figures 1 (a) and (b) from [22]. We also show a(D).","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"include(\"plots/P3SchemePlots.jl\")","category":"page"},{"location":"P3Scheme/","page":"P3 Scheme","title":"P3 Scheme","text":"(Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"DevelopersGuide/#Developer's-Guide","page":"Developer's Guide","title":"Developer's Guide","text":"","category":"section"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"This doc is meant to guide any beginner developers with organization   and common surprises associated with contributing to CloudMicrophysics.jl.","category":"page"},{"location":"DevelopersGuide/#GitHub-workflow","page":"Developer's Guide","title":"GitHub workflow","text":"","category":"section"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"We work on branches of the main repository, rather than personal forks. Each branch name should ideally start with your initials, followed by short   name relevant to what will be added in that branch. It is considered a good practice to open an issue that describes the planned work   before starting the implementation. This allows you to get feedback from other developers and advertise the planned work to the group. When the implemented code is ready for review, create a pull request (PR) on GitHub   and tag the issue it is addressing. In the PR you can describe which parts of the relevant issue are solved and what needs to   be done to reach that goal. After creating a PR on GitHub, you will find that every following commit & push you make   will go through continuous integration (CI) checks:","category":"page"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"The, ci / ci 1.8.1 runs the tests on Ubuntu, Windows and OSX machines using GitHub Actions. The tests include some unit tests and very simple performance tests. It may happen that the tests pass on your local machine, but fail on one of the machines provided in the cloud for the CI. This is especially true for the performance tests, as the execution times may vary a lot depending on the machine. The CI is the source of truth over local tests, and all tests must pass in the CI before code can be merged. See the Tests section below for debugging tips.\nCloudMicrophysics.jl has a small set of tests that are run on the GPUs using buildkite. They are triggered automatically when trying to merge a PR, or manually by commenting bors try on your PR. If the GPU tests fail, check first for use of any \"out of place\" functions (for example, @warn will not work on GPU).\nThe Documentation / docbuild builds the documentation. Most common errors in the docbuild are related to missing docstrings, see the Documentation section for hints. This check may fail if the source code itself is not compiling, so please handle the compilation errors first. If the documentation build was successful, the documenter/deploy will display the documentation page based on the PR (click on the details).\nThe JuliaFormatter / format ensures consistent formatting throughout the repository. If this check fails, you can click on details to see which files are not following the formatting rules. You can apply the formatter by running julia --project=.dev .dev/climaformat.jl file_name in the terminal. The formatter might break if the code does not compile, so make sure you handle the compilation errors first.\nThe codecov shows what percentage of source code lines are exercised inside the tests. We strive to keep the test coverage high, but this test is not strictly required to pass before merging a PR.","category":"page"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"Once the PR is opened, you can request reviewers to look over and approve your work. To keep things tidy, we want PRs to have very few (ideally only one) commit   before merging to the main branch. You can squash and rebase multiple commits into one   in your favorite editor (VS Code, Vim etc). In case of doubt, see Git tutorials on how to squash and rebase   or reach out to other developers in our team. The first couple of times it pays off to create a \"backup branch\" before starting your rebase,   and then comparing afterwards if the rebased and backup branches are identical. If the main branch has been updated after your branch was created,  you will need to rebase onto the main branch. To do this,  run git rebase origin/main and solve any conflicts manually.  This is done more easily if you only have one commit.","category":"page"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"We (still) use bors bot to manage PR queues. To merge your PR into the main branch, comment bors r+ and wait for all checks to pass.","category":"page"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"The easiest way to use the new additions in the main branch of CloudMicrophysics.jl   from another package is to do a package release. To do that, you need to change the package version in the Project.toml. We do a patch release if the API did not change (for example 0.11.1 -> 0.11.2)   and a minor version release if it did (for example 0.11.1 -> 0.12.0). We use the JuliaRegistrator bot to register new versions in the Julia package ecosystem,   by commenting @JuliaRegistrator register under the merged PR that changes the package version. You can also use specific branches from the repository,   if you are working with commits that were not yet merged into main. See Pkg.jl docs   for more details.","category":"page"},{"location":"DevelopersGuide/#New-contributions","page":"Developer's Guide","title":"New contributions","text":"","category":"section"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"CloudMicrophysics.jl is a collection of point-wise functions grouped   in different modules depending on which aspect of aerosol and cloud microphysics   they address. When adding a new function, decide if a new module is required, or add to the existing one.   If the added function will be used in other modules, export the function. Avoid exporting   functions that are only used within the module it is defined in or functions that have the   same name as a function already in the API. Avoid shortening words or phrases when naming new functions. The name of the function   should be self-explanatory yet brief. All functions should have docstrings describing the API, as well as   documentation focusing on the scientific aspects of what they do. All functions should have their own unit, performance and GPU tests. All free parameters should be stored in CLIMAParameters. It is usually faster to prototype defining the free parameters locally,   and move them to CLIMAParameters at a last step.","category":"page"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"Other files that may require editing after you make a new function are:","category":"page"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"CloudMicrophysics.jl (found in src folder) if you need to include a new source file,\nindex.md (found in docs/src folder) if you want to mention the new additions in the main documentation page,\nmake.jl (found in docs folder) if you are adding a new file to the documentation,\nAPI.md (found in docs/src folder) if you are adding functions (see Documentation section for more details),\nruntests.jl (found in test folder) if you are adding new test file for unit tests.","category":"page"},{"location":"DevelopersGuide/#Documentation","page":"Developer's Guide","title":"Documentation","text":"","category":"section"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"Each new addition to the library should be accompanied by a documentation page   summarizing the derivation/assumptions and it's potential uses. If possible, it's really appreciated to also add short code snippets that reproduce   results from the literature. Those code snippets are executed every time documentation is build and provide   great examples on how different available parameterizations work.","category":"page"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"Additionally, each function in the source code is required to have a docstring   and should be added to the API documentation page. The docstring formatting is pretty strict:   (i) no empty lines between the docstring and the function/module,   (ii) docstring starts and ends with a line consisting of three quotation marks,   (iii) the second line has the function's name preceded by exactly 4 spaces. Examples can be found in the source files. Be sure to add the function to API.md in the docs folder. Missing docstrings and functions in the API cause the documentation build to break.","category":"page"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"To build and work the documentation locally, you can use LiveServer.jl. This will compile the documentation to a local server that is updated whenever you make changes. Alternatively, you can save the documentation to a static webpage: julia --project=docs docs/make.jl. The index page will be saved in docs/build folder.","category":"page"},{"location":"DevelopersGuide/#Tests","page":"Developer's Guide","title":"Tests","text":"","category":"section"},{"location":"DevelopersGuide/#Unit-Tests","page":"Developer's Guide","title":"Unit Tests","text":"","category":"section"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"Unit tests aim to ensure that parameterizations make physical sense. They can be found in the test folder under files named after corresponding source files. If you create a new function, please also create a new test that checks it. If creating a new file for unit tests, make sure you import Test and any other necessary libraries. There is some boilerplate code needed to create the set with free parameters   based on the default toml file from CLIMAParameters.   This would be the include(joinpath(pkgdir(CM), \"test\", \"create_parameters.jl\")) line found in   the existing unit tests.","category":"page"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"Some possible tests include checking if the returned values agree with values   in the literature, if something is smaller/greater at warmer/cooler   temperatures, if assertion errors are returned when a function is used outside its   valid range of parameters, or if a function is zero at certain input values. In general, writing good tests is difficult and we are always on the lookout for new good candidates. We strive to exercise all functions in some way in tests,   so that at minimum we can catch changes in the API.","category":"page"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"You can run the tests locally: julia --project=test test/runtests.jl.","category":"page"},{"location":"DevelopersGuide/#Performance-Tests","page":"Developer's Guide","title":"Performance Tests","text":"","category":"section"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"Performance tests check the memory allocations (there should be none) and execution times   of some of the functions. They are found in the test folder under a single file named performance_tests.jl.","category":"page"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"You can add performance tests for your new functions in the benchmark_test(FT) function. Parameters are listed at the start of the function. Next, add your performance tests under the comment with the file name which your   new function is in. This is done by calling bench_press(function_name, (Parameter1, Parameter2), min_time). The last argument is an estimate of the minimum run-time of the function. It may take some trial and error to find a number   that will satisfy the ci tests that are run on different operating systems   and for different floating-point precision. You can identify which specific performance test is failing on GitHub   by clicking on details next to a failed check from one of the ci / ci 1.8.1 checks. Adjust the estimated minimum run-time appropriately.","category":"page"},{"location":"DevelopersGuide/#GPU-Tests","page":"Developer's Guide","title":"GPU Tests","text":"","category":"section"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"Graphic Processing Unit (GPU) tests check that CloudMicrophysics.jl functions are able to run on GPU. They are as simple as checking that a certain input returns a known value. Right now, we do not test the whole library on the GPUs,   so the support is limited. GPU tests can be found in the test folder under a single file named gpu_tests.jl. There are two things to add: a kernel for your function and the actual test.","category":"page"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"Kernels are added at the top half of the file using @kernel. The naming convention follows test_<function name>_kernel!. Within the kernel, use @inbounds to place any outputs into an output array.","category":"page"},{"location":"DevelopersGuide/","page":"Developer's Guide","title":"Developer's Guide","text":"The test itself should be added in the test_gpu(FT) function. The test starts with defining data_length and ends after an @test macro. data_length corresponds to the number of outputs your function has. Add an array for each input required by your function. For example, if you want to test at temperature of 230K,   you can add T = ArrayType([FT(230)]). Add a comment of what you are testing and use @test to create your test. The GPU tests are ran twice: for Float64 and Float32. Similar as with performance tests, some trial and error is needed   to find good tolerances for both options.","category":"page"},{"location":"Microphysics1M/#Microphysics-1M","page":"1-moment precipitation microphysics","title":"Microphysics 1M","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The Microphysics1M.jl module describes a 1-moment bulk parameterization of   cloud microphysical processes. The module is based on the ideas of   [1],   [2]   and [3].","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The cloud microphysics variables are expressed as specific humidities:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"q_tot - total water specific humidity,\nq_vap - water vapor specific humidity,\nq_liq - cloud water specific humidity,\nq_ice - cloud ice specific humidity,\nq_rai - rain specific humidity,\nq_sno - snow specific humidity.","category":"page"},{"location":"Microphysics1M/#Assumed-particle-size-relationships","page":"1-moment precipitation microphysics","title":"Assumed particle size relationships","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Particles are assumed to follow power-law relationships involving the mass(radius), denoted by m(r), the cross section(radius), denoted by a(r), and the terminal velocity(radius), denoted by v_term(r), respectively. The coefficients are defined in the   CLIMAParameters.jl package   and are shown in the table below. For rain and ice they correspond to spherical liquid water drops   and ice particles, respectively. There is no assumed particle shape for snow, and the relationships are   empirical.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"m(r) = chi_m  m_0 left(fracrr_0right)^m_e + Delta_m","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"a(r) = chi_a  a_0 left(fracrr_0right)^a_e + Delta_a","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"v_term(r) = chi_v  v_0 left(fracrr_0right)^v_e + Delta_v","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"r is the particle radius,\nr_0 is the typical particle radius used to nondimensionalize,\nm_0  m_e  a_0  a_e  v_0  v_e  are the default coefficients,\nchi_m, Delta_m, chi_a, Delta_a, chi_v, Delta_v are the coefficients that can be used during model calibration to expand around the default values. Without calibration all chi parameters are set to 1 and all Delta parameters are set to 0.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The above coefficients, similarly to all other microphysics parameters,   are not hardcoded in the final microphysics parameterizations. The goal is to allow easy flexibility when calibrating the scheme. With that said, the assumption about the shape of the particles is used three   times when deriving the microphysics formulae:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The mass transfer equation (\\ref{eq:mass_rate}) used in snow autoconversion, rain evaporation, snow sublimation and snow melt rates is derived assuming spherical particle shapes. To correct for non-spherical shape it should be multiplied by a function of the particle aspect ratio.\nThe geometric collision kernel used for deriving rain-snow accretion rate assumes that both colliding particles are spherical. It does not take into account the reduced cross-section of snow particles that is used when modeling snow - cloud liquid water and snow - cloud ice accretion.\nIn the definition of the Reynolds number that is used when computing ventilation factors.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"symbol definition units default value reference\nr_0^rai typical rain drop radius m 10^-3 \nm_0^rai coefficient in m(r) for rain kg frac43  pi  rho_water  r_0^3 \nm_e^rai exponent in m(r) for rain - 3 \na_0^rai coefficient in a(r) for rain m^2 pi  r_0^2 \na_e^rai exponent in a(r) for rain - 2 \nv_e^rai exponent in v_term(r) for rain - 05 \n    \nr_0^ice typical ice crystal radius m 10^-5 \nm_0^ice coefficient in m(r) for ice kg frac43  pi  rho_ice  r_0^3 \nm_e^ice exponent in m(r) for ice - 3 \n    \nr_0^sno typical snow crystal radius m 10^-3 \nm_0^sno coefficient in m(r) for snow kg 01   r_0^2 eq (6b) [2]\nm_e^sno exponent in m(r) for snow - 2 eq (6b) [2]\na_0^sno coefficient in a(r) for snow m^2 03 pi  r_0^2 alpha in eq(16b) [2].\na_e^sno exponent in a(r) for snow - 2 \nv_0^sno coefficient in v_term(r) for snow fracms 2^94 r_0^14 eq (6b) [2]\nv_e^sno exponent in v_term(r) for snow - 025 eq (6b) [2]","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"rho_water is the density of water,\nrho_ice is the density of ice.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The terminal velocity of an individual rain drop is defined by the balance   between the gravitational acceleration (taking into account   the density difference between water and air) and the drag force. Therefore the v_0^rai is defined as","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nv_0^rai =\n  left(\n    frac83  C_drag left( fracrho_waterrho -1 right)\n  right)^12 (g r_0^rai)^12\nlabeleqvdrop\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"g is the gravitational acceleration,\nC_drag is the drag coefficient,\nrho is the density of air.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nAssuming a constant drag coefficient is an approximation and it should be size and flow dependent, see for example here. We are in the process of updating the 1-moment microphysics scheme to formulae from [4]. Other possibilities: [5] or [6]","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"[4] provides a terminal velocity parameterisation   based on an empirical fit to a high accuracy model. The terminal velocity depends on particle shape, size and density,   consideres the deformation effects of large rain drops,   as well as size-specific air density dependence. The fall speed of individual particles v(D) is parameterized as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n    v_term(D) = phi^kappa sum_i=1^j  a_i D^b_i e^-c_i  D\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"D is the particle diameter,\na_i, b_i, c_i are the free parameters,\nphi is the aspect ratio, and\nkappa is a parameter that depends on the particle shape (kappa=0 for spheres, kappa=-13 for oblate and kappa=16 for prolate spheroids).","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For ice and snow j=2 and for rain j=3, to account for deformation at larger sizes. For rain and ice we assume phi=1 (spherical). For snow we assume kappa = -13 and   find the aspect ratio that is consistent with the assumed m(r) and a(r) relationships. The aspect ratio is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n    phi equiv ca\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"a is the basal plane axial half-length, and\nc is perpendicular to the basal plane.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The volume of a spheroid can be represented as V_p = 4pi3  a^2 c   and the area can be represented as A_p = pi a c. It follows that   c = (4A_p^2)  (3 pi V_p),   a = (3V_p)  (4A_p), and   phi = (16 A_p^3)  (9 pi V_p^2). The volume and area are defined by the assumed power-law size relations   V_p = m(r)  (rho_ice), A_p = a(r). As a result the terminal velocity of individual snow particles as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n    v_term(r) = left(frac16  rho_ice^2  a_0^3  (rr_0)^3a_e9 pi  m_0^2  (rr_0)^2 m_e right)^kappa  sum_i=1^2  a_i (2r)^b_i e^-2 c_i r\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where r is the radius of the particle.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Here we plot the terminal velocity formulae from the current default 1-moment scheme and [4]. We also show the aspect ratio of snow particles.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"include(\"plots/TerminalVelocityComparisons.jl\")","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"(Image: )","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The rain a_i, b_i, and c_i are listed in the table below. The formula is applicable when D  01 mm, q refers to q = e^0115231  rho_a, where  rho_a is air density [kg/m3]. The units are: [v] = m/s, [D]=mm, [a_i] = mm^-b_i ms, [b_i] is dimensionless, [c_i] = 1/mm.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"i a_i b_i c_i\n1 0044612  q 22955  -0038465  rho_a 0\n2 -0263166  q 22955  -0038465  rho_a 0184325\n3 47178  q  (rho_a)^-047335 11451  -0038465  rho_a 0184325","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The ice and snow a_i, b_i, and c_i are listed in the table below. The formula is applicable when D  0625 mm.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"i a_i b_i c_i\n1 E_s (rho_a)^A_s B_s + C_s rho_a 0\n2 F_s (rho_a)^A_s B_s + C_s rho_a G_s","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Coefficient Formula\nA_s 000174079 log(rho_ice)^2  00378769 log(rho_ice) - 0263503\nB_s (0575231 + 00909307 log(rho_ice) + 0515579  sqrtrho_ice)^-1\nC_s -0345387 + 0177362  exp(-0000427794 rho_ice) + 000419647 sqrtrho_ice\nE_s -0156593 - 00189334 log(rho_ice)^2 + 01377817 sqrtrho_ice\nF_s - exp-335641 - 00156199 logrho_ice^2 + 0765337 logrho_ice\nG_s (-00309715 + 155054  log(rho_ice) - 0518349 log(rho_ice)  rho_ice)^-1","category":"page"},{"location":"Microphysics1M/#Assumed-particle-size-distributions","page":"1-moment precipitation microphysics","title":"Assumed particle size distributions","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The particle size distributions are assumed to follow   Marshall-Palmer distribution   [7]   eq. 1:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  n(r) = n_0 expleft(- lambda  r right)\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"n_0 and lambda are the Marshall-Palmer distribution parameters.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The n_0 for rain and ice is assumed constant. The n_0 for snow is defined as","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  n_0^sno = mu^sno left(fracrhorho_0 q_snoright)^nu^sno\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"mu^sno and nu^sno are the coefficients\nrho_0 is the typical air density used to nondimensionalize the equation and is equal to 1  kgm^3","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The coefficients are defined in   CLIMAParameters.jl package and are shown in the table below.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"symbol definition units default value reference\nn_0^rai rain drop size distribution parameter frac1m^4 16 cdot 10^6 eq (2) [7]\nn_0^ice cloud ice size distribution parameter frac1m^4 2 cdot 10^7 bottom of page 4396 [3]\nmu^sno snow size distribution parameter coefficient frac1m^4 436 cdot 10^9  rho_0^nu^sno eq (A1) [3]\nnu^sno snow size distribution parameter exponent - 063 eq (A1) [3]","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The lambda parameter is defined as","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nlambda =\n  left(\n    frac Gamma(m_e + Delta_m + 1)  chi_m  m_0  n_0\n         q  rho  (r_0)^m_e + Delta_m\n  right)^frac1m_e + Delta_m + 1\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"q is rain, snow or ice specific humidity\nchi_m, m_0, m_e, Delta_m, r_0, and n_0 are the corresponding mass(radius) and size distribution parameters\nGamma() is the gamma function","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The cloud-ice size distribution is used   when computing snow autoconversion rate and rain sink due to accretion. In other derivations cloud ice, similar to cloud liquid water,   is treated as continuous.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nDo we want to keep the n_0 for rain constant and n_0 for snow empirical?\nDo we want to test different size distributions?","category":"page"},{"location":"Microphysics1M/#Parameterized-processes","page":"1-moment precipitation microphysics","title":"Parameterized processes","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Parameterized processes include:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"autoconversion of rain and snow,\naccretion,\nevaporation of rain water,\nsublimation, vapor deposition and melting of snow,\nsedimentation of rain and snow with mass weighted average terminal velocity (cloud water and cloud ice are part of the working fluid and do not sediment).","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Parameters used in the parameterization are defined in   CLIMAParameters.jl package. They consist of:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"symbol definition units default value reference\nC_drag rain drop drag coefficient - 055 C_drag is such that the mass averaged terminal velocity is close to [8]\ntau_acnv_rain cloud liquid to rain water autoconversion timescale s 10^3 eq (5a) [8]\ntau_acnv_snow cloud ice to snow autoconversion timescale s 10^2 \nq_liq_threshold cloud liquid to rain water autoconversion threshold - 5 cdot 10^-4 eq (5a) [8]\nq_ice_threshold cloud ice snow autoconversion threshold - 1 cdot 10^-6 \nr_is threshold particle radius between ice and snow m 625 cdot 10^-6 abstract [9]\nE_lr collision efficiency between rain drops and cloud droplets - 08 eq (16a) [2]\nE_ls collision efficiency between snow and cloud droplets - 01 Appendix B [10]\nE_ir collision efficiency between rain drops and cloud ice - 1 Appendix B [11]\nE_is collision efficiency between snow and cloud ice - 01 bottom page 3649 [12]\nE_rs collision efficiency between rain drops and snow - 1 top page 3650 [12]\na_vent^rai b_vent^rai rain drop ventilation factor coefficients - 15 , 053 chosen such that at q_tot=15 gkg and T=288K the evap. rate is close to empirical evap. rate in [8]\na_vent^sno b_vent^sno snow ventilation factor coefficients - 065 , 044 eq (A19) [3]\nK_therm thermal conductivity of air fracJm  s  K 24 cdot 10^-2 \nnu_air kinematic viscosity of air fracm^2s 16 cdot 10^-5 \nD_vapor diffusivity of water vapor fracm^2s 226 cdot 10^-5 ","category":"page"},{"location":"Microphysics1M/#Ventilation-factor","page":"1-moment precipitation microphysics","title":"Ventilation factor","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The ventilation factor parameterizes the increase in the mass and heat exchange   for falling particles. Following [13]   eq. 24  the ventilation factor is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  F(r) = a_vent + b_vent  N_Sc^13 N_Re(r)^12\nlabeleqventil_factor\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"a_vent, b_vent are coefficients,\nN_Sc is the Schmidt number,\nN_Re is the Reynolds number of a falling particle.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The Schmidt number is assumed constant:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"N_Sc = fracnu_airD_vapor","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"nu_air is the kinematic viscosity of air,\nD_vapor is the diffusivity of water.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The Reynolds number of a spherical drop is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"N_Re = frac2  r  v_term(r)nu_air","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Applying the terminal velocity(radius) relationship results in","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nF(r) = a_vent +\n       b_vent \n       left(fracnu_airD_vaporright)^frac13 \n       left(frac2  chi_v  v_0\n                  r_0^v_e + Delta_v  nu_airright)^frac12 \n       r^fracv_e + Delta_v + 12\nlabeleqvent_factor\nendequation","category":"page"},{"location":"Microphysics1M/#Terminal-velocity","page":"1-moment precipitation microphysics","title":"Terminal velocity","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The mass weighted terminal velocity v_t (following [14]) is:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  v_t = fracint_0^infty n(r)  m(r)  v_term(r)  dr\n             int_0^infty n(r)  m(r)  dr\nlabeleqvt\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Integrating the default 1-moment m(r) and v_term(r) relationships     over the assumed Marshall-Palmer distribution results in group terminal velocity:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  v_t = chi_v  v_0  left(frac1r_0  lambdaright)^v_e + Delta_v\n        fracGamma(m_e + v_e + Delta_m + Delta_v + 1)\n             Gamma(m_e + Delta_m + 1)\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Integrating [4] formulae for rain and ice   over the assumed Marshall-Palmer size distribution,   results in group terminal velocity:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  v_t = sum_i=1^j fraca_i lambda^delta Gamma(b_i + delta)(lambda + c_i)^b_i + 4  Gamma(4)\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Finally, integrating [4] formulae for snow   over the assumed Marshall-Palmer distribution,   results in group terminal velocity:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  v_t = sum_i=1^2 t_i fracGamma(3a_e kappa - 2 m_e kappa + b_i + k + 1)Gamma(k+1)\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nt_i = frac16 a_0^3 rho_ice^2^kappa  a_i  2^b_i 2 c_i lambda^-(3 a_e kappa - 2 m_e kappa + b_i + k)-1\n9 pi m_0^2^kappa  r_0^3 a_e kappa - 2 m_e kappa lambda^-k-1\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"and k = 3.","category":"page"},{"location":"Microphysics1M/#Rain-autoconversion","page":"1-moment precipitation microphysics","title":"Rain autoconversion","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Rain autoconversion defines the rate of conversion form cloud liquid water   to rain water due to collisions between cloud droplets. It is parameterized following   [1]:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_acnv =\n    fracmax(0 q_liq - q_liq_threshold)tau_acnv_rain\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"q_liq - liquid water specific humidity,\ntau_acnv_rain - timescale,\nq_liq_threshold - autoconversion threshold.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nThis is the simplest possible autoconversion parameterization. It would be great to implement others and test the impact on precipitation. See for example [15] Table 1 for other simple choices.","category":"page"},{"location":"Microphysics1M/#Snow-autoconversion","page":"1-moment precipitation microphysics","title":"Snow autoconversion","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Snow autoconversion defines the rate of conversion form cloud ice to snow due   the growth of cloud ice by water vapor deposition. It is defined as the change of mass of cloud ice for cloud ice particles   larger than threshold r_is. See [9]   for derivation.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracd  q_snodt right_acnv =\n  frac1rho fracddt\n    left( int_r_is^infty m(r) n(r) dr right) =\n    left frac1rho fracdrdt right_r=r_is m(r_is) n(r_is)\n    + frac1rho int_r_is^infty fracdmdt n(r) dr\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The fracdmdt is obtained by solving the water vapor diffusion equation   in spherical coordinates and linking the changes in temperature at the drop   surface to the changes in saturated vapor pressure via the Clausius-Clapeyron   equation, following   [16].","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For the simplest case of spherical particles and not taking into account   ventilation effects:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nfracdmdt = 4 pi  r  (S - 1)  G(T)\nlabeleqmass_rate\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"S(q_vap q_vap^sat) = fracq_vapq_vap^sat is saturation,\nq_vap^sat   is the saturation vapor specific humidity (over ice in this case),\nG(T) = left(fracL_sKT left(fracL_sR_v T - 1 right) + fracR_v Tp_vap^sat D right)^-1   combines the effects of thermal conductivity and water diffusivity.\nL_s is the latent heat of sublimation,\nK_thermo is the thermal conductivity of air,\nR_v is the gas constant of water vapor,\nD_vapor is the diffusivity of water vapor","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Using eq. (\\ref{eq:mass_rate}) and the assumed m(r) relationship we obtain","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nfracdrdt = frac4 pi  (S - 1)chi_m  (m_e + Delta_m)\n   left( fracr_0r right)^m_e + Delta_m\n   fracG(T)  r^2m_0\nlabeleqr_rate\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Finally the snow autoconversion rate is computed as","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracd  q_snodt right_acnv =\n   frac1rho 4 pi  (S-1)  G(T) \n   n_0^ice  exp(-lambda_ice r_is)\n   left( fracr_is^2m_e^ice + Delta_m^ice +\n   fracr_is lambda_ice +1lambda_ice^2 right)\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nWe should include ventilation effects.For non-spherical particles the mass rate of growth should be multiplied by a function depending on the particle aspect ratio. For functions proposed for different crystal habitats see [9] Appendix B.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"We also have a simplified version of snow autoconversion rate,   to be used in modeling configurations that   don't allow supersaturation to be present in the computational domain. It is formulated similarly to the rain autoconversion:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracd  q_snodt right_acnv =\n    fracmax(0 q_ice - q_ice_threshold)tau_acnv_snow\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"q_liq - liquid water specific humidity,\ntau_acnv_rain - timescale,\nq_liq_threshold - autoconversion threshold.","category":"page"},{"location":"Microphysics1M/#Accretion","page":"1-moment precipitation microphysics","title":"Accretion","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Accretion defines the rates of conversion between different categories due to   collisions between particles.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For the case of collisions between cloud water (liquid water or ice)   and precipitation (rain or snow) the sink of cloud water is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracd  q_cdt right_accr =\n  - int_0^infty n_p(r)  a^p(r)  v_term(r)  E_cp  q_c  dr\nlabeleqaccr_1\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"c subscript indicates cloud water category (cloud liquid water or ice)\np subscript indicates precipitation category (rain or snow)\nE_cp is the collision efficiency.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Integrating over the distribution yields:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracd  q_cdt right_accr =\n  - n_0^p  Pi_a v^p  q_c  E_cp \n    Gamma(Sigma_a v^p + 1) \n    frac1lambda^p \n    left( frac1r_0^p lambda^p\n    right)^Sigma_a v^p\nlabeleqaccrfin\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Pi_a v^p = a_0^p  v_0^p  chi_a^p  chi_v^p\nSigma_a v^p = a_e^p + v_e^p + Delta_a^p + Delta_v^p","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For the case of cloud liquid water and rain and cloud ice and snow collisions,   the sink of cloud water becomes simply the source for precipitation. For the case of cloud liquid water and snow collisions   for temperatures below freezing, the sink of cloud liquid water is   a source for snow. For temperatures above freezing, the accreted cloud droplets   along with some melted snow are converted to rain. In this case eq. (\\ref{eq:accrfin}) describes the sink of cloud liquid water. The sink of snow is proportional to the sink of cloud liquid water with   the coefficient fracc_vlL_f(T - T_freeze),   where c_vl is the isochoric specific heat of liquid water,  L_f is the latent heat of freezing,   and T_freeze is the freezing temperature.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The collisions between cloud ice and rain create snow. The source of snow in this case is a sum of sinks from cloud ice and rain. The sink of cloud ice is defined by eq. (\\ref{eq:accrfin}). The sink of rain is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracd  q_raidt right_accr_ri =\n  - int_0^infty int_0^infty\n  frac1rho  E_ir  n_i(r_i)  n_r(r_r)  a_r(r_r)  m_r(r_r)\n   v_term(r_r)  d r_i d r_r\nlabeleqaccr_ir\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"E_ir is the collision efficiency between rain and cloud ice\nn_i and n_r are the cloud ice and rain size distributions\nm_r, a_r and v_term are the mass(radius),   cross section(radius) and terminal velocity(radius) relations for rain\nr_i and r_r mark integration over cloud ice and rain size   distributions","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Integrating eq.(\\ref{eq:accr_ir}) yields:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracd  q_raidt right_accr_ri =\n  - frac1rho  E_ir  n_0^rai  n_0^ice \n  Pi_m a v^rai\n  Gamma(Sigma_m a v^rai + 1) \n  frac1lambda^ice  lambda^rai \n  left( frac1r_0^rai  lambda^rai\n  right)^Sigma_m a v^rai\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Pi_m a v^rai =  m_0^rai  a_0^rai  v_0^rai  chi_m^rai  chi_a^rai  chi_v^rai\nSigma_m a v^rai = m_e^rai + a_e^rai + v_e^rai + Delta_m^rai + Delta_a^rai + Delta_v^rai","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"Collisions between rain and snow result in snow in temperatures below freezing   and in rain in temperatures above freezing. The source term is defined as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracd  q_idt right_accr =\n    int_0^infty int_0^infty frac1rho\n    n_i(r_i)  n_j(r_j)  a(r_i r_j)  m_j(r_j)  E_ij \n    leftv_term(r_i) - v_term(r_j)right  dr_i dr_j\nlabeleqaccr_sr1\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"i stands for rain (TT_freezing) or snow (TT_freezing)\nj stands for snow (TT_freezing) or rain (TT_freezing)\na(r_i r_j) is the crossection of the two colliding particles","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"There are two additional assumptions that we make to integrate   eq.(\\ref{eq:accr_sr1}):","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"leftv_term(r_i) - v_term(r_j)right approx left v_ti - v_tj right We approximate the terminal velocity difference for each particle pair with a difference between mass-weighted mean terminal velocities and move it outside of the integral. See the discussion in Ikawa_and_Saito_1991 page 88.\nWe assume that a(r_i r_j) = pi (r_i + r_j)^2. This corresponds to a geometric formulation of the collision kernel, aka cylindrical formulation, see [17] for discussion.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The eq.(\\ref{eq:accr_sr1}) can then be integrated as:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginalign\nleft fracd  q_idt right_accr  =\n    frac1rho  pi  n_0^i  n_0^j \n    m_0^j  chi_m^j  left(frac1r_0^jright)^m_e^j + Delta_m^j\n     E_ij left v_ti - v_tj right\n    int_0^infty int_0^infty\n    (r_i + r_j)^2\n    r_j^m_e^j + Delta_m^j \n    exp(- lambda_j r_j) \n    exp(- lambda_i r_i) \n    dr_i dr_j \n     =\n    frac1rho  pi  n_0^i  n_0^j  m_0^j  chi_m^j \n    E_ij left v_ti - v_tj right \n    left( frac1r_0^j right)^m_e^j + Delta_m^j\n    left(\n        frac2 Gamma(m_e^j + Delta_m^j + 1)lambda_i^3 lambda_j^m_e^j + Delta_m^j + 1\n        + frac2 Gamma(m_e^j + Delta_m^j + 2) lambda_i^2 lambda_j^m_e^j + Delta_m^j + 2\n        + fracGamma(m_e^j + Delta_m^j + 3)lambda_i lambda_j^m_e^j + Delta_m^j + 3\n    right)\nendalign","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nBoth of the assumptions needed to integrate the snow-rain accretion rate could be revisited:The discussion on page 88 in Ikawa_and_Saito_1991 suggests an alternative approximation of the velocity difference.The (r_i + r_j)^2 assumption for the crossection is inconsistent with the snow crossection used when modelling collisions with cloud water and cloud ice.","category":"page"},{"location":"Microphysics1M/#Rain-evaporation-and-snow-sublimation","page":"1-moment precipitation microphysics","title":"Rain evaporation and snow sublimation","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"We start from a similar equation as when computing snow autoconversion rate but integrate it from 0 to infty.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracdqdt right_evap_subl =\n    frac1rho int_0^infty fracdm(r)dt n(r) dr\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"In contrast to eq.(\\ref{eq:mass_rate}), now we are taking into account   ventilation effects:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  fracdmdt = 4 pi  r  (S - 1)  G(T)  F(r)\nlabeleqmass_rate2\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"F(r) is the rain drop ventilation factor defined in (\\ref{eq:ventil_factor})\nsaturation S is computed over water or ice","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"The final integral is:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginalign\nleft fracdqdt right_evap_subl  =\n    frac4 pi n_0rho (S - 1) G(T)\n    int_0^infty\n    left(\n       a_vent +\n       b_vent \n         left(fracnu_airD_vapor right)^frac13 \n         left(fracrr_0 right)^fracv_e + Delta_v2 \n         left(frac2  chi_v  v_0  rnu_air right)^frac12\n    right)\n    r  exp(-lambda r) dr \n     =\n    frac4 pi n_0rho (S - 1) G(T) lambda^-2\n    left(\n       a_vent +\n       b_vent \n         left(fracnu_airD_vapor right)^frac13 \n         left(frac1r_0  lambda right)^fracv_e + Delta_v2 \n         left(frac2  chi_v  v_0nu_air  lambda right)^frac12 \n         Gammaleft( fracv_e + Delta_v + 52 right)\n    right)\nendalign","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For the case of rain we only consider evaporation (S - 1  0). For the case of snow we consider both the source term due to vapor deposition  on snow (S - 1  0) and the sink due to vapor sublimation (S - 1  0).","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"note: Note\nWe should take into account the non-spherical snow shape. Modify the Reynolds number and growth equation.","category":"page"},{"location":"Microphysics1M/#Snow-melt","page":"1-moment precipitation microphysics","title":"Snow melt","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"If snow occurs in temperatures above freezing it is melting into rain. The sink for snow is parameterized again as","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  left fracdqdt right_melt =\n    frac1rho int_0^infty fracdm(r)dt n(r) dr\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"For snow melt","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\n  fracdmdt = 4 pi  r  fracK_thermoL_f (T - T_freeze)  F(r)\nlabeleqmass_rate3\nendequation","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"F(r) is the ventilation factor defined in (\\ref{eq:ventil_factor})\nL_f is the latent heat of freezing.","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"If T  T_freeze:","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"beginequation\nleft fracdqdt right_evap_subl =\n    frac4 pi  n_0  K_thermorho  L_f (T - T_freeze) lambda^-2\n    left(\n       a_vent +\n       b_vent \n         left( fracnu_airD_vapor right)^frac13 \n         left( frac1r_0  lambda right)^fracv_e + Delta_v2 \n         left( frac2  chi_v  v_0nu_air  lambda right)^frac12 \n         Gamma left( fracv_e + Delta_v + 52 right)\n    right)\nendequation","category":"page"},{"location":"Microphysics1M/#Example-figures","page":"1-moment precipitation microphysics","title":"Example figures","text":"","category":"section"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"import Plots\n\nimport Thermodynamics\nimport CloudMicrophysics\nimport CLIMAParameters\n\nconst PL = Plots\nconst CM1 = CloudMicrophysics.Microphysics1M\nconst TD = Thermodynamics\nconst CMP = CloudMicrophysics.Parameters\n\nFT = Float64\n\nconst tps = CMP.ThermodynamicsParameters(FT)\nconst aps = CMP.AirProperties(FT)\nconst liquid = CMP.CloudLiquid(FT)\nconst ice = CMP.CloudIce(FT)\nconst rain = CMP.Rain(FT)\nconst snow = CMP.Snow(FT)\nconst Chen2022 = CMP.Chen2022VelType(FT)\nconst Blk1MVel = CMP.Blk1MVelType(FT)\nconst ce = CMP.CollisionEff(FT)\n\n# eq. 5d in [Grabowski1996](@cite)\nfunction terminal_velocity_empirical(q_rai::DT, q_tot::DT, Ï::DT, Ï_air_ground::DT) where {DT<:Real}\n    rr  = q_rai / (DT(1) - q_tot)\n    vel = DT(14.34) * Ï_air_ground^DT(0.5) * Ï^-DT(0.3654) * rr^DT(0.1346)\n    return vel\nend\n\n# eq. 5b in [Grabowski1996](@cite)\nfunction accretion_empirical(q_rai::DT, q_liq::DT, q_tot::DT) where {DT<:Real}\n    rr  = q_rai / (DT(1) - q_tot)\n    rl  = q_liq / (DT(1) - q_tot)\n    return DT(2.2) * rl * rr^DT(7/8)\nend\n\n# eq. 5c in [Grabowski1996](@cite)\nfunction rain_evap_empirical(q_rai::DT, q::TD.PhasePartition, T::DT, p::DT, Ï::DT) where {DT<:Real}\n\n    ts_neq = TD.PhaseNonEquil_ÏTq(tps, Ï, T, q)\n    q_sat  = TD.q_vap_saturation(tps, ts_neq)\n    q_vap  = q.tot - q.liq\n    rr     = q_rai / (DT(1) - q.tot)\n    rv_sat = q_sat / (DT(1) - q.tot)\n    S      = q_vap/q_sat - DT(1)\n\n    ag, bg = 5.4 * 1e2, 2.55 * 1e5\n    G = DT(1) / (ag + bg / p / rv_sat) / Ï\n\n    av, bv = 1.6, 124.9\n    F = av * (Ï/DT(1e3))^DT(0.525)  * rr^DT(0.525) + bv * (Ï/DT(1e3))^DT(0.7296) * rr^DT(0.7296)\n\n    return DT(1) / (DT(1) - q.tot) * S * F * G\nend\n\n# example values\nq_liq_range  = range(1e-8, stop=5e-3, length=100)\nq_ice_range  = range(1e-8, stop=5e-3, length=100)\nq_rain_range = range(1e-8, stop=5e-3, length=100)\nq_snow_range = range(1e-8, stop=5e-3, length=100)\nÏ_air, Ï_air_ground = 1.2, 1.22\nq_liq, q_ice, q_tot = 5e-4, 5e-4, 20e-3\n\nPL.plot( q_rain_range * 1e3, [CM1.terminal_velocity(rain, Blk1MVel.rain, Ï_air, q_rai) for q_rai in q_rain_range], linewidth=3, label=\"Rain-1M-default\", color=:blue, xlabel=\"q_rain/ice/snow [g/kg]\", ylabel=\"terminal velocity [m/s]\")\nPL.plot!(q_rain_range * 1e3, [CM1.terminal_velocity(rain, Chen2022.rain, Ï_air, q_rai) for q_rai in q_rain_range], linewidth=3, label=\"Rain-Chen\",       color=:blue, linestyle=:dot)\nPL.plot!(q_rain_range * 1e3, [terminal_velocity_empirical(q_rai, q_tot, Ï_air, Ï_air_ground) for q_rai in q_rain_range],        linewidth=3, label=\"Rain-Empirical\",  color=:green)\nPL.plot!(q_ice_range  * 1e3, [CM1.terminal_velocity(ice,  Chen2022.snow_ice, Ï_air, q_ice) for q_ice in q_ice_range],  linewidth=3, label=\"Ice-Chen\",        color=:pink, linestyle=:dot)\nPL.plot!(q_snow_range * 1e3, [CM1.terminal_velocity(snow, Blk1MVel.snow, Ï_air, q_sno) for q_sno in q_snow_range], linewidth=3, label=\"Snow-1M-default\", color=:red)\nPL.plot!(q_snow_range * 1e3, [CM1.terminal_velocity(snow, Chen2022.snow_ice, Ï_air, q_sno) for q_sno in q_snow_range], linewidth=3, label=\"Snow-Chen\",       color=:red, linestyle=:dot)\nPL.savefig(\"terminal_velocity.svg\") # hide\n\nT = 273.15\nPL.plot( q_liq_range * 1e3, [CM1.conv_q_liq_to_q_rai(rain.acnv1M, q_liq) for q_liq in q_liq_range], linewidth=3, xlabel=\"q_liq or q_ice [g/kg]\", ylabel=\"autoconversion rate [1/s]\", label=\"Rain\")\nPL.plot!(q_ice_range * 1e3, [CM1.conv_q_ice_to_q_sno(ice, aps, tps, TD.PhasePartition(q_tot, 0., q_ice), Ï_air, T-5)  for q_ice in q_ice_range], linewidth=3, label=\"Snow T=-5C\")\nPL.plot!(q_ice_range * 1e3, [CM1.conv_q_ice_to_q_sno(ice, aps, tps, TD.PhasePartition(q_tot, 0., q_ice), Ï_air, T-10) for q_ice in q_ice_range], linewidth=3, label=\"Snow T=-10C\")\nPL.plot!(q_ice_range * 1e3, [CM1.conv_q_ice_to_q_sno(ice, aps, tps, TD.PhasePartition(q_tot, 0., q_ice), Ï_air, T-15) for q_ice in q_ice_range], linewidth=3, label=\"Snow T=-15C\")\nPL.savefig(\"autoconversion_rate.svg\") # hide\n\nPL.plot( q_rain_range * 1e3, [CM1.accretion(liquid, rain, Blk1MVel.rain, ce, q_liq, q_rai, Ï_air) for q_rai in q_rain_range], linewidth=3, xlabel=\"q_rain or q_snow [g/kg]\", ylabel=\"accretion rate [1/s]\", label=\"Liq+Rain-CLIMA\")\nPL.plot!(q_rain_range * 1e3, [CM1.accretion(ice,    rain, Blk1MVel.rain, ce, q_ice, q_rai, Ï_air) for q_rai in q_rain_range], linewidth=3, label=\"Ice+Rain-CLIMA\")\nPL.plot!(q_snow_range * 1e3, [CM1.accretion(liquid, snow, Blk1MVel.snow, ce, q_liq, q_sno, Ï_air) for q_sno in q_snow_range], linewidth=3, label=\"Liq+Snow-CLIMA\")\nPL.plot!(q_snow_range * 1e3, [CM1.accretion(ice,    snow, Blk1MVel.snow, ce, q_ice, q_sno, Ï_air) for q_sno in q_snow_range], linewidth=4, linestyle=:dash, label=\"Ice+Snow-CLIMA\")\nPL.plot!(q_rain_range * 1e3, [accretion_empirical(q_rai, q_liq, q_tot) for q_rai in q_rain_range], linewidth=3, label=\"Liq+Rain-Empirical\")\nPL.savefig(\"accretion_rate.svg\") # hide\n\nq_ice = 1e-6\nPL.plot(q_rain_range * 1e3, [CM1.accretion_rain_sink(rain, ice, Blk1MVel.rain, ce, q_ice, q_rai, Ï_air) for q_rai in q_rain_range], linewidth=3, xlabel=\"q_rain or q_snow [g/kg]\", ylabel=\"accretion rain sink rate [1/s]\", label=\"q_ice=1e-6\")\nq_ice = 1e-5\nPL.plot!(q_rain_range * 1e3, [CM1.accretion_rain_sink(rain, ice, Blk1MVel.rain, ce, q_ice, q_rai, Ï_air) for q_rai in q_rain_range], linewidth=3, xlabel=\"q_rain or q_snow [g/kg]\", ylabel=\"accretion rain sink rate [1/s]\", label=\"q_ice=1e-5\")\nq_ice = 1e-4\nPL.plot!(q_rain_range * 1e3, [CM1.accretion_rain_sink(rain, ice, Blk1MVel.rain, ce, q_ice, q_rai, Ï_air) for q_rai in q_rain_range], linewidth=3, xlabel=\"q_rain or q_snow [g/kg]\", ylabel=\"accretion rain sink rate [1/s]\", label=\"q_ice=1e-4\")\nPL.savefig(\"accretion_rain_sink_rate.svg\") # hide\n\nq_sno = 1e-6\nPL.plot(q_rain_range * 1e3, [CM1.accretion_snow_rain(rain, snow, Blk1MVel.rain, Blk1MVel.snow, ce, q_rai, q_sno, Ï_air) for q_rai in q_rain_range], linewidth=3, xlabel=\"q_rain [g/kg]\", ylabel=\"snow-rain accretion rate [1/s] T>0\", label=\"q_snow=1e-6\")\nq_sno = 1e-5\nPL.plot!(q_rain_range * 1e3, [CM1.accretion_snow_rain(rain, snow, Blk1MVel.rain, Blk1MVel.snow, ce, q_rai, q_sno, Ï_air) for q_rai in q_rain_range], linewidth=3, label=\"q_snow=1e-5\")\nq_sno = 1e-4\nPL.plot!(q_rain_range * 1e3, [CM1.accretion_snow_rain(rain, snow, Blk1MVel.rain, Blk1MVel.snow, ce, q_rai, q_sno, Ï_air) for q_rai in q_rain_range], linewidth=3, label=\"q_snow=1e-4\")\nPL.savefig(\"accretion_snow_rain_above_freeze.svg\") # hide\n\nq_rai = 1e-6\nPL.plot(q_snow_range * 1e3, [CM1.accretion_snow_rain(snow, rain, Blk1MVel.snow, Blk1MVel.rain, ce, q_sno, q_rai, Ï_air) for q_sno in q_snow_range], linewidth=3, xlabel=\"q_snow [g/kg]\", ylabel=\"snow-rain accretion rate [1/s] T<0\", label=\"q_rain=1e-6\")\nq_rai = 1e-5\nPL.plot!(q_snow_range * 1e3, [CM1.accretion_snow_rain(snow, rain, Blk1MVel.snow, Blk1MVel.rain, ce, q_sno, q_rai, Ï_air) for q_sno in q_snow_range], linewidth=3, label=\"q_rain=1e-5\")\nq_rai = 1e-4\nPL.plot!(q_snow_range * 1e3, [CM1.accretion_snow_rain(snow, rain, Blk1MVel.snow, Blk1MVel.rain, ce, q_sno, q_rai, Ï_air) for q_sno in q_snow_range], linewidth=3, label=\"q_rain=1e-4\")\nPL.savefig(\"accretion_snow_rain_below_freeze.svg\") # hide\n\n# example values\nT, p = 273.15 + 15, 90000.\nÏµ = 1. / TD.Parameters.molmass_ratio(tps)\np_sat = TD.saturation_vapor_pressure(tps, T, TD.Liquid())\nq_sat = Ïµ * p_sat / (p + p_sat * (Ïµ - 1.))\nq_rain_range = range(1e-8, stop=5e-3, length=100)\nq_tot = 15e-3\nq_vap = 0.15 * q_sat\nq_ice = 0.\nq_liq = q_tot - q_vap - q_ice\nq = TD.PhasePartition(q_tot, q_liq, q_ice)\nR = TD.gas_constant_air(tps, q)\nÏ = p / R / T\n\nPL.plot(q_rain_range * 1e3,  [CM1.evaporation_sublimation(rain, Blk1MVel.rain, aps, tps, q, q_rai, Ï, T) for q_rai in q_rain_range], xlabel=\"q_rain [g/kg]\", linewidth=3, ylabel=\"rain evaporation rate [1/s]\", label=\"ClimateMachine\")\nPL.plot!(q_rain_range * 1e3, [rain_evap_empirical(q_rai, q, T, p, Ï) for q_rai in q_rain_range], linewidth=3, label=\"empirical\")\nPL.savefig(\"rain_evaporation_rate.svg\") # hide\n\n# example values\nT, p = 273.15 - 15, 90000.\nÏµ = 1. / TD.Parameters.molmass_ratio(tps)\np_sat = TD.saturation_vapor_pressure(tps, T, TD.Ice())\nq_sat = Ïµ * p_sat / (p + p_sat * (Ïµ - 1.))\nq_snow_range = range(1e-8, stop=5e-3, length=100)\nq_tot = 15e-3\nq_vap = 0.15 * q_sat\nq_liq = 0.\nq_ice = q_tot - q_vap - q_liq\nq = TD.PhasePartition(q_tot, q_liq, q_ice)\nR = TD.gas_constant_air(tps, q)\nÏ = p / R / T\n\nPL.plot(q_snow_range * 1e3,  [CM1.evaporation_sublimation(snow, Blk1MVel.snow, aps, tps, q, q_sno, Ï, T) for q_sno in q_snow_range], xlabel=\"q_snow [g/kg]\", linewidth=3, ylabel=\"snow deposition sublimation rate [1/s]\", label=\"T<0\")\n\nT, p = 273.15 + 15, 90000.\nÏµ = 1. / TD.Parameters.molmass_ratio(tps)\np_sat = TD.saturation_vapor_pressure(tps, T, TD.Ice())\nq_sat = Ïµ * p_sat / (p + p_sat * (Ïµ - 1.))\nq_snow_range = range(1e-8, stop=5e-3, length=100)\nq_tot = 15e-3\nq_vap = 0.15 * q_sat\nq_liq = 0.\nq_ice = q_tot - q_vap - q_liq\nq = TD.PhasePartition(q_tot, q_liq, q_ice)\nR = TD.gas_constant_air(tps, q)\nÏ = p / R / T\n\nPL.plot!(q_snow_range * 1e3,  [CM1.evaporation_sublimation(snow, Blk1MVel.snow, aps, tps, q, q_sno, Ï, T) for q_sno in q_snow_range], xlabel=\"q_snow [g/kg]\", linewidth=3, ylabel=\"snow deposition sublimation rate [1/s]\", label=\"T>0\")\nPL.savefig(\"snow_sublimation_deposition_rate.svg\") # hide\n\nT=273.15\nPL.plot( q_snow_range * 1e3,  [CM1.snow_melt(snow, Blk1MVel.snow, aps, tps, q_sno, Ï, T+2) for q_sno in q_snow_range], xlabel=\"q_snow [g/kg]\", linewidth=3, ylabel=\"snow melt rate [1/s]\", label=\"T=2C\")\nPL.plot!(q_snow_range * 1e3,  [CM1.snow_melt(snow, Blk1MVel.snow, aps, tps, q_sno, Ï, T+4) for q_sno in q_snow_range], xlabel=\"q_snow [g/kg]\", linewidth=3, label=\"T=4C\")\nPL.plot!(q_snow_range * 1e3,  [CM1.snow_melt(snow, Blk1MVel.snow, aps, tps, q_sno, Ï, T+6) for q_sno in q_snow_range], xlabel=\"q_snow [g/kg]\", linewidth=3, label=\"T=6C\")\nPL.savefig(\"snow_melt_rate.svg\") # hide\n","category":"page"},{"location":"Microphysics1M/","page":"1-moment precipitation microphysics","title":"1-moment precipitation microphysics","text":"(Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"WaterActivity/#Water-Activity","page":"Water Activity","title":"Water Activity","text":"","category":"section"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"The Common.jl module includes   a parameterization for difference in water activity between a H2SO4   solution droplet and ice. This can be used in immersion and homogeneous   freezing parameterizations of nucleation rate coefficient, J.   The parameterization is based on [32], [33],   and [34].","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"and the water activity of ice at the same temperature, a_wice(T). When the   droplet is in equilibrium with its surroundings, a_w is equivalent to relative   humidity. Otherwise, a parameterization can be found in the Common.jl file and   comes from [35],","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"beginequation\n  a_w = fracp_solp_sat\nendequation","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"beginequation\n  a_wice = fracp_isatp_sat\nendequation","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"where p_sol is saturated vapor pressure of water above solution, p_sat   is saturated vapor pressure above pure liquid water, and p_isat is saturated   vapor pressure above ice. p_sol is determined in mbar using a parameterization   for supercooled, binary H_2SO_4H_2O solution from [34] which is only   valid for 185K  T  235K:","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"beginequation\n  ln(p_sol) = 23306 - 53465x + 12xw_h - 819xw_h^2 + frac1T(-5814 + 9289x - 18767xw_h)\nendequation","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"where x is the weight fraction of sulphuric acid in the droplets   (i.e. if droplets are 10% sulphuric acid by mass, x = 01), w_h = 14408x,   and temperature is in Kelvins. Note that x should vary as the size of the droplet   changes.","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"note: Note\nThere is a need to find a parameterization for p_{sol} at temperatures warmer than 235K for mixed phase clouds.","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"For now, the equation used to find water activity of a droplet at equilibrium at   temperatures warmer than 235K is taken from [32] equation 4:","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"beginequation\n  a_w = S_i fracp_isat(T)p_sat(T)\nendequation","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"S_i is water vapor saturation raito with respect to ice and defined by","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"beginequation\n  S_i = fracp_vp_isat(T)\nendequation","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"where p_v is the ambient partial pressure of water vapor.","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"note: Note\nOnly use the above parameterization for Si in the application that it is not available. i.e. for a parcel model, use the Si calculated in the parcel model.","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"p_sat is currently defined using the Thermodynamics.jl library.   An alternative is using the parameterization for p_sol and setting   x = 0. We choose to use the Thermodynamics.jl to keep saturated vapor   pressure of pure water consistent throughout CloudMicrophysic.jl.","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"Similarly, p_isat is defined through the Thermodynamics.jl library. It is   possible to calculate it using chemical potential as done in [33], however,   we will use the current parameterization for consistency since they give similar results.","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"To verify that our parameterizations for p_isat and p_sat from     Thermodynamics.jl are valid at cold temperatures, we can compare to various     other vapor pressure parameterizations as found in [32].     Here, CM refers to CloudMicrophysics.jl and all dashed curves are different     implementations of p_isat and p_sat (p_sat labelled as     p_liq to emphasize ice vs liquid phase of the pure water).","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"include(\"plots/Baumgartner2022_fig5.jl\")","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"(Image: )","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"To verify that our parameterizations for water activty using Thermodynamics.jl     is ok, we plot critical water activity (water activtiy at which freezing occurs)     against the other variations found in [32]. Though not     matching exactly, our parameterization is relatively close to the other parameterizations. (Image: ) Shown in red is the water activity over ice using our parameterization. With these two lines   plotted (critical water activity of the droplet and ice water activity), we create a phase   diagram. Under the red line is liquid, above the critical water activity is ice, and between   the two curves is supercooled liquid.","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"Another plot to test if our parameterization is reasonable is plotting against other parameterizations   of water activity (as opposed to critical water activity) as a function of temperature. Plotted in   green are various ways to compute water activity over ice. using p(0T) refers to how the denominator,   a_w, is calculated. By default, this is parameterized assuming a pure liquid droplet with   Thermodynamics.jl. using p(0T) implies that the parameterization of vapor pressure of a solution   droplet is used but setting concentration of H2SO4 to zero. using mu refers to the parameterization   used in [33] where water activity is dependent on chemical potential.","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"include(\"plots/T_vs_wateractivity.jl\")","category":"page"},{"location":"WaterActivity/","page":"Water Activity","title":"Water Activity","text":"(Image: ) Taking the difference between any pair of blue and green lines will give a Delta a_w(T).   Since all the blue lines are similar and all the green lines are similar, we can   assume that our parameterization of pure liquid and ice water activities are reasonable.","category":"page"},{"location":"IceNucleation/#Ice-Nucleation","page":"Ice Nucleation","title":"Ice Nucleation","text":"","category":"section"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"Ice nucleation describes the process of forming ice crystals   from aerosol particles and/or liquid droplets. The IceNucleation.jl module includes:","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"the parameterization of activation of dust aerosol particles into ice crystals via deposition of water vapor,\nwater activity based parameterization of immersion freezing,\nwater activity based parameterization of homogeneous freezing.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"The parameterization for deposition on dust particles is an implementation of   the empirical formulae from [36]   and is valid for two types of dust particles:   Arizona Test Dust and desert dust from Sahara.   The parameterization for immersion freezing is an implementation of [37]   and is valid for droplets containing sulphuric acid.   The parameterization for homogeneous freezing is an implementation of [33].","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"note: Note\nFuture work includes refining the homogeneous freezing parameterization and modeling the competition between freezing modes.","category":"page"},{"location":"IceNucleation/#Activated-fraction-for-deposition-freezing-on-dust","page":"Ice Nucleation","title":"Activated fraction for deposition freezing on dust","text":"","category":"section"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"The parameterization models the activated fraction   as an empirical function of ice saturation ratio,   see eq. (3) in [36].","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"beginequation\nf_i(S_i) = expa(S_i - S_0) - 1\nendequation","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"where:","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"f_i is the activated fraction   (the ratio of aerosol particles acting as ice nuclei to the total number of aerosol particles),\nS_i is the ice saturation ratio   (the ratio of water vapor partial pressure and the water vapor partial pressure at saturation over ice),\nS_0 is the threshold ice saturation ratio,\na is a scaling parameter dependent on aerosol properties and temperature.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"Limited experimental values for the free parameters S_0 and a can be found in [36]. Both parameters are dependent on aerosol properties and temperature.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"note: Note\nFor a f_i values above 0.08 or S_i between 1.35 and 1.5, freezing occurs in a different ice nucleation mode (either a second deposition or other condensation type mode).","category":"page"},{"location":"IceNucleation/#ABIFM-for-Sulphuric-Acid-Containing-Droplets","page":"Ice Nucleation","title":"ABIFM for Sulphuric Acid Containing Droplets","text":"","category":"section"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"Water Activity-Based Immersion Freezing Model (ABFIM)   is a method of parameterizing immersion freezing inspired by the time-dependent   classical nucleation theory (CNT). More on CNT can be found in [38].   The nucleation rate coefficient, J, describes the number of ice nuclei formed per unit area   per unit time and can be determined by the water activity, a_w. This parameterization follows   [37]. In this model, aerosols are assumed to contain an insoluble and   soluble material. When immersed in water, the soluble material diffuses into the liquid water   to create a sulphuric acid solution.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"Using empirical coefficients, m and c, from [37],   the heterogeneous nucleation rate coefficient in units of cm^-2s^-1   can be determined by the linear equation","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"beginequation\n  log_10J_ABIFM = m Delta a_w + c\nendequation","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"A parameterization for Delta a_w can be found in Common.jl. More information on   it can be found in the Water Activity section.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"note: Note\nOur source code for the nucleation rate coefficient returns J in base SI units.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"Once J_ABIFM is calculated, it can be used to determine the ice production rate, P_ice, per second via immersion freezing.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"beginequation\n  P_ice = J_ABIFMA(N_tot - N_ice)\nendequation","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"where A is surface area of an individual ice nuclei, N_tot is total number   of ice nuclei, and N_ice is number of ice crystals already in the system.","category":"page"},{"location":"IceNucleation/#ABIFM-Example-Figures","page":"Ice Nucleation","title":"ABIFM Example Figures","text":"","category":"section"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"The following plot shows J as a function of Delta a_w as compared to   figure 1 in Knopf & Alpert 2013. Solution droplets were assumed to contain   a constant 10% wt. sulphuric acid. Changing the concentration will simply   shift the line, following Knopf & Alpert's parameterization. As such, this   plot is just to prove that J is correctly parameterized as a function   of Delta a_w, with no implications of whether Delta a_w is properly   parameterized. For more on water activity, please see above section.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"include(\"plots/KnopfAlpert2013_fig1.jl\")","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"(Image: )","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"The following plot shows J as a function of temperature as compared to figure 5a in Knopf & Alpert 2013.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"include(\"plots/KnopfAlpert2013_fig5.jl\")","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"(Image: ) Note that water activity of the droplet was assumed equal to relative humidity so that:","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"beginequation\n  a_w = fracp_sat(T = T_dew)p_sat(T)\nendequation","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"where T_dew is the dewpoint (in this example, it is constant at -45C).","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"note: Note\nFor the same figure in Knopf & Alpert, the mixed-phase cloud uses T{dew} = T. We are unsure when to use constant T{dew} or set it equal to T.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"It is also important to note that this plot is reflective of cirrus clouds   and shows only a very small temperature range. The two curves are slightly   off because of small differences in parameterizations for vapor pressures.","category":"page"},{"location":"IceNucleation/#Homogeneous-Freezing-for-Sulphuric-Acid-Containing-Droplets","page":"Ice Nucleation","title":"Homogeneous Freezing for Sulphuric Acid Containing Droplets","text":"","category":"section"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"Homogeneous freezing occurs when supercooled liquid droplets freeze on their own.   Closly based off [33], this parameterization determines a homoegneous nucleation   rate coefficient, J_hom, using water activity. The change in water activity,   Delta a_w(cTP), can be found in Common.jl and is described in the   Water Activity section. It is then used to empirically calculate J_hom(Delta a_w)   with units of cm^-3s^-1.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"The nucleation rate coefficient is determined with the cubic function from [33]","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"beginequation\n  logJ_hom = -9067 + 8502 Delta a_w - 26924(Delta a_w)^2 + 29180(Delta a_w)^3\nendequation","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"This parameterization is valid only when 026  Delta a_w  036 and 185K  T  235K.","category":"page"},{"location":"IceNucleation/#Homogeneous-Ice-Nucleation-Rate-Coefficient","page":"Ice Nucleation","title":"Homogeneous Ice Nucleation Rate Coefficient","text":"","category":"section"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"Here is a comparison of our parameterization of J_hom compared to Koop 2000 as   plotted in figure 1 of [39]. Our parameterization differs in the calculation   of Delta a_w. We define water activity to be a ratio of saturated vapor pressures whereas   Koop 2000 uses the difference in chemical potential.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"include(\"plots/HomFreezingPlots.jl\")","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"(Image: )","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"It should be noted that the Koop 2000   parameterization is only valid for temperatures up to 240K and a temperature-dependent max   pressure. The max valid pressure becomes negative around 237K, so the Koop 2000 parameterizaiton   should not be valid beyond 237K. For this reason, we limit the curve from [39]   to 237K.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"Multiple sulphuric acid concentrations, x,   are plotted since the actual concentration used in literature values is unspecified.","category":"page"},{"location":"IceNucleation/","page":"Ice Nucleation","title":"Ice Nucleation","text":"note: Note\nSpichtinger plot may be under the condition that x = 0 (pure liquid droplets). The current parameterization in CloudMicrophysics.jl is not valid for \\Delta a_w values that are obtained from pure water droplets. Though CliMA lines look far from the Spichtinger 2023 line, the lines seem to move closer as x approaches 0.","category":"page"},{"location":"AerosolNucleation/#Aerosol-Nucleation","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"Homogeneous aerosol nucleation describes the formation of aerosol particles from trace gases. The process occurs when the collisions and clustering   of individual trace gas molecules outpace the cluster evaporation rate. It typically involves sulfuric acid,   and is a significant source of ultrafine aerosol particles.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"The Nucleation.jl module contains parameterizations of different nucleation paths:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"binary sulfuric acid - water nucleation, from [40],\nternary sulfuric acid - water - ammonia nucleation, from [40],\npure organic nucleation, from [41],\norganic with sulfuric acid nucleation, from [42].","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"The parameterizations are based on the CLOUD   experiments at CERN and return nucleation rates for 1.7nm particles","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"note: Note\nIn the below documentation we show the rates as described in the original papers  with concentrations in units of cm^-3 (or additionally normalized by reference concentrations)  and the nucleation rates in units of cm^-3 s^-1.  Our actual implementation uses only base SI units.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"note: Note\nOne of the highlights of CLOUD measurements is the incorporation of ion-induced nucleation.  We can assume ion concentration is a prescribed function of height,  but we still need to learn what would make a good prescribed profile.","category":"page"},{"location":"AerosolNucleation/#Binary-and-ternary-sulfuric-acid-nucleation","page":"Aerosol Nucleation","title":"Binary and ternary sulfuric acid nucleation","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"This is an implementation of [40], see Appendix sections 8-10 for details. J_H_2SO_4 is the binary H_2SO_4-H_2O nucleation rate     and J_H_2SO_4NH_3 is the ternary H_2SO_4-NH_3-H_2O nucleation rate:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"J_H_2SO_4 =\n    k_bn(T)  H_2SO_4^p_bn\n    +\n    k_bi(T)  H_2SO_4^p_bi  n_-","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"J_H_2SO_4NH_3 =\n    k_tn(T)  f(H_2SO_4NH_3)  H_2SO_4^p_tn\n    +\n    k_ti(T)  f(H_2SO_4NH_3)  H_2SO_4^p_ti  n_-","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"where:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"cdot denotes the concentration,\nk_xy is an empirical function of temperature T,\nf_y is an empirical function of H_2SO_4 and NH_3.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"ln  k_xy(T) = u_xy - expleft(v_xyleftfracT1000-w_xyrightright)","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"f_y(H_2SO_4NH_3) = fracNH_3a_y + fracH_2SO_4^p_tyNH_3^p_Ay","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"The values of free parameters p, u, v, w, and a are defined in [40].","category":"page"},{"location":"AerosolNucleation/#Example-plots","page":"Aerosol Nucleation","title":"Example plots","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"Below figure reproduces results from [40] without negative ion concentrations.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"include(\"plots/CLOUD_Nucleation_Plots.jl\")","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"(Image: )","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"[43] is a commonly used parameterization of binary H_2SO_4-H_2O nucleation. The parameterization is a fit to the theoretical nucleation rate   and includes the effects of relative humidity. Below we show a comparison between the Vehkamaki et al 2002 parameterization   and the Dunne et al 2016 parameterization for two relative humidities.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"include(\"plots/compare_vehkamaki_CLOUD_nucleation.jl\")","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"(Image: ) (Image: )","category":"page"},{"location":"AerosolNucleation/#Pure-organic-nucleation","page":"Aerosol Nucleation","title":"Pure organic nucleation","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"Pure organic nucleation is parameterized based on [41]. The J_org is the organic nucleation rate given by:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"J_org =\n    J_norg + J_iorg =\n    a_1  HOM^a_2 + a_5HOM\n    +\n    a_3  HOM^a_4 + a_5HOM  n_pm","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"where:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"HOM is the concentration of highly oxygenated organic molecules from monoterpene (MT) oxidation,\nn_pmis the ion concentration.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"The HOM is parameterized as:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"HOM =\n    fracY_MTO_3  k_MTO_3  MT  O_3\n    +\n    Y_MTOH  k_MTOH  MT  OH \n    CS","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"where:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"Y_MTO_3, Y_MTOH are the HOM yields from MT oxidation with O_3 and OH radicals in the CLOUD chamber respectively,\nMT is the monoterpene concentration,\nCS is the condensation sink (s^-1).","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"The k_MTO_3 k_MTOH are functions of temperature T given by:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"k_MTO_3 = 805  10^-16  exp(444T)\n\nk_MTOH = 12  10^-11  exp(444T)","category":"page"},{"location":"AerosolNucleation/#Example-plots-2","page":"Aerosol Nucleation","title":"Example plots","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"include(\"plots/Kirkby_organic_nucleation_plots.jl\")","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"(Image: )","category":"page"},{"location":"AerosolNucleation/#Nucleation-of-organics-with-sulfuric-acid","page":"Aerosol Nucleation","title":"Nucleation of organics with sulfuric acid","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"This parameterization is given by [42]. The nucleation rate J_H_2SO_4org is given by:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"J_H_2SO_4org= 05  k_H_2SO_4org  H_2SO_4^2  BioOxOrg","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"where:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"[H2SO4] is the sulfuric acid concentration,\n[BioOxOrg] is the concentration of highly oxygenated organic molecules.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"BioOxOrg is a proxy for HOM, but represents a different group of compounds from HOM,   due to different measurement techniques. An empirical derivation is given by:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"BioOxOrg = frack_MTOH  MT  OHCS","category":"page"},{"location":"AerosolNucleation/#Example-plots-3","page":"Aerosol Nucleation","title":"Example plots","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"Below is a plot reproducing the results from [42], with a constant H_2SO_4 concentration of `2.6e6 cm\\^{-3}.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"include(\"plots/Riccobono_mixed_nucleation_plots.jl\")","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"(Image: )","category":"page"},{"location":"AerosolNucleation/#Apparent-nucleation-rate","page":"Aerosol Nucleation","title":"Apparent nucleation rate","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"It can happen that the parameterized nucleation rate is   defined for aerosol particles that are too small to be represented in an aerosol module. The apparent nucleation rate parameterization takes into account the   growth rate due to condensation, and sink terms to coagulation   and outputs the nucleation rate at a larger aerosol particle size. The parameterization is based on [44].","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"The apparent nucleation rate J_x at diameter d_x is given by:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"J_x = J_1  expleft(-gamma  d_1  fracCG(d_1)GRright)","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"where:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"J_1 is the nucleation rate at diameter d_1,\nCG(d_1) is the coagulation rate at diameter d_1,\nGR is the growth rate by condensation.","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"The parameter gamma is parameterized as:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"gamma = frac1m + 1  leftleft(fracd_xd_1right)^(m + 1) - 1right","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"where:","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"m can be prescribed as a constant value between -1.5 and -1.9 or computed as","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"m = fraclog(CG(d_x)  CG(d_1))(log(d_x  d_1)","category":"page"},{"location":"AerosolNucleation/#Example-plots-4","page":"Aerosol Nucleation","title":"Example plots","text":"","category":"section"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"include(\"plots/lehtinen_apparent_nucleation_rate.jl\")","category":"page"},{"location":"AerosolNucleation/","page":"Aerosol Nucleation","title":"Aerosol Nucleation","text":"(Image: )","category":"page"},{"location":"IceNucleationBox/#dimensional-adiabatic-parcel-model","page":"Adiabatic parcel model","title":"0-dimensional adiabatic parcel model","text":"","category":"section"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"The model solves for saturation ratio in a 0-dimensional   adiabatic parcel raising with constant velocity. It is based on [45], as well as the cirrus box model   [46], [47] and   is meant as a sandbox for testing different nucleation schemes.","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"We define liquid saturation ratio S_l","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\nS_l = fracee_sl\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"e - is the partial pressure of water vapor,\ne_sl - is the partial pressure of water vapor at saturation over liquid water.","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"Note that some models, for example [45], denote S_l   to be supersaturation fracee_sl - 1.","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"The change in saturation ratio can be described as","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\nfracdS_ldt = frac1e_sl fracdedt - fracee_sl^2 fracde_sldt\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"From ideal gas law the partial pressure of water vapor can be written as","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\ne = q_v p fracR_vR_a\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"q_v is the water vapor specific humidity\np is the air pressure\nR_v, R_a are the gas constants for water vapor and air.","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"The change in partial pressure can be written as","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\nfracdedt = fracdq_vdt p fracR_vR_a + q_v fracdpdtfracR_vR_a\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"From the ClausiusâClapeyron relation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\nfracde_sldt = fracL_v e_slR_v T^2 fracdTdt\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"L_v is the latent heat of vaporization,\nT is the temperature.","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"From the moist adiabatic assumption","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\nfracdTdt = fracR_a Tc_p p fracdpdt + fracL_vc_p fracdq_ldt + fracL_sc_p fracd q_idt\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"q_l is the cloud liquid water specific humidity,\nq_i is the cloud ice specific humidity,\nL_s is the latent heat of sublimation.","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"From hydrostatic balance and assuming constant vertical velocity:","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\nfracdpdt = -fracp gR_a T w\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"g is the gravitational acceleration\nw is the constant vertical velocity.","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"Accounting for conservation of water, i.e. fracdq_vdt + fracdq_ldt + fracdq_idt = 0, and rearranging the terms","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\nfracdS_ldt = a_1 w S_l - left(a_2 + a_3 right) S_l fracdq_ldt - left(a_2 + a_4right) S_l fracdq_idt\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\na_1 = fracL_v gc_p T^2 R_v - fracgR_a T\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\na_2 = frac1q_v\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\na_3 = fracL_v^2R_v T^2 c_p\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\na_4 = fracL_v L_sR_v T^2 c_p\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"Saturation ratio over ice can then be related to S_l by the relation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\n  S_i = xi S_l\n  labeleqsupersat_relation\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"where xi = frace_sle_si is the ratio of saturation vapor pressure over liquid and saturation vapor pressure over ice.","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"The crux of the problem is modeling the fracdq_ldt and fracdq_idt   for different homogeneous and heterogeneous ice nucleation paths.","category":"page"},{"location":"IceNucleationBox/#Condensation","page":"Adiabatic parcel model","title":"Condensation","text":"","category":"section"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"The diffusional growth of individual cloud droplet is described by (see discussion),","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\n  r_l fracdr_ldt = frac1rho_l  (S_l - 1)  G_l(T)\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"r_l is the droplet radius\nrho_l is the water density\nG_l(T) = left(fracL_vKT left(fracL_vR_v T - 1 right) + fracR_v Te_sl D right)^-1   combines the effects of thermal conductivity and water diffusivity,\nK is the thermal conductivity of air,\nD is the diffusivity of water vapor.","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"note: Note\nSome formulations don't consider the -1 term in the denominator of G(T)","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"Assuming spherical water droplets, the change in droplet mass m_l can be described as","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\n  fracdm_ldt = 4 pi rho_l r^2 fracdr_ldt = 4 pi r_l (S_l - 1) G_l(T)\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"Integrating over the assumed size distribution of droplets","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\n   fracdq_ldt = frac1V frac1rho_a 4 pi (S_l - 1) G_l(T) int_0^infty n(r) r dr =\n                                 frac1rho_a 4 pi (S_l - 1) G_l(T) N_tot barr\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"N_tot is the total number concentration of droplets per volume of air V\nbarr is their mean radius\nrho_a is the density of air.","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"For a monodisperse distribution of droplets n(r) = N_tot delta(r-barr), barr = left( frac3 rho_a q_l4 pi rho_l N_tot right)^13. For a gamma distribution of droplets n(r) = A  r  exp(-lambda r), barr = frac2lambda where lambda = left(frac32 pi N_tot rho_lq_l rho_aright)^13.","category":"page"},{"location":"IceNucleationBox/#Deposition-on-dust-particles","page":"Adiabatic parcel model","title":"Deposition on dust particles","text":"","category":"section"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"Similarly, for a case of a spherical ice particle growing through water vapor deposition","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\n  fracdm_idt = 4 pi  r_i  alpha_m  (S_i - 1)  G_i(T)\n  labeleqmassratesphere\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"r_i is the ice particle radius,\nalpha_m is the accommodation coefficient that takes into account the fact that not all water vapor molecules   that arrive at the particle surface will join the growing crystal,\nG_i(T) = left(fracL_sKT left(fracL_sR_v T - 1 right) + fracR_v Te_si D right)^-1   combines the effects of thermal conductivity and water diffusivity,","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"note: Note\nThe r_i in eq. (\\ref{eq:massratesphere}) should be replaced by the capacitance C, when considering non-spherical particles. For a sphere C=r, for a circular disc C=2rpi.","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"It follows that","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\n  fracdq_idt = frac1rho_a alpha_m 4 pi (S_i - 1) G_i(T) N_act barr\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"N_act is the number of activated ice particles.","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"N_act can be computed for example from   activated fraction f_i","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\n  N_act = N_aer f_i\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"where:","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"N_aer is the number of available dust aerosol particles.","category":"page"},{"location":"IceNucleationBox/#Immersion-Freezing","page":"Adiabatic parcel model","title":"Immersion Freezing","text":"","category":"section"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"Following the water activity based immersion freezing model (ABIFM), the ABIFM derived   nucleation rate coefficient, J_immer, can be determined. The ice production rate,P_ice,   per second via immersion freezing can then be calculating using","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"beginequation\n  P_ice = fracdN_idt_immer = J_immerA(N_liq)\n  labeleqABIFM_P_ice\nendequation","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"where N_liq is total number of ice nuclei containing droplets and    A is surface area of those droplets.","category":"page"},{"location":"IceNucleationBox/#Example-figures","page":"Adiabatic parcel model","title":"Example figures","text":"","category":"section"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"Here we show example simulation results from the adiabatic parcel   model with deposition freezing on dust. The model is run three times for 30 minutes simulation time,   (shown by three different colors on the plot). Between each run the water vapor specific humidity is changed,   while keeping all other state variables the same as at the last time step   of the previous run. The prescribed vertical velocity is equal to 3.5 cm/s. Supersaturation is plotted for both liquid (solid lines) and ice (dashed lines).","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"include(\"../../parcel/Tully_et_al_2023.jl\")","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"(Image: )","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"In the plots below, the parcel model is ran with only condensation (no ice or freezing)   assuming either a monodisperse or a gamma distribution of droplets. It is compared to [31].","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"include(\"../../parcel/Liquid_only.jl\")","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"(Image: )","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"The plots below are the results of the adiabatic parcel model   with immersion freezing, condensation growth, and deposition growth for   both a monodisperse and gamma size distribution. Note that this has not   yet been validated against literature.","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"include(\"../../parcel/Immersion_Freezing.jl\")","category":"page"},{"location":"IceNucleationBox/","page":"Adiabatic parcel model","title":"Adiabatic parcel model","text":"(Image: )","category":"page"},{"location":"MicrophysicsNonEq/#Microphysics-NonEquilibrium","page":"Non-equilibrium cloud formation","title":"Microphysics NonEquilibrium","text":"","category":"section"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"The MicrophysicsNonEq.jl module describes a bulk parameterization of   diffusion of water vapour on cloud droplets and cloud ice crystals   modeled as a relaxation to equilibrium.","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"The cloud microphysics variables are expressed as specific humidities:","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"q_tot - total water specific humidity,\nq_vap - water vapor specific humidity,\nq_liq - cloud water specific humidity,\nq_ice - cloud ice specific humidity,","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"Parameters used in the parameterization are defined in   CLIMAParameters.jl package. They consist of:","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"symbol definition units default value reference\ntau_cond_evap cloud water condensation/evaporation timescale s 10 \ntau_dep_sub cloud ice deposition/sublimation timescale s 10 ","category":"page"},{"location":"MicrophysicsNonEq/#Cloud-water-condensation/evaporation","page":"Non-equilibrium cloud formation","title":"Cloud water condensation/evaporation","text":"","category":"section"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"Condensation and evaporation of cloud liquid water is parameterized   as a relaxation to equilibrium value at the current time step.","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"beginequation\n  left fracd  q_liqdt right_cond evap =\n    fracq^eq_liq - q_liqtau_cond_evap\nendequation","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"where:","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"q^eq_liq - liquid water specific humidity in equilibrium,\nq_liq - liquid water specific humidity,\ntau_cond_evap - relaxation timescale.","category":"page"},{"location":"MicrophysicsNonEq/#Cloud-ice-deposition/sublimation","page":"Non-equilibrium cloud formation","title":"Cloud ice deposition/sublimation","text":"","category":"section"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"Deposition and sublimation of cloud ice is parameterized as   a relaxation to equilibrium value at the current time step.","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"beginequation\n  left fracd  q_icedt right_dep sub =\n    fracq^eq_ice - q_icetau_dep_sub\nendequation","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"where:","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"q^eq_ice - ice specific humidity in equilibrium,\nq_ice - ice specific humidity,\ntau_dep_sub - relaxation timescale.","category":"page"},{"location":"MicrophysicsNonEq/","page":"Non-equilibrium cloud formation","title":"Non-equilibrium cloud formation","text":"note: Note\nBoth tau_cond_evap and tau_dep_sub are assumed constant here. It would be great to make the relaxation time a function of available condensation nuclei, turbulence intensity, etc. See works by prof Raymond Shaw for hints. In particular, [27].","category":"page"},{"location":"References/#References","page":"References","title":"References","text":"","category":"section"},{"location":"References/","page":"References","title":"References","text":"E.Â Kessler. On the continuity and distribution of water substance in atmospheric circulations. AtmosphericÂ research 38, 109â145 (1995).\n\n\n\nW.Â W.Â Grabowski. Toward cloud resolving modeling of large-scale tropical circulations: A simple cloud microphysics parameterization. JournalÂ ofÂ theÂ AtmosphericÂ Sciences 55, 3283â3298 (1998).\n\n\n\nC.Â M.Â Kaul, J.Â Teixeira and K.Â Suzuki. Sensitivities in large-eddy simulations of mixed-phase Arctic stratocumulus clouds using a simple microphysics approach. MonthlyÂ WeatherÂ Review 143, 4393â4421 (2015).\n\n\n\nJ.-P.Â Chen, T.-W.Â Hsieh, C.-Y.Â Lin and C.-K.Â Yu. Accurate parameterization of precipitation particles' fall speeds for bulk cloud microphysics schemes. AtmosphericÂ Research 293 (2022).\n\n\n\nV.Â I.Â Khvorostyanov and J.Â A.Â Curry. Terminal velocities of droplets and crystals: Power laws with continuous parameters over the size spectrum. JournalÂ ofÂ theÂ atmosphericÂ sciences 59, 1872â1884 (2002).\n\n\n\nM.Â Karrer, A.Â Seifert, C.Â Siewert, D.Â Ori, A.Â vonÂ Lerber and S.Â Kneifel. Ice Particle Properties Inferred from Aggregation Modelling. JournalÂ ofÂ AdvancesÂ inÂ ModelingÂ EarthÂ Systems -1, e2020MS002066 (2020).\n\n\n\nJ.Â S.Â Marshall and W.Â M.Â Palmer. The distribution of raindrops with size. JournalÂ ofÂ meteorology 5, 165â166 (1948).\n\n\n\nW.Â W.Â Grabowski and P.Â K.Â Smolarkiewicz. Two-time-level semi-Lagrangian modeling of precipitating clouds. MonthlyÂ weatherÂ review 124, 487â497 (1996).\n\n\n\nJ.Â Y.Â Harrington, M.Â P.Â Meyers, R.Â L.Â Walko and W.Â R.Â Cotton. Parameterization of ice crystal conversion processes due to vapor deposition for mesoscale models using double-moment basis functions. Part I: Basic formulation and parcel model results. JournalÂ ofÂ theÂ atmosphericÂ sciences 52, 4344â4366 (1995).\n\n\n\nS.Â A.Â Rutledge and P.Â Hobbs. The mesoscale and microscale structure and organization of clouds and precipitation in midlatitude cyclones. VIII: A model for the âseeder-feederâ process in warm-frontal rainbands. JournalÂ ofÂ theÂ AtmosphericÂ Sciences 40, 1185â1206 (1983).\n\n\n\nS.Â A.Â Rutledge and P.Â V.Â Hobbs. The mesoscale and microscale structure and organization of clouds and precipitation in midlatitude cyclones. XII: A diagnostic modeling study of precipitation development in narrow cold-frontal rainbands. JournalÂ ofÂ theÂ AtmosphericÂ Sciences 41, 2949â2972 (1984).\n\n\n\nH.Â Morrison and A.Â Gettelman. A new two-moment bulk stratiform cloud microphysics scheme in the Community Atmosphere Model, version 3 (CAM3). Part I: Description and numerical tests. JournalÂ ofÂ Climate 21, 3642â3659 (2008).\n\n\n\nA.Â Seifert and K.Â D.Â Beheng. A two-moment cloud microphysics parameterization for mixed-phase clouds. Part 1: Model description. MeteorologyÂ andÂ atmosphericÂ physics 92, 45â66 (2006).\n\n\n\nY.Â Ogura and T.Â Takahashi. Numerical simulation of the life cycle of a thunderstorm cell. Mon.Â Wea.Â Rev 99, 895â911 (1971).\n\n\n\nR.Â Wood. Drizzle in stratiform boundary layer clouds. Part II: Microphysical aspects. JournalÂ ofÂ theÂ atmosphericÂ sciences 62, 3034â3050 (2005).\n\n\n\nB.Â J.Â Mason. Physics of clouds (Clarendon Press, 2010).\n\n\n\nL.-P.Â Wang, C.Â N.Â Franklin, O.Â Ayala and W.Â W.Â Grabowski. Probability distributions of angle of approach and relative velocity for colliding droplets in a turbulent flow. JournalÂ ofÂ theÂ atmosphericÂ sciences 63, 881â900 (2006).\n\n\n\nM.Â Khairoutdinov and Y.Â Kogan. A New Cloud Physics Parameterization in a Large-Eddy Simulation Model of Marine Stratocumulus. MonthlyÂ WeatherÂ Review 128, 229â243 (2000).\n\n\n\nK.Â Beheng. A parameterization of warm cloud microphysical conversion processes. AtmosphericÂ Research 33, 193â206 (1994).\n\n\n\nG.Â Tripoli and W.Â Cotton. A Numerical Investigation of Several Factors Contributing to the Observed Variable Intensity of Deep Convection over South Florida. JournalÂ ofÂ AppliedÂ MeteorologyÂ andÂ Climatology 19, 1037â1063 (1980).\n\n\n\nY.Â Liu and P.Â Daum. Parameterization of the Autoconversion Process.Part I: Analytical Formulation of the Kessler-Type Parameterizations. JournalÂ ofÂ theÂ AtmosphericÂ Sciences 61, 1539â1548 (2004).\n\n\n\nH.Â Morrison and J.Â A.Â Milbrandt. Parameterization of Cloud Microphysics Based on the Prediction of Bulk Ice Particle Properties. Part I: Scheme Description and Idealized Tests. JournalÂ ofÂ theÂ AtmosphericÂ Sciences 72, 287â311 (2015).\n\n\n\nA.Â J.Â Heymsfield. Properties of Tropical and Midlatitude Ice Cloud Particle Ensembles. Part II: Applications for Mesoscale and Climate Models. JournalÂ ofÂ theÂ AtmosphericÂ Sciences 60, 2592â2611 (2003).\n\n\n\nH.Â Morrison and W.Â W.Â Grabowski. A Novel Approach for Representing Ice Microphysics in Models: Description and Tests Using a Kinematic Framework. JournalÂ ofÂ theÂ AtmosphericÂ Sciences 65, 1528â1548 (2008).\n\n\n\nP.Â R.Â Brown and P.Â N.Â Francis. Improved Measurements of the Ice Water Content in Cirrus Using a Total-Water Probe. JournalÂ ofÂ AtmosphericÂ andÂ OceanicÂ Technology 12, 410â414 (1995).\n\n\n\nD.Â L.Â Mitchell. Use of mass- and area-dimensional power laws for determining precipitation particle terminal velocities. JournalÂ ofÂ theÂ AtmosphericÂ Sciences 53, 1710â1723 (1996).\n\n\n\nN.Â Desai, K.Â Chandrakar, G.Â Kinney, W.Â Cantrell and R.Â Shaw. Aerosol-Mediated Glaciation of Mixed-Phase Clouds: Steady-State Laboratory Measurements. GeophysicalÂ ResearchÂ Letters 46, 9154â9162 (2019).\n\n\n\nH.Â Abdul-Razzak, S.Â J.Â Ghan and C.Â Rivera-Carpio. A parameterization of aerosol activation: 1. Single aerosol type. JournalÂ ofÂ GeophysicalÂ Research:Â Atmospheres 103, 6123â6131 (1998).\n\n\n\nH.Â Abdul-Razzak and S.Â J.Â Ghan. A parameterization of aerosol activation: 2. Multiple aerosol types. JournalÂ ofÂ GeophysicalÂ Research:Â Atmospheres 105, 6837â6844 (2000).\n\n\n\nM.Â D.Â Petters and S.Â M.Â Kreidenweis. A single parameter representation of hygroscopic growth and cloud condensation nucleus activity. AtmosphericÂ ChemistryÂ andÂ Physics 7, 1961â1971 (2007).\n\n\n\nR.Â Rogers. An elementary parcel model with explicit condensation and supersaturation. Atmosphere 13, 192â204 (1975).\n\n\n\nM.Â Baumgartner, C.Â Rolf, J.-U.Â GrooÃ, J.Â Schneider, T.Â Schorr, O.Â MÃ¶hler, P.Â Spichtinger and M.Â KrÃ¤mer. New investigations on homogeneous ice nucleation: the effects of water activity and water saturation formulations. AtmosphericÂ ChemistryÂ andÂ Physics 22, 65â91 (2022).\n\n\n\nT.Â Koop and e.Â al. Water activity as the determinant for homogeneous ice nucleation in aqueous solutions. Nature 406, 611â614 (2000).\n\n\n\nB.Â Luo, K.Â S.Â Carslaw, T.Â Peter and S.Â L.Â Clegg, vapour pressures of H2SO4/HNO3/HCl/HBr/H2O solutions to low stratospheric temperatures. GeophysicalÂ ResearchÂ Letters 22, 247â250 (1995), arXiv:https://agupubs.onlinelibrary.wiley.com/doi/pdf/10.1029/94GL02988.\n\n\n\nT.Â Koop. The Water Activity of Aqueous Solutions in Equilibrium with Ice. BulletinÂ ofÂ theÂ ChemicalÂ SocietyÂ ofÂ Japan 75, 2587â2588 (2002).\n\n\n\nO.Â MÃ¶hler, P.Â R.Â Field, P.Â Connolly, S.Â Benz, H.Â Saathoff, M.Â Schnaiter, R.Â Wagner, R.Â Cotton, M.Â KrÃ¤mer, A.Â Mangold and A.Â J.Â Heymsfield. Efficiency of the deposition mode ice nucleation on mineral dust particles. AtmosphericÂ ChemistryÂ andÂ Physics 6, 3007â3021 (2006).\n\n\n\nD.Â A.Â Knopf and P.Â A.Â Alpert. A water activity based model of heterogeneous ice nucleation kinetics for freezing of water and aqueous solution droplets. FaradayÂ Discuss. 165, 513â534 (2013).\n\n\n\nS.Â Karthika, T.Â K.Â Radhakrishnan and P.Â Kalaichelvi. A Review of Classical and Nonclassical Nucleation Theories. CrystalÂ GrowthÂ &Â Design 16, 6663â6681 (2016).\n\n\n\nP.Â Spichtinger, P.Â Marschalik and M.Â Baumgartner. Impact of formulations of the homogeneous nucleation rate on ice nucleation events in cirrus. AtmosphericÂ ChemistryÂ andÂ Physics 23, 2035â2060 (2023).\n\n\n\nE.Â Dunne and e.Â al. Global atmospheric particle formation from CERN CLOUD measurements. Science 354, 1119â1124 (2016).\n\n\n\nJ.Â Kirkby and e.Â al. Ion-induced nucleation of pure biogenic particles. Nature 533, 521â526 (2016).\n\n\n\nF.Â Riccobono and e.Â al. Oxidation Products of Biogenic Emissions Contribute to Nucleation of Atmospheric Particles. Science 344, 717â721 (2014).\n\n\n\nH.Â VehkamÃ¤ki, M.Â Kulmala, I.Â Napari, K.Â E.Â Lehtinen, C.Â Timmreck, M.Â Noppel and A.Â Laaksonen. An improved parameterization for sulfuric acidâwater nucleation rates for tropospheric and stratospheric conditions. JournalÂ ofÂ GeophysicalÂ Research:Â Atmospheres 107 (2002).\n\n\n\nK.Â E.Â Lehtinen, M.Â .Â Maso, M.Â Kulmala and V.-M.Â Kerminen. Estimating nucleation rates from apparent particle formation rates and vice versa: Revised formulation of the KerminenâKulmala equation. JournalÂ ofÂ AerosolÂ Science 38, 988â994 (2007).\n\n\n\nA.Â V.Â Korolev and I.Â P.Â Mazin. Supersaturation of Water Vapor in Clouds. JournalÂ ofÂ theÂ AtmosphericÂ Sciences 60, 2957â2974 (2003).\n\n\n\nB.Â KÃ¤rcher, J.Â Hendricks and U.Â Lohmann. Physically based parameterization of cirrus cloud formation for use in global atmospheric models. JournalÂ ofÂ GeophysicalÂ Research:Â Atmospheres 111 (2006).\n\n\n\nC.Â Tully, D.Â Neubauer and U.Â Lohmann. Assessing predicted cirrus ice properties between two deterministic ice formation parameterizations. GeoscientificÂ ModelÂ Development 16, 2957â2973 (2023).\n\n\n\nF.Â Glassmeier and U.Â Lohmann. Constraining Precipitation Susceptibility of Warm-, Ice-, and Mixed-Phase Clouds with Microphysical Equations. JournalÂ ofÂ theÂ AtmosphericÂ Sciences 73, 5003â5023 (2016).\n\n\n\n","category":"page"},{"location":"Microphysics2M/#Microphysics-2M","page":"2-moment precipitation microphysics","title":"Microphysics 2M","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The Microphysics2M.jl module provides 2-moment warm rain bulk parameterization of cloud microphysical processes including autoconversion, accretion, cloud droplets and raindrops self-collection, raindrops breakup, mean terminal velocity and rain evaporation. Autoconversion defines the rate of transfer from cloud liquid water to rain water due to collisions between cloud droplets. Accretion defines the rate of transfer from cloud liquid water to rain water due to collisions between cloud droplets and rain drops. Cloud self-collection defines the rate of change of cloud droplets number density due to collisions between cloud droplets, and similarly, rain self-collection defines the rate of change of raindrops number density due to collsions between raindrops. Rain drops breakup defines the rate of new raindrops production due to the disintegration of larger raindrops. Mean terminal velocity represents the mean fall speed of raindrops, and rain evaporation describes the rate of the transformation of rainwater to water vapor. Specifically, Microphysics2M.jl implements:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"the double-moment [13] parametrization, which includes autoconversion, accretion, cloud and rain self-collection rates, breakup, terminal velocity and evaporation;\nand other double-moment autoconversion and accretions schemes from [15] based on the works of [18], [19], [20] and [21].","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The microphysics variables are expressed as specific humidities [kg/kg] and number densities [1/m^3]:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq - cloud water specific humidity,\nq_rai - rain specific humidity,\nN_liq - cloud droplets number density,\nN_rai - raindrops number density.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default values of free parameters are defined in   CLIMAParameters   and can be overwritten using the toml files.","category":"page"},{"location":"Microphysics2M/#The-Seifert-and-Beheng-(2006)-parametrization","page":"2-moment precipitation microphysics","title":"The Seifert and Beheng (2006) parametrization","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The [13] parametrization provides process rates for autoconversion, accretion, self-collection of cloud droplets and raindrops, raindrops breakup, raindrops mean fall speed, and rain evaporation. This parametrization is directly derived from the stochastic collection equation (SCE) with a piecewise polynomial collsion kernel and assumming a gamma size distribution for cloud droplets and an exponential size distribution for raindrops.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The piece-wise polynomial collection Kernel, used for the derivation of the parametrization, is given by:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n    K(xy) =\n    begincases\n    k_cc(x^2+y^2) quad  xwedge y  x^*\n    k_cr(x+y) quad  xoplus y geq x^*\n    k_rr(x+y)exp-kappa_rr (x^13 + y^13) quad  xwedge y geq x^*\n    endcases\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where x and y are drop masses and x^* is the mass threshold chosen to separate the cloud and rain portions of the mass distribution. For K in m^3 s^-1 the constants are","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nk_cc 444 times 10^9   m^3 cdot kg^2 cdot s^-1\nk_cr 525   m^3 cdot kg cdot s^-1\nk_rr 712   m^3 cdot kg cdot s^-1\nkappa_rr 607   m^3 cdot kg cdot s^-1\nx^* 26 times 10^-10  kg","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default value of x^*=26times 10^-10 kg corresponds to the drop radius r^* approx 40 mu m.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The cloud droplets Gamma distribution function is described by","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n    f_c(x)=Ax^nu e^-Bxquad nu=textconst\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the raindrops exponential distribution is expressed as","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n    f_r(D)=alpha e^-beta D\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where D is the drop diameter which is proportional to x^13.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"note: Note\nIn the derivation of the parametrization, it is assumed that the cloud droplet distribution f_c(x) does not contain a significant number of droplets with masses almost equal or larger than x^*. This is reffered to as the undeveloped cloud droplet spectrum assumption. Similarly the raindrop distribution does not contain a significant number of rain drops with masses almost equal or smaller than x^*. These assumptions allow us to simplify the calculation of moments of the distributions by integrating from zero to infinity.","category":"page"},{"location":"Microphysics2M/#Autoconversion","page":"2-moment precipitation microphysics","title":"Autoconversion","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The autoconversion rate can be estimated by looking at variations in the second moment of the particle mass spectrum. Specifically, the sum of variations in the second moment of the cloud droplets and raindrops spectrum equals the variations in the second moment of the particle mass spectrum:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\nfracpartial Zpartial t = fracpartial Z_cpartial t + fracpartial Z_rpartial t\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where Z represents the second moment, and c and r subscripts denote cloud and rain categories respectively. In the early stages of rain evolution, an estimate of the variations in the second moment of the particle mass spectrum is obtained from the stochastic collection equation: partial Z  partial t  approx  2k_c L_c M_c^(3), where M_c^(3) is the third moment of the cloud droplets spectrum. Using these equations, along with computing Z_c, M_c^(3), Z_r directly by integrating the distribution functions, allows us to derive an equation for the autoconversion rate. To simplify the derivation, we assume that in the initial stage of the rain evolution raindrops have sizes of the order of x^* and the mean radius of cloud droplets is much less than x^*. This approach yields an approximation of the autoconversion rate in the early stages of rain evolution. The early stage rain evolution assumption is then relaxed by means of a universal function that depends on a process time scale.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The rate of change of rain specific humidity by autoconversion is finally expressed as","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracpartial q_raipartial t right_acnv = frack_cc20  x^*  rho frac(nu+2)(nu+4)(nu+1)^2 (q_liq rho)^2 overlinex_c^2 left(1+fracphi_acnv(tau)1-tau^2right)fracrho_0rho\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nrho is the moist air density,\nrho_0 = 1225  kg cdot m^-3 is the air density at surface conditions,\nk_cc is the cloud-cloud collection kernel constant,\nnu is the cloud droplet gamma distribution parameter,\nx^* is the drop mass separating the cloud and rain categories\noverlinex_c = (q_liq rho)  N_liq is the cloud droplet mean mass with N_liq denoting the cloud droplet number density. Here, to ensure numerical stability, we limit overlinex_c by the upper bound of x^*.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The function phi_acnv(tau) is used to correct the autoconversion rate for the undeveloped cloud droplet spectrum and the early stage rain evolution assumptions. This is a universal function which is obtained by fitting to numerical results of the SCE:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  phi_acnv(tau) = A tau^b(1-tau^b)^c\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"tau = 1 - q_liq(q_liq + q_rai) is a dimensionless internal time scale with q_rai being the cloud liquid water specific humidity.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nnu 2\nA 400\na 07\nc 3","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The rate of change of raindrops number density is","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracpartial N_raipartial t right_acnv = fracrhox^* left fracd  q_raidt right_acnv\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the rate of change of liquid water specific humidity and cloud droplets number density are","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n  left fracpartial q_liqpartial t right_acnv = - left fracpartial q_raipartial t right_acnv\n  left fracpartial N_liqpartial t right_acnv = -2 left fracpartial N_raipartial t right_acnv\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"note: Note\nThe Seifert and Beheng parametrization is formulated for the rate of change of liquid water content L = rho q. Here, we assume constant rho and divide the rates by rho to derive the equations for the rate of change of specific humidities.","category":"page"},{"location":"Microphysics2M/#Accretion","page":"2-moment precipitation microphysics","title":"Accretion","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"An approximation for the accretion rate is obtained by directly evaluating the integral:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n    left fracpartial q_raipartial t right_accr = frac1rho int_x=0^inftyint_y=0^infty f_c(x) f_r(y) K(xy) x dy dx\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"Similar to the autoconversion rate, the accretion rate is modified by a universal function. Thus, the rate of change of rain specific humidity by accretion becomes","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n  left fracpartial q_raipartial t right_accr =  frack_crrho (q_liq rho) (q_rai rho) phi_accr(tau)nonumber\n   =  k_r rho q_liq q_rai phi_accr(tau) left(fracrho_0rhoright)^12\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nq_rai is the rain liquid water specific humidity,\nrho is the moist air density,\nrho_0 is the air density at surface conditions,\nk_cr is the cloud-rain collection kernel constant.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The universal function phi_accr(tau) is used to correct the accretion rate for the assumption of collsion efficiency being one. Fitting to numerical solutions of the SCE obtains:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  phi_accr(tau) = left(fractautau+tau_0right)^c\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"tau = 1 - q_liq(q_liq + q_rai) is a dimensionless internal time scale.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\ntau_0 5 times 10^-5\nc 4","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The rate of change of raindrops number density by accretion is zero, and the rate of change of liquid water specific humidity and cloud droplets number density are","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n  left fracpartial q_liqdt right_accr = - left fracpartial q_raidt right_accr\n  left fracpartial N_liqdt right_accr = fracrhooverlinex_c left fracpartial q_liqdt right_accr\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where overlinex_c = (q_liq rho)  N_liq is the cloud droplet mean mass.","category":"page"},{"location":"Microphysics2M/#Cloud-droplets-self-collection","page":"2-moment precipitation microphysics","title":"Cloud droplets self-collection","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"An approximation for the self-collection rate of cloud droplets is obtained by the following equation:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n   left fracpartial N_liqpartial t right_sc =  left fracpartial N_liqpartial t right_acnv sc - left fracpartial q_raipartial t right_acnvnonumber\n   =  -frac12int_x=0^inftyint_y=0^infty f_c(x) f_c(y) K(xy) dy dx - left fracd  q_raidt right_acnv\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"Direct evaluation of the integral results in the following approximation of the rate of change of cloud droplets number density due to self-collection","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracpartial N_liqpartial t right_sc = -k_cc fracnu + 2nu + 1 fracrho_0rho (q_liq rho)^2 - left fracpartial N_liqpartial t right_acnv\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nrho is the moist air density,\nrho_0 is the air density at surface conditions,\nk_cc is the Long's collection kernel constant,\nnu is the cloud droplet gamma distribution parameter,\nleft fracd  N_liqdt right_acnv is the rate of change of cloud droplets number density by autoconversion.","category":"page"},{"location":"Microphysics2M/#Raindrops-self-collection","page":"2-moment precipitation microphysics","title":"Raindrops self-collection","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"An approximation for rate of change of raindrops number density due to self-collection is obtained by directly evaluating the integral:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n    left fracpartial N_raipartial t right_sc= -frac12int_x=0^inftyint_y=0^infty f_r(x) f_r(y) K(xy) dy dx\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"This yields,","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracpartial N_raipartial t right_sc = -k_rr N_rai (q_rai rho) left(1+frackappa_rrlambda_r right)^d left(fracrho_0rhoright)^12\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_rai is the rain water specific humidity,\nrho is the moist air density,\nrho_0 is the air density at surface conditions,\nN_rai is the raindrops number density,\nk_rr and kappa_rr are the rain-rain collection kernel constants.\nlambda_r is the raindrops size distribution parameter (based on drop mass): lambda_r = left(frac6overlinex_rright)^13.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default constant value is:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nd -5","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"note: Note\nIn the paper d=-9 which seems to be a mistake! Evaluating the integral for derving the self-collection rate results in d=-5.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"note: Note\nFor the same numerical instabilities which in the paper are mentioned for terminal velocity and evaporation, here for rain self-collection, the value of lambda_r is bounded within a range. In fact we first compute the bounded lambda_r based on drop diameter by the algorithm given in the paper and then convert it to lambda_r based on mass (the conversion can be done by multiplying to a constant value).","category":"page"},{"location":"Microphysics2M/#Raindrops-breakup","page":"2-moment precipitation microphysics","title":"Raindrops breakup","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"Raindrops breakup is modeled by assuming that in a precipitation event coalescence and breakup ultimately reach an equilibrium with a self-similar equilibrium size distribution. As a result, the breakup process can be coupled to raindrops self-collection by the following parameterization","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracpartial N_raipartial t right_br = -Phi_br(Delta overlineD_r) + 1 left fracpartial N_raipartial t right_sc\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where Delta overlineD_r = overlineD_r - overlineD_eq with overlineD_r denoting the mean volume raindrop diameter and overlineD_eq being the equilibrium mean diameter. The function Phi_br(Delta overlineD_r) is given by","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"  beginalign\n    Phi_br(Delta overlineD_r) =\n    begincases\n    -1 quad  overlineD_r  overlineD_threshold\n    k_br Delta overlineD_r quad  overlineD_threshold  overlineD_r  overlineD_eq\n    2 (exp(kappa_br Delta overlineD_r) -1) quad  overlineD_eq  overlineD_r\n    endcases\n  endalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nk_br 1000  m^-1\nkappa_br 2300  m^-1\noverlineD_threshold 035 times 10^-3   m\noverlineD_eq 09 times 10^-3   m","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"note: Note\nIn the paper for overlineD_eq  overlineD_r the equation Phi_br(Delta overlineD_r) = 2 exp(kappa_br Delta overlineD_r) -1 is given. This equations seems to be missing parentheses as the equation must be continuous at Delta overlineD_r = 0 as shown in Fig. 2 of the paper.","category":"page"},{"location":"Microphysics2M/#Terminal-velocity","page":"2-moment precipitation microphysics","title":"Terminal velocity","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"For the two moment scheme which is based on number density and mass, it is straightforward to model sedimentation of particles by using number- and mass-weighted mean terminal velocities. For rain water these terminal velocities are obtained by calculating the following integral:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  overlinev_r k = frac1M_r^k int_0^infty x^k f_r(x) v(x) dx\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where the superscript k indicates the moment number, k=0 for number density and k=1 for mass. The individual terminal velocity of particles is approximated by","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"v(x) = left(rho_0rhoright)^frac12 a_R - b_R exp(-c_R D_r)","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where a_R, b_R and c_R are three free parameters and D_r is the particle diameter. Evaluating the integral results in the following equation for terminal velocity:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  overlinev_r k = left(fracrho_0rhoright)^frac12lefta_R - b_R left(1+fracc_Rlambda_rright)^-(3k+1)right\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where lambda_r is the raindrops size distribution parameter (based on diameter): lambda_r = (phi rho_woverlinex_r)^13. To avoid numerical instabilities, especially when N_rai rightarrow 0 and q_rai rightarrow 0, lambda_r is bounded. The limiting algorithm is as follows:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\nwidetildex_r = max left(overlinex_r min  min left(overlinex_r max  fracrho q_raiN_rairight)right)\nN_0 = max left(N_0 min  min left(N_0 max  N_raileft(fracpi rho_wwidetildex_rright)^frac13right)right)\nlambda_r = max left(lambda_min  min left(lambda_max  left(fracpi rho_w N_0rho q_rairight)^frac14right)right)\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\na_R 965  m cdot s^-1\nb_R 103  m cdot s^-1\nc_R 600  m^-1\noverlinex_r min 26 times 10^-10  m\noverlinex_r max 5 times 10^-6   m\nN_0 min 25 times 10^5   m^-4\nN_0 max 2 times 10^7   m^-4\nlambda_min 1 times 10^3   m^-1\nlambda_max 1 times 10^4   m^-1","category":"page"},{"location":"Microphysics2M/#Rain-evaporation","page":"2-moment precipitation microphysics","title":"Rain evaporation","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The parametrization of rain evaporation is obtained by considering the time scale of evaporation of individual raindrops:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  tau_eva = fracx_rfracdx_rdtbigg_eva = fracx_r2 pi G_lv(T p) S D_r(x_r) F_v(x_r)\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  G_lv(T p) = leftfracR_v Tp_lv(T) D_v + fracL_lvK_T T left(fracL_lvR_v T-1right)right^-1\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"with temperature T, thermal conductivity K_T, diffucivity of water vapor D_v, specific gas constant for water vapor R_v, latent heat of evaporation L_lv and liquid-vapor saturation pressure p_lv. The ventilation factor is given by F_v(x_r) = a_v + b_v N_Sc^13 N_Re(x_r)^12 where N_Sc = nu_air  D_v is the Schmidt number and N_Re(x_r) = fracv_r (x_r) D_r (x_r)nu_air is the Reynolds number with kinematic viscosity of air nu_air. The average evaporation rates are obtained from the following integral:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  fracpartial M_r^kpartial tbigg_eva = int_0^infty fracx^k f_r(x)tau_eva dx = 2 pi G_lv(T p) S int_0^infty D_r(x) F_v(x) f_r(x) x^k-1 dx\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where the superscript k indicates the moment number, k=0 for number-weighted and k=1 for mass-weighted average. Here in the computation of the evaporation rate, a power-law fall speed is assumed: v_r(x) cong alpha_r x^beta_r left(fracrho_0rhoright)^frac12. Evaluating the integral results in:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  fracpartial M_r^kpartial tbigg_eva = 2 pi G_lv(T p) S N_rai D_r(overlinex_r) overlineF_v k(overlinex_r) overlinex_r^k-1\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where overlineF_v k is an average ventilation factor for the k-th moment:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\noverlineF_v k(overlinex_r) = a_vent k + b_vent k N_Sc^13 N_Re(overlinex_r)^12\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"with","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginalign\n  a_vent k = a_v 6^23-k Gamma(3k-1)\n  b_vent k = b_v 6^12-beta_r2-k Gamma(3k-12+3beta_r2)\nendalign","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"note: Note\nFor k = 0 the integral for computing the mean evaporation rate does not converge. In this case it is reasonable to change the lower bound of the integral to x=x^*. The results remain the same except that the Gamma functions in the equations for a_vent 0 and b_vent 0, which are Gamma(-1) and Gamma(-12+3beta_r2), are replaced by the upper incomplete gamma function Gamma(-1 (6 x^*  overlinex_r)^13) and Gamma(-12+3beta_r2 (6 x^*  overlinex_r)^13), respectively. This issue and the suggested workaround are not mentioned in the paper.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The two-moment parametrization of evaporation suffers from the similar numerical instability issues as the sedimentation scheme. Thus, the same limiting algorithm as the sedimentation scheme is applied here to bound size distribution parameters. These limited parameters are then used to compute the mean raindrop mass by the following equation:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  overlinex_r = max left(overlinex_r min  min left(overlinex_r max  fracrho q_rai lambda_rN_0right)right)\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"This mean mass is used for computing the evaporation rate.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\na_v 078\nb_v 0308\nalpha_r 159  m cdot s^-1 cdot kg^-beta_r\nalpha_r 0266","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"note: Note\nIn our implementation we approximate the incomplete gamma function in order to get good performance on the GPU. Below we show the evaporation rates for the number concnetration and mass using both the exact and approximated gamma function","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"include(\"plots/RainEvapoartionSB2006.jl\")","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"(Image: )","category":"page"},{"location":"Microphysics2M/#Additional-2-moment-microphysics-options","page":"2-moment precipitation microphysics","title":"Additional 2-moment microphysics options","text":"","category":"section"},{"location":"Microphysics2M/#Terminal-Velocity","page":"2-moment precipitation microphysics","title":"Terminal Velocity","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"[4] provides a terminal velocity parameterisation based on an empirical fit to a high accuracy model. It consideres the deformation effects of large rain drops, as well as size-specific air density dependence. The fall speed of individual raindrops v(D) is parameterized as:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n    v(D) = (phi)^kappa Sigma_i = 13  a_i D^b_i e^-c_i*D\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where D is the diameter of the particle, a_i, b_i, and c_i are free parameers that account for deformation at larger sizes and air density dependance, phi is the aspect ratio (assumed to be 1 for spherical droplets), and kappa is 0 (corresponding to a spherical raindrop). a_i, b_i, and c_i are listed in the table below. The formula is applicable when D  01 mm, q refers to q = e^0115231 * rho_a, where  rho_a refers to air density. The units are: [v] = m/s, [D]=mm, [a_i] = mm^-b_i ms, [b_i] is dimensionless, [c_i] = 1/mm.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"i a_i b_i c_i\n1 $ 0.044612 \\; q$ 22955  -0038465  rho_a 0\n2 -0263166  q 22955  -0038465  rho_a 0184325\n3 47178  q  (rho_a)^-047335 11451  -0038465  rho_a 0184325","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"Assuming the same size distribution as in [13], the number- and mass-weighted mean terminal velocities are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  overlinev_k = fracint_0^infty v(D)  D^k  n(D)  dD\n             int_0^infty D^k  n(D)  dD\n             = (phi)^kappa Sigma_i fraca_i lambda^delta Gamma(b_i + delta)\n             (lambda + c_i)^b_i + delta  Gamma(delta)\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where Gamma is the gamma function, delta = k + 1, and lambda is the size distribution parameter. overlinev_k corresponds to the number-weighted mean terminal velocity when k = 0, and mass-weighted mean terminal velocity when k = 3.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"Below, we compare the individual terminal velocity formulas for [4] and [13]. We also compare bulk number weighted [ND] and mass weighted [MD] terminal velocities for both formulas integrated over the size distribution from [13]. We also show the mass weighted terminal velocity from the 1-moment scheme.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"include(\"plots/TerminalVelocityComparisons.jl\")","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"(Image: )","category":"page"},{"location":"Microphysics2M/#Accretion-and-Autoconversion","page":"2-moment precipitation microphysics","title":"Accretion and Autoconversion","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The other autoconversion and accretion rates in the Microphysics2M.jl module are implemented after Table 1 from [15]   and are based on the works of   [18],   [19],   [20] and   [21] respectively. From the above works:   (i) the [18] parameterisation is based   on a fit to drop spectrum resolving scheme and designed to work   for stratocumulus topped boundary layers,   (ii) the [19] parameterisation is based on a fit   to stochastic collection equation,   (iii) the [20] parameterisation is developed   for a deep convective case, and   (iv) the [21] parameterisation is derived to   include the effects of relative dispersion   of the cloud droplet size distribution on precipitation formation rates   and assumes a modified gamma distribution.","category":"page"},{"location":"Microphysics2M/#Autoconversion-2","page":"2-moment precipitation microphysics","title":"Autoconversion","text":"","category":"section"},{"location":"Microphysics2M/#Khairoutdinov-and-Kogan-(2000)","page":"2-moment precipitation microphysics","title":"Khairoutdinov and Kogan (2000)","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_acnv = A  q_liq^a  N_d^b  rho^c\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nN_d is the cloud droplet concentration,\nrho is the air density,","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nA 742 times 10^13\na 247\nb -179\nc -147","category":"page"},{"location":"Microphysics2M/#Beheng-(1994)","page":"2-moment precipitation microphysics","title":"Beheng (1994)","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_acnv = fracC  d^a  (q_liq rho)^b  N_d^crho\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nN_d is the cloud droplet number concentration,","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nC 3 times 10^34\na -17\nb 47\nc -33\nd 99 for N_d  200 cm^-3,  39 for N_d  200 cm ^-3","category":"page"},{"location":"Microphysics2M/#Tripoli-and-Cotton-(1980)","page":"2-moment precipitation microphysics","title":"Tripoli and Cotton (1980)","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_acnv =\n    D  q_liq^a  N_d^b  mathrmH(q_liq - q_liq_threshold)\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nq_liq_threshold is the cloud liquid to rain water threshold,\nN_d is the cloud droplet number concentration,\nmathrmH(x) is the Heaviside step function.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The cloud liquid to rain water autoconversion threshold is defined   assuming spherical liquid water drops of radius equal to 7 mu m:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  q_liq_threshold = frac43 pi rho_w N_d r_cm^3\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"rho_w is the liquid water density,","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nD 3268\na frac73\nb frac-13\nr_cm 7 times 10^-6 m","category":"page"},{"location":"Microphysics2M/#Liu-and-Daum-(2004)","page":"2-moment precipitation microphysics","title":"Liu and Daum (2004)","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_acnv =\n    fracE  (q_liq  rho)^3  mathrmH(R_6 - R_6C)N_d  rho\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nN_d is the cloud droplet number concentration,\nrho is the air density.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The parameterisation is formulated using mean volume radius   r_vol expressed in mu m which we compute as","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n    r_vol = left(fracrho q_liq43 pi  rho_w  N_dright)^13 10^6\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"rho_w is the liquid water density.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"Then the R_6 and R_6C are defined as","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"R_6 = beta_6  r_vol\nR_6C = fracR_C0(q_liq rho)^16 R_6^12\nbeta_6 = left( fracr_vol + 3r_vol right)^13\nE = E_0 beta_6^6","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nR_C0 75\nE_0 108 times 10^10","category":"page"},{"location":"Microphysics2M/#Auto-conversion-with-time-scale-depending-on-number-density","page":"2-moment precipitation microphysics","title":"Auto-conversion with time scale depending on number density","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_acnv =\n    fracq_liqtau_acnv 0 left(fracN_d100 cm^-3right)^alpha_acnv\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nN_d is the cloud droplet number concentration,\ntau_acnv 0 is the auto-conversion time scale at N_d = 100 cm^-3.","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"The default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\ntau_acnv 0 1000 s\nalpha_acnv 1","category":"page"},{"location":"Microphysics2M/#Accretion-2","page":"2-moment precipitation microphysics","title":"Accretion","text":"","category":"section"},{"location":"Microphysics2M/#Khairoutdinov-and-Kogan-(2000)-2","page":"2-moment precipitation microphysics","title":"Khairoutdinov and Kogan (2000)","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_accr = A  (q_liq q_rai)^a  rho^b\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nq_rai is the rain water specific humidity,\nrho    is the air density,","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nA 67\na 115\nb -13","category":"page"},{"location":"Microphysics2M/#Beheng-(1994)-2","page":"2-moment precipitation microphysics","title":"Beheng (1994)","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_accr = A  q_liq  q_rai  rho\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is the cloud liquid water specific humidity,\nq_rai is the rain specific humidity,\nrho    is the air density,","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nA 6","category":"page"},{"location":"Microphysics2M/#Tripoli-and-Cotton-(1980)-2","page":"2-moment precipitation microphysics","title":"Tripoli and Cotton (1980)","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"beginequation\n  left fracd  q_raidt right_accr = A  q_liq  q_rai\nendequation","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"where:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"q_liq is cloud liquid water specific humidity\nq_rai is rain specific humidity","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"and the default free parameter values are:","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"symbol default value\nA 47","category":"page"},{"location":"Microphysics2M/#Example-figures","page":"2-moment precipitation microphysics","title":"Example figures","text":"","category":"section"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"\nusing CairoMakie\nCairoMakie.activate!(type = \"svg\")\n\nimport CloudMicrophysics\nimport CLIMAParameters\n\nconst CM1 = CloudMicrophysics.Microphysics1M\nconst CM2 = CloudMicrophysics.Microphysics2M\nconst CMP = CloudMicrophysics.Parameters\n\nFT = Float64\n\nconst tps = CMP.ThermodynamicsParameters(FT)\nconst aps = CMP.AirProperties(FT)\n\nconst KK2000 = CMP.KK2000(FT)\nconst B1994 = CMP.B1994(FT)\nconst TC1980 = CMP.TC1980(FT)\nconst LD2004 = CMP.LD2004(FT)\nconst VarTSc = CMP.VarTimescaleAcnv(FT)\nconst SB2006 = CMP.SB2006(FT)\n\nconst ce = CMP.CollisionEff(FT)\n\nconst liquid = CMP.CloudLiquid(FT)\nconst rain = CMP.Rain(FT)\nconst blk1mvel = CMP.Blk1MVelType(FT)\n\ninclude(joinpath(pkgdir(CloudMicrophysics), \"docs\", \"src\", \"plots\", \"Wooddata.jl\"))\n\n# Example values\nq_liq_range = range(1e-8, stop=1e-3, length=1000)\nq_rai_range = range(1e-8, stop=1e-3, length=1000)\nN_d_range = range(1e7, stop=1e9, length=1000)\nq_liq = 5e-4\nq_rai = 5e-4\nÏ_air = 1.0 # kg m^-3\n\nq_liq_KK2000 = [CM2.conv_q_liq_to_q_rai(KK2000, q_liq, Ï_air, N_d = 1e8) for q_liq in q_liq_range]\nq_liq_B1994 = [CM2.conv_q_liq_to_q_rai(B1994, q_liq, Ï_air, N_d = 1e8) for q_liq in q_liq_range]\nq_liq_TC1980 = [CM2.conv_q_liq_to_q_rai(TC1980, q_liq, Ï_air, N_d = 1e8) for q_liq in q_liq_range]\nq_liq_LD2004 = [CM2.conv_q_liq_to_q_rai(LD2004, q_liq, Ï_air, N_d = 1e8) for q_liq in q_liq_range]\nq_liq_VarTimeScaleAcnv = [CM2.conv_q_liq_to_q_rai(VarTSc, q_liq, Ï_air, N_d = 1e8) for q_liq in q_liq_range]\nq_liq_SB2006 = [CM2.autoconversion(SB2006.acnv, q_liq, q_rai, Ï_air, 1e8).dq_rai_dt for q_liq in q_liq_range]\nq_liq_K1969 = [CM1.conv_q_liq_to_q_rai(rain.acnv1M, q_liq) for q_liq in q_liq_range]\n\nN_d_KK2000 = [CM2.conv_q_liq_to_q_rai(KK2000, 5e-4, Ï_air, N_d = N_d) for N_d in N_d_range]\nN_d_B1994 = [CM2.conv_q_liq_to_q_rai(B1994, 5e-4, Ï_air, N_d = N_d) for N_d in N_d_range]\nN_d_TC1980 = [CM2.conv_q_liq_to_q_rai(TC1980, 5e-4, Ï_air, N_d = N_d) for N_d in N_d_range]\nN_d_LD2004 = [CM2.conv_q_liq_to_q_rai(LD2004, 5e-4, Ï_air, N_d = N_d) for N_d in N_d_range]\nN_d_VarTimeScaleAcnv = [CM2.conv_q_liq_to_q_rai(VarTSc, 5e-4, Ï_air, N_d = N_d) for N_d in N_d_range]\nN_d_SB2006 = [CM2.autoconversion(SB2006.acnv, q_liq, q_rai, Ï_air, N_d).dq_rai_dt for N_d in N_d_range]\n\naccKK2000_q_liq = [CM2.accretion(KK2000, q_liq, q_rai, Ï_air) for q_liq in q_liq_range]\naccB1994_q_liq = [CM2.accretion(B1994, q_liq, q_rai, Ï_air) for q_liq in q_liq_range]\naccTC1980_q_liq = [CM2.accretion(TC1980, q_liq, q_rai) for q_liq in q_liq_range]\naccSB2006_q_liq = [CM2.accretion(SB2006, q_liq, q_rai, Ï_air, 1e8).dq_rai_dt for q_liq in q_liq_range]\naccK1969_q_liq = [CM1.accretion(liquid, rain, blk1mvel.rain, ce, q_liq, q_rai, Ï_air) for q_liq in q_liq_range]\n\naccKK2000_q_rai = [CM2.accretion(KK2000, q_liq, q_rai, Ï_air) for q_rai in q_rai_range]\naccB1994_q_rai = [CM2.accretion(B1994, q_liq, q_rai, Ï_air) for q_rai in q_rai_range]\naccTC1980_q_rai = [CM2.accretion(TC1980, q_liq, q_rai) for q_rai in q_rai_range]\naccSB2006_q_rai = [CM2.accretion(SB2006, q_liq, q_rai, Ï_air, 1e8).dq_rai_dt for q_rai in q_rai_range]\naccK1969_q_rai = [CM1.accretion(liquid, rain, blk1mvel.rain, ce, q_liq, q_rai, Ï_air) for q_rai in q_rai_range]\n\nfig = Figure()\n\nax1 = Axis(fig[1, 1]; yscale = log10)\nax2 = Axis(fig[1, 2]; xscale = log10, yscale = log10)\nax3 = Axis(fig[2, 1]; yscale = log10)\nax4 = Axis(fig[2, 2]; yscale = log10)\n\nylims!(ax1, [1e-13, 1e-5])\nylims!(ax2, [1e-13, 1e-5])\nylims!(ax3, [1e-7, 5e-6])\nylims!(ax4, [1e-7, 5e-6])\n\nl1 = lines!(ax1, q_liq_range * 1e3, q_liq_KK2000,    color = :red)\nl2 = lines!(ax1, q_liq_range * 1e3, q_liq_B1994,     color = :green)\nl3 = lines!(ax1, q_liq_range * 1e3, q_liq_TC1980,    color = :blue)\nl4 = lines!(ax1, q_liq_range * 1e3, q_liq_LD2004,    color = :purple)\nl5 = lines!(ax1, q_liq_range * 1e3, q_liq_K1969,     color = :black)\nl6 = lines!(ax1, KK2000_x_q_liq,    KK2000_y_q_liq,  color = :red, linestyle = :dash)\nl7 = lines!(ax1, B1994_x_q_liq,     B1994_y_q_liq,   color = :green, linestyle = :dash)\nl8 = lines!(ax1, TC1980_x_q_liq,    TC1980_y_q_liq,  color = :blue, linestyle = :dash)\nl9 = lines!(ax1, LD2004_x_q_liq,    LD2004_y_q_liq,  color = :purple, linestyle = :dash)\n\nl10 = lines!(ax2, N_d_range * 1e-6, N_d_KK2000, color = :red)\nl11 = lines!(ax2, N_d_range * 1e-6, N_d_B1994, color = :green)\nl12 = lines!(ax2, N_d_range * 1e-6, N_d_TC1980, color = :blue)\nl13 = lines!(ax2, N_d_range * 1e-6, N_d_LD2004, color = :purple)\nl14 = lines!(ax2, KK2000_x_N_d, KK2000_y_N_d, color = :red, linestyle = :dash)\nl15 = lines!(ax2, B1994_x_N_d, B1994_y_N_d, color = :green, linestyle = :dash)\nl16 = lines!(ax2, TC1980_x_N_d, TC1980_y_N_d, color = :blue, linestyle = :dash)\nl17 = lines!(ax2, LD2004_x_N_d, LD2004_y_N_d, color = :purple, linestyle = :dash)\n\nl18 = lines!(ax3, q_liq_range * 1e3, accKK2000_q_liq, color = :red)\nl19 = lines!(ax3, q_liq_range * 1e3, accB1994_q_liq, color = :green)\nl20 = lines!(ax3, q_liq_range * 1e3, accTC1980_q_liq, color = :blue)\nl21 = lines!(ax3, q_liq_range * 1e3, accK1969_q_liq, color = :black)\n\nl22 = lines!(ax4, q_rai_range * 1e3, accKK2000_q_rai, color = :red)\nl23 = lines!(ax4, q_rai_range * 1e3, accB1994_q_rai, color = :green)\nl24 = lines!(ax4, q_rai_range * 1e3, accTC1980_q_rai, color = :blue)\nl25 = lines!(ax4, q_rai_range * 1e3, accK1969_q_rai, color = :black)\n\nl26 = lines!(ax1, q_liq_range * 1e3, q_liq_SB2006,    color = :cyan)\nl27 = lines!(ax2, N_d_range * 1e-6, N_d_SB2006,    color = :cyan)\nl28 = lines!(ax3, q_liq_range * 1e3, accSB2006_q_liq,    color = :cyan)\nl28 = lines!(ax4, q_rai_range * 1e3, accSB2006_q_rai,    color = :cyan)\n\nl29 = lines!(ax1, q_liq_range * 1e3, q_liq_VarTimeScaleAcnv,    color = :orange)\nl30 = lines!(ax2, N_d_range * 1e-6, N_d_VarTimeScaleAcnv,    color = :orange)\n\nax1.xlabel = \"q_liq [g/kg]\"\nax1.ylabel = \"autoconversion rate [1/s]\"\nax2.xlabel = \"N_d [1/cm3]\"\nax2.ylabel = \"autoconversion rate [1/s]\"\nax3.xlabel = \"q_liq [g/kg] (q_rai = 0.5 g/kg)\"\nax3.ylabel = \"accretion rate [1/s]\"\nax4.xlabel = \"q_rai [g/kg] (q_liq = 0.5 g/kg)\"\nax4.ylabel = \"accretion rate [1/s]\"\n\nLegend(\n    fig[1, 3],\n    [l1, l2, l3, l4, l26, l5, l6, l7, l8, l9, l29],\n    [\"KK2000\", \"B1994\", \"TC1980\", \"LD2004\", \"SB2006\", \"K1969\", \"Wood_KK2000\", \"Wood_B1994\", \"Wood_TC1980\", \"Wood_LD2004\", \"SA2023\"]\n)\nsave(\"Autoconversion_accretion.svg\", fig)","category":"page"},{"location":"Microphysics2M/","page":"2-moment precipitation microphysics","title":"2-moment precipitation microphysics","text":"(Image: )","category":"page"},{"location":"PrecipitationSusceptibility/#Precipitation-Susceptibility","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"","category":"section"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"The PrecipitationSusceptibility.jl module contains functions for determining the precipitation susceptibility rates due to various processes for 2-moment microphysics schemes, as described in [48].","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"The precipitation susceptibility describes the rate of change of precipitation production due to some moment of the particle size distribution:","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"For some partial moment X, such as q_liq, q_rai, N_liq, or N_rai and some process rate of precipitation production r, such as autoconversion, accretion, etc, this is defined as:","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"fracpartial ln rpartial ln X","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"The total precipitation susceptibility, then, is","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"fracpartial ln PPpartial ln X = sum_r in R\n    fracrPP fracpartial ln rpartial ln X","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"Where R is the set of all process rates that contribute to precipitation production.","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"Example reproducing Fig. 2 From [48]:","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"include(\"plots/PrecipitationSusceptibilityPlots.jl\")","category":"page"},{"location":"PrecipitationSusceptibility/","page":"Precipitation Susceptibility","title":"Precipitation Susceptibility","text":"(Image: )","category":"page"},{"location":"ThresholdsTransition/#Smooth-transition-at-thresholds","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"","category":"section"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"To avoid abrupt change of values at thresholds we can use the logistic function to make the transition smooth. The logistic function is defined as","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"f(t k) = frac11+e^-kt","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"where","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"t is the independent parameter,\nand k is the growth rate of the curve characterizing the steepness of the transition.","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"The value of the logistic function changes from zero at t rightarrow -infty to one at t rightarrow infty with the majority of the change happening around t = 0. In our microphysics applications, the independent parameter (typically specific humidities) takes only non-negative values, and when this parameter is zero the function should return zero. Thus, we use the change of variable t = xx_0 - x_0x, where x_0 is the threshold value of x. Therefore, the logistic function for smooth transitioning from f(x) = 0, for x  x_0, to f(x)=1, for x  x_0, is defined as","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"f(x x_0 k) = frac11+e^-k(xx_0 - x_0x)","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"Note that when both x and x_0 are zero the value given by the above equation is undefined. In this case we return a zero value instead.","category":"page"},{"location":"ThresholdsTransition/#Smooth-transition-of-derivative-at-thresholds","page":"Smooth transition at thresholds","title":"Smooth transition of derivative at thresholds","text":"","category":"section"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"When the function itself is continuous but its derivative changes abruptly at a threshold we can use the indefinite integral of the logistic function for smooth transitioning. In this case, the following function can be used","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"f(x x_0 k) = fracx_0k lnleft(1+e^k(xx_0 - 1 + a_trnslt) right) - a_trnslt x_0","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"where a is a fixed value that is defined to enforce zero at x=0:","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"a_trnslt = -frac1klnleft(1 - e^-kright)","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"The curve defined by the above equation smoothly transition from f(x) = 0, for x  x_0, to f(x)=x-x_0, for x  x_0. Note that when both x and x_0 are zero the value of the function is undefined. In this case we return a zero value instead.","category":"page"},{"location":"ThresholdsTransition/#Example-figures","page":"Smooth transition at thresholds","title":"Example figures","text":"","category":"section"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"import Plots\nimport CloudMicrophysics\nimport CLIMAParameters\n\nconst PL = Plots\nconst CM1 = CloudMicrophysics.Microphysics1M\nconst CM2 = CloudMicrophysics.Microphysics2M\nconst CP = CLIMAParameters\nconst CMP = CloudMicrophysics.Parameters\n\nFT = Float64\n\nrain = []\nB1994 = []\nTC1980 = []\nLD2004 = []\n\nk_thrshld_stpnss_values = [5.0, 2.0, 12.0]\nfor i in 1:3\n    override_file = joinpath(\"override_dict.toml\")\n    open(override_file, \"w\") do io\n        println(io, \"[threshold_smooth_transition_steepness]\")\n        println(io, \"alias = \\\"k_thrshld_stpnss\\\"\")\n        println(io, \"value = \" * string(k_thrshld_stpnss_values[i]))\n        println(io, \"type = \\\"float\\\"\")\n    end\n    toml_dict = CP.create_toml_dict(FT; override_file, dict_type=\"alias\")\n    isfile(override_file) && rm(override_file; force=true)\n\n    push!(rain, CMP.Rain(FT, toml_dict))\n    push!(B1994, CMP.B1994(FT, toml_dict))\n    push!(TC1980, CMP.TC1980(FT, toml_dict))\n    push!(LD2004, CMP.LD2004(FT, toml_dict))\nend\n\n# example values\nq_liq_range  = range(1e-8, stop=1.5e-3, length=1000)\nN_d_range = range(1e7, stop=1e9, length=1000)\nÏ_air = 1.0 # kg m^-3\n\nq_liq_K1969 = [CM1.conv_q_liq_to_q_rai(rain[1].acnv1M, q_liq) for q_liq in q_liq_range]\nq_liq_K1969_s = [CM1.conv_q_liq_to_q_rai(rain[1].acnv1M, q_liq, smooth_transition = true) for q_liq in q_liq_range]\n\nq_liq_TC1980 = [CM2.conv_q_liq_to_q_rai(TC1980[2], q_liq, Ï_air) for q_liq in q_liq_range]\nq_liq_TC1980_s = [CM2.conv_q_liq_to_q_rai(TC1980[2], q_liq, Ï_air, smooth_transition = true) for q_liq in q_liq_range]\nq_liq_LD2004 = [CM2.conv_q_liq_to_q_rai(LD2004[2], q_liq, Ï_air) for q_liq in q_liq_range]\nq_liq_LD2004_s = [CM2.conv_q_liq_to_q_rai(LD2004[2], q_liq, Ï_air, smooth_transition = true) for q_liq in q_liq_range]\n\nN_d_B1994 = [CM2.conv_q_liq_to_q_rai(B1994[3], 5e-4, Ï_air, N_d = N_d) for N_d in N_d_range]\nN_d_B1994_s = [CM2.conv_q_liq_to_q_rai(B1994[3], 5e-4, Ï_air, N_d = N_d, smooth_transition = true) for N_d in N_d_range]\n\n\nPL.plot(q_liq_range * 1e3, q_liq_K1969,\n    linewidth=2,\n    xlabel=\"q_liq [g/kg]\",\n    ylabel=\"autoconversion rate [1/s]\",\n    label=\"K1969 without smoothing\"\n)\nPL.plot!(q_liq_range * 1e3, q_liq_K1969_s, linewidth=2, label=\"K1969 with smoothing\")\nPL.savefig(\"q_liq_K1969.svg\") # hide\n\nPL.plot(q_liq_range * 1e3, q_liq_TC1980,\n    linewidth=2,\n    xlabel=\"q_liq [g/kg]\",\n    ylabel=\"autoconversion rate [1/s]\",\n    label=\"TC1980 without smoothing\",\n    yaxis=:log,\n    ylim=(1e-10, 1e-5)\n)\nPL.plot!(q_liq_range * 1e3, q_liq_TC1980_s, linewidth=2, label=\"TC1980 with smoothing\")\nPL.plot!(q_liq_range * 1e3, q_liq_LD2004, linewidth=2, label=\"LD2004 without smoothing\")\nPL.plot!(q_liq_range * 1e3, q_liq_LD2004_s, linewidth=2, label=\"LD2004 with smoothing\")\nPL.savefig(\"q_liq_TC1980_LD2004.svg\") # hide\n\nPL.plot(N_d_range * 1e-6, N_d_B1994,\n    linewidth=2,\n    xlabel=\"N_d [1/cm3]\",\n    ylabel=\"autoconversion rate [1/s]\",\n    label=\"B1994 without smoothing\",\n    xaxis=:log,\n    yaxis=:log,\n    ylim=(1e-13, 1e-5)\n)\nPL.plot!(N_d_range * 1e-6, N_d_B1994_s, linewidth=2, label=\"B1994 with smoothing\")\nPL.savefig(\"N_d_B1994.svg\") # hide","category":"page"},{"location":"ThresholdsTransition/","page":"Smooth transition at thresholds","title":"Smooth transition at thresholds","text":"(Image: ) (Image: ) (Image: )","category":"page"},{"location":"API/","page":"API","title":"API","text":"CurrentModule = CloudMicrophysics","category":"page"},{"location":"API/#.","page":"API","title":".","text":"","category":"section"},{"location":"API/#Non-equilibrium-cloud-formation","page":"API","title":"Non-equilibrium cloud formation","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"MicrophysicsNonEq\nMicrophysicsNonEq.Ï_relax\nMicrophysicsNonEq.conv_q_vap_to_q_liq_ice","category":"page"},{"location":"API/#CloudMicrophysics.MicrophysicsNonEq","page":"API","title":"CloudMicrophysics.MicrophysicsNonEq","text":"Non-equilibrium bulk microphysics scheme, which includes:\n\ncondensation and evaporation of cloud liquid water and deposition and sublimation of cloud ice (relaxation to equilibrium)\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.MicrophysicsNonEq.Ï_relax","page":"API","title":"CloudMicrophysics.MicrophysicsNonEq.Ï_relax","text":"Ï_relax(liquid)\nÏ_relax(ice)\n\nliquid or ice - a type for cloud liquid water or ice\n\nReturns the relaxation timescale for condensation and evaporation of cloud liquid water or the relaxation timescale for sublimation and deposition of cloud ice.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.MicrophysicsNonEq.conv_q_vap_to_q_liq_ice","page":"API","title":"CloudMicrophysics.MicrophysicsNonEq.conv_q_vap_to_q_liq_ice","text":"conv_q_vap_to_q_liq_ice(liquid, q_sat, q)\nconv_q_vap_to_q_liq_ice(ice, q_sat, q)\n\nliquid or ice - a type for cloud water or ice\nq_sat - PhasePartition at equilibrium\nq - current PhasePartition\n\nReturns the cloud water tendency due to condensation and evaporation or cloud ice tendency due to sublimation and vapor deposition. The tendency is obtained assuming a relaxation to equilibrium with a constant timescale.\n\n\n\n\n\n","category":"function"},{"location":"API/#moment-precipitation-microphysics","page":"API","title":"0-moment precipitation microphysics","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Microphysics0M\nMicrophysics0M.remove_precipitation","category":"page"},{"location":"API/#CloudMicrophysics.Microphysics0M","page":"API","title":"CloudMicrophysics.Microphysics0M","text":"Microphysics0M\n\nZero-moment bulk microphysics scheme that instantly removes moisture above certain threshold. This is equivalent to instanteneous conversion of cloud condensate into precipitation and precipitation fallout with infinite terminal velocity.\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.Microphysics0M.remove_precipitation","page":"API","title":"CloudMicrophysics.Microphysics0M.remove_precipitation","text":"remove_precipitation(params_0M, q; q_vap_sat)\n\nparams_0M - a struct with 0-moment parameters\nq - current PhasePartition\nq_vap_sat - water vapor specific humidity at saturation\n\nReturns the q_tot tendency due to the removal of precipitation. The tendency is obtained assuming a relaxation with a constant timescale to a state with precipitable water removed. The threshold for when to remove q_tot is defined either by the condensate specific humidity or supersaturation. The thresholds and the relaxation timescale are defined in CLIMAParameters.\n\n\n\n\n\n","category":"function"},{"location":"API/#moment-precipitation-microphysics-2","page":"API","title":"1-moment precipitation microphysics","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Microphysics1M\nMicrophysics1M.get_v0\nMicrophysics1M.get_n0\nMicrophysics1M.lambda\nMicrophysics1M.terminal_velocity\nMicrophysics1M.conv_q_liq_to_q_rai\nMicrophysics1M.conv_q_ice_to_q_sno_no_supersat\nMicrophysics1M.conv_q_ice_to_q_sno\nMicrophysics1M.accretion\nMicrophysics1M.accretion_rain_sink\nMicrophysics1M.accretion_snow_rain\nMicrophysics1M.evaporation_sublimation\nMicrophysics1M.snow_melt","category":"page"},{"location":"API/#CloudMicrophysics.Microphysics1M","page":"API","title":"CloudMicrophysics.Microphysics1M","text":"One-moment bulk microphysics scheme, which includes:\n\nterminal velocity of precipitation\nautoconversion of cloud liquid water into rain and of cloud ice into snow\naccretion due to collisions between categories of condensed species\nevaporation and sublimation of hydrometeors\nmelting of snow into rain\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.Microphysics1M.get_v0","page":"API","title":"CloudMicrophysics.Microphysics1M.get_v0","text":"get_v0(v, Ï)\n\nv - a struct with bulk 1-moment terminal velocity parameters\nÏ - air density (only for Rain)\n\nReturns the proportionality coefficient in terminal velocity(r/r0).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.get_n0","page":"API","title":"CloudMicrophysics.Microphysics1M.get_n0","text":"get_n0(pdf, q_sno, Ï)\n\npdf -  a struct with parameters for snow, ice, and rain size distribution\nq_sno -  snow specific humidity (only for Snow)\nÏ - air density (only for Snow)\n\nReturns the intercept parameter of the assumed Marshall-Palmer distribution\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.lambda","page":"API","title":"CloudMicrophysics.Microphysics1M.lambda","text":"lambda(pdf, mass, q, Ï)\n\npdf, mass - structs with particle size distribution and mass parameters\nq - specific humidity of rain, ice or snow\nÏ - air density\n\nReturns the rate parameter of the assumed size distribution of particles (rain drops, ice crystals, snow crystals).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.terminal_velocity","page":"API","title":"CloudMicrophysics.Microphysics1M.terminal_velocity","text":"terminal_velocity(precip, vel, Ï, q)\n\nprecip - a struct with precipitation type (rain or snow)\nvel - a struct with terminal velocity parameters\nÏ - air density\nq - rain or snow specific humidity\n\nReturns the mass weighted average terminal velocity assuming a Marshall-Palmer (1948) distribution of particles. Fall velocity of individual rain drops is parameterized:\n\nassuming an empirical power-law relations for velocity == Blk1MVelType\nfollowing Chen et. al 2022, DOI: 10.1016/j.atmosres.2022.106171, for velocity == Chen2022VelType\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.conv_q_liq_to_q_rai","page":"API","title":"CloudMicrophysics.Microphysics1M.conv_q_liq_to_q_rai","text":"conv_q_liq_to_q_rai(acnv, q_liq, smooth_transition)\n\nacnv - 1M autoconversion parameters\nq_liq - liquid water specific humidity\nsmooth_transition - a flag to switch on smoothing\n\nReturns the q_rai tendency due to collisions between cloud droplets (autoconversion), parametrized following Kessler (1995).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.conv_q_ice_to_q_sno_no_supersat","page":"API","title":"CloudMicrophysics.Microphysics1M.conv_q_ice_to_q_sno_no_supersat","text":"conv_q_ice_to_q_sno_no_supersat(acnv, q_ice, smooth_transition)\n\nacnv - 1M autoconversion parameters\nq_ice -  cloud ice specific humidity\nsmooth_transition - a flag to switch on smoothing\n\nReturns the q_sno tendency due to autoconversion from ice. This is a simplified version of a snow autoconversion rate that can be used in simulations where there is no supersaturation (for example in TC.jl when using saturation adjustment).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.conv_q_ice_to_q_sno","page":"API","title":"CloudMicrophysics.Microphysics1M.conv_q_ice_to_q_sno","text":"conv_q_ice_to_q_sno(ice, aps, tps, q, Ï, T)\n\nice - a struct with ice parameters\naps - a struct with air properties\ntps - a struct with thermodynamics parameters\nq - phase partition\nÏ - air density\nT - air temperature\n\nReturns the q_sno tendency due to autoconversion from ice. Parameterized following Harrington et al. (1996) and Kaul et al. (2015).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.accretion","page":"API","title":"CloudMicrophysics.Microphysics1M.accretion","text":"accretion(cloud, precip, vel, ce, q_clo, q_pre, Ï)\n\ncloud - type for cloud water or cloud ice\nprecip - type for rain or snow\nvel - a struct with terminal velocity parameters\nce - collision efficiency parameters\nq_clo - cloud water or cloud ice specific humidity\nq_pre - rain water or snow specific humidity\nÏ - rain water or snow specific humidity\n\nReturns the source of precipitating water (rain or snow) due to collisions with cloud water (liquid or ice).\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.accretion_rain_sink","page":"API","title":"CloudMicrophysics.Microphysics1M.accretion_rain_sink","text":"accretion_rain_sink(rain, ice, vel, ce, q_ice, q_rai, Ï)\n\nrain - rain type parameters\nice - ice type parameters\nvel - terminal velocity parameters for rain\nce - collision efficiency parameters\nq_ice - cloud ice specific humidity\nq_rai - rain water specific humidity\nÏ - air density\n\nReturns the sink of rain water (partial source of snow) due to collisions with cloud ice.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.accretion_snow_rain","page":"API","title":"CloudMicrophysics.Microphysics1M.accretion_snow_rain","text":"accretion_snow_rain(ce, type_i, type_j, blk1m_type_i, blk1m_type_j, q_i, q_j, Ï)\n\nce - collision efficiency parameters\ni - snow for temperatures below freezing       or rain for temperatures above freezing\nj - rain for temperatures below freezing       or snow for temperatures above freezing\ntype_i, type_j - a type for snow or rain\nblk1mveltype_ti, blk1mveltype_tj - 1M terminal velocity parameters\nq_ - specific humidity of snow or rain\nÏ - air density\n\nReturns the accretion rate between rain and snow. Collisions between rain and snow result in snow at temperatures below freezing and in rain at temperatures above freezing.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.evaporation_sublimation","page":"API","title":"CloudMicrophysics.Microphysics1M.evaporation_sublimation","text":"evaporation_sublimation(rain, vel, aps, tps, q, q_rai, Ï, T)\nevaporation_sublimation(snow, vel, aps, tps, q, q_sno, Ï, T)\n\nrain - a struct with rain parameters\nsnow - a struct with snow parameters\nvel - a struct with terminal velocity parameters\naps - a struct with air parameters\ntps - a struct with thermodynamics parameters\nq - phase partition\nq_rai - rain specific humidity\nq_sno - snow specific humidity\nÏ - air density\nT - air temperature\n\nReturns the tendency due to rain evaporation or snow sublimation.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics1M.snow_melt","page":"API","title":"CloudMicrophysics.Microphysics1M.snow_melt","text":"snow_melt(snow, vel, aps, tps, q_sno, Ï, T)\n\nsnow - snow parameters\nvel - terminal velocity parameters\naps - air properties\ntps - thermodynamics parameters\nq_sno - snow water specific humidity\nÏ - air density\nT - air temperature\n\nReturns the tendency due to snow melt.\n\n\n\n\n\n","category":"function"},{"location":"API/#moment-precipitation-microphysics-3","page":"API","title":"2-moment precipitation microphysics","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Microphysics2M\nMicrophysics2M.LiqRaiRates\nMicrophysics2M.raindrops_limited_vars\nMicrophysics2M.autoconversion\nMicrophysics2M.accretion\nMicrophysics2M.liquid_self_collection\nMicrophysics2M.autoconversion_and_liquid_self_collection\nMicrophysics2M.rain_self_collection\nMicrophysics2M.rain_breakup\nMicrophysics2M.rain_self_collection_and_breakup\nMicrophysics2M.rain_terminal_velocity\nMicrophysics2M.rain_evaporation\nMicrophysics2M.conv_q_liq_to_q_rai","category":"page"},{"location":"API/#CloudMicrophysics.Microphysics2M","page":"API","title":"CloudMicrophysics.Microphysics2M","text":"Double-moment bulk microphysics parametrizations including:\n\nautoconversion, accretion, self-collection, breakup, mean terminal velocity of raindrops and rain  evaporation rates from Seifert and Beheng 2006,\nadditional double-moment bulk microphysics autoconversion and accretion rates from: Khairoutdinov and Kogan 2000, Beheng 1994, Tripoli and Cotton 1980, and Liu and Daum 2004.\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.Microphysics2M.LiqRaiRates","page":"API","title":"CloudMicrophysics.Microphysics2M.LiqRaiRates","text":"A structure containing the rates of change of the specific humidities and number densities of liquid and rain water.\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Microphysics2M.raindrops_limited_vars","page":"API","title":"CloudMicrophysics.Microphysics2M.raindrops_limited_vars","text":"raindrops_limited_vars(pdf, q_rai, Ï, N_rai)\n\npdf - a struct with SB2006 size distribution parameters\nq_rai - rain water specific humidity\nÏ - air density\nN_rai raindrops number density\n\nReturns a named tupple containing the mean mass of raindrops, xr, and the rate parameter of the assumed size distribution of raindrops (based on drops diameter), Î»r, limited within prescribed ranges\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.autoconversion","page":"API","title":"CloudMicrophysics.Microphysics2M.autoconversion","text":"autoconversion(scheme, q_liq, q_rai, Ï, N_liq)\n\nscheme - type for 2-moment rain autoconversion parameterization\nq_liq - cloud water specific humidity\nq_rai - rain water specific humidity\nÏ - air density\nN_liq - cloud droplet number density\n\nReturns a LiqRaiRates object containing q_liq, N_liq, q_rai, N_rai tendencies due to collisions between cloud droplets (autoconversion) for scheme == SB2006Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.accretion","page":"API","title":"CloudMicrophysics.Microphysics2M.accretion","text":"accretion(scheme, q_liq, q_rai, Ï, N_liq)\n\nscheme - type for 2-moment accretion parameterization\nq_liq - cloud water specific humidity\nq_rai - rain water specific humidity\nÏ - air density\nN_liq - cloud droplet number density\n\nReturns a LiqRaiRates object containing q_liq, N_liq, q_rai, N_rai tendencies due to collisions between raindrops and cloud droplets (accretion) for scheme == SB2006Type\n\n\n\n\n\naccretion(accretion_scheme, q_liq, q_rai, Ï)\n\naccretion_scheme - type for 2-moment rain accretion parameterization\nq_liq - cloud water specific humidity\nq_rai - rain water specific humidity\nÏ - air density (for KK2000Type and Beheng1994Type)\n\nReturns the accretion rate of rain, parametrized following\n\nKhairoutdinov and Kogan (2000) for scheme == KK2000Type\nBeheng (1994) for scheme == B1994Type\nTripoli and Cotton (1980) for scheme == TC1980Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.liquid_self_collection","page":"API","title":"CloudMicrophysics.Microphysics2M.liquid_self_collection","text":"liquid_self_collection(scheme, q_liq, Ï, dN_liq_dt_au)\n\nscheme - type for 2-moment liquid self-collection parameterization\nq_liq - cloud water specific humidity\nÏ - air density\ndN_liq_dt_au - rate of change of cloud droplets number density due to autoconversion\n\nReturns the cloud droplets number density tendency due to collisions of cloud droplets that produce larger cloud droplets (self-collection) for scheme == SB2006Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.autoconversion_and_liquid_self_collection","page":"API","title":"CloudMicrophysics.Microphysics2M.autoconversion_and_liquid_self_collection","text":"autoconversion_and_liquid_self_collection(scheme, q_liq, q_rai, Ï, N_liq)\n\nscheme - type for 2-moment rain autoconversion parameterization\nq_liq - cloud water specific humidity\nq_rai - rain water specific humidity\nÏ - air density\nN_liq - cloud droplet number density\n\nReturns a named tupple containing a LiqRaiRates object for the autoconversion rate and the liquid self-collection rate for scheme == SB2006Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.rain_self_collection","page":"API","title":"CloudMicrophysics.Microphysics2M.rain_self_collection","text":"rain_self_collection(scheme, q_rai, Ï, N_rai)\n\nscheme - type for 2-moment rain self-collection parameterization\nq_rai - rain water specific humidity\nÏ - air density\nN_rai - raindrops number density\n\nReturns the raindrops number density tendency due to collisions of raindrops that produce larger raindrops (self-collection) for scheme == SB2006Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.rain_breakup","page":"API","title":"CloudMicrophysics.Microphysics2M.rain_breakup","text":"rain_breakup(scheme, q_rai, Ï, dN_rai_dt_sc)\n\nscheme - type for 2-moment liquid self-collection parameterization\nq_rai - rain water specific humidity\nÏ - air density\nN_rai - raindrops number density\ndN_rai_dt_sc - rate of change of raindrops number density due to self-collection\n\nReturns the raindrops number density tendency due to breakup of raindrops that produce smaller raindrops for scheme == SB2006Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.rain_self_collection_and_breakup","page":"API","title":"CloudMicrophysics.Microphysics2M.rain_self_collection_and_breakup","text":"rain_self_collection_and_breakup(SB2006, q_rai, Ï, N_rai)\n\nSB2006 - a struct with SB2006 parameters for size distribution  self collection and breakup\nq_rai - rain water specific humidity\nÏ - air density\nN_rai - raindrops number density\n\nReturns a named tupple containing the raindrops self-collection and breakup rates for scheme == SB2006Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.rain_terminal_velocity","page":"API","title":"CloudMicrophysics.Microphysics2M.rain_terminal_velocity","text":"rain_terminal_velocity(SB2006, vel, q_rai, Ï, N_rai)\n\nSB2006 - a struct with SB2006 rain size distribution parameters\nvel - a struct with terminal velocity parameters\nq_rai - rain water specific humidity [kg/kg]\nÏ - air density [kg/m^3]\nN_rai - raindrops number density [1/m^3]\n\nReturns a tuple containing the number and mass weigthed mean fall velocities of raindrops in [m/s]. Assuming an exponential size distribution from Seifert and Beheng 2006 for scheme == SB2006Type Fall velocity of individual rain drops is parameterized:\n\nassuming an empirical relation similar to Rogers (1993) for velo_scheme == SB2006VelType\nfollowing Chen et. al 2022, DOI: 10.1016/j.atmosres.2022.106171 for velo_scheme == Chen2022Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.rain_evaporation","page":"API","title":"CloudMicrophysics.Microphysics2M.rain_evaporation","text":"rain_evaporation(evap, aps, tps, q, q_rai, Ï, N_rai, T)\n\nevap - evaporation parameterization scheme\naps - air properties\ntps - thermodynamics parameters\nq - phase partition\nq_rai - rain specific humidity\nÏ - air density\nN_rai - raindrops number density\nT - air temperature\n\nReturns a tupple containing the tendency of raindrops number density and rain water specific humidity due to rain rain_evaporation, assuming a power law velocity relation for fall velocity of individual drops and an exponential size distribution, for scheme == SB2006Type\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Microphysics2M.conv_q_liq_to_q_rai","page":"API","title":"CloudMicrophysics.Microphysics2M.conv_q_liq_to_q_rai","text":"conv_q_liq_to_q_rai(acnv, q_liq, Ï; N_d, smooth_transition)\n\nacnv - 2-moment rain autoconversion parameterization\nq_liq - cloud water specific humidity\nÏ - air density\nN_d - prescribed cloud droplet number concentration\n\nReturns the q_rai tendency due to collisions between cloud droplets (autoconversion), parametrized following:\n\nKhairoutdinov and Kogan (2000) for scheme == KK2000Type\nBeheng (1994) for scheme == B1994Type\nTripoli and Cotton (1980) for scheme == TC1980Type\nLiu and Daum (2004) for scheme ==LD2004Type\n\nN_d is an optional argument with the default value of 100 cm-3\n\nThe Beheng1994Type, TC1980Type and LD2004Type of schemes additionally accept smooth_transition flag that smoothes their thershold behaviour if set to true. The default value is false.\n\n\n\n\n\n","category":"function"},{"location":"API/#P3-scheme","page":"API","title":"P3 scheme","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"P3Scheme\nP3Scheme.thresholds","category":"page"},{"location":"API/#CloudMicrophysics.P3Scheme","page":"API","title":"CloudMicrophysics.P3Scheme","text":"Predicted particle properties scheme (P3) for ice, which includes:\n\nthreshold solver\nm(D) regime\nTODO\n\nImplementation of Morrison and Milbrandt 2015 doi: 10.1175/JAS-D-14-0065.1\n\nNote: Particle size is defined as its maximum length (i.e. max dimesion).\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.P3Scheme.thresholds","page":"API","title":"CloudMicrophysics.P3Scheme.thresholds","text":"thresholds(p3, Ï_r, F_r)\n\np3 - a struct with P3 scheme parameters\nÏr - rime density (qrim/B_rim) [kg/m^3]\nFr - rime mass fraction (qrim/q_i) [-]\n\nSolves the nonlinear system consisting of Dcr, Dgr, Ïg, Ïd for a given rime density and rime mass fraction. Returns a named tuple containing:\n\nD_cr - is the threshold size separating partially rimed ice and graupel [m],\nD_gr - is the threshold size separating graupel and dense nonspherical ice [m],\nÏ_g - is the effective density of a spherical graupel particle [kg/m3],\nÏ_d - is the density of the unrimed portion of the particle [kg/m3],\n\n\n\n\n\n","category":"function"},{"location":"API/#Aerosol-model","page":"API","title":"Aerosol model","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"AerosolModel\nAerosolModel.Mode_B\nAerosolModel.Mode_Îº\nAerosolModel.AerosolDistribution","category":"page"},{"location":"API/#CloudMicrophysics.AerosolModel","page":"API","title":"CloudMicrophysics.AerosolModel","text":"A container for information on aerosol size distribution\nand chemical properties.\n\nThe size distribution is a sum of lognormal internally mixed modes.\nThe chemical composition can be expressed using kappa parameter\nor hygroscopicity parameter B.\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.AerosolModel.Mode_B","page":"API","title":"CloudMicrophysics.AerosolModel.Mode_B","text":"Mode_B\n\nRepresents the sizes and chemical composition of aerosol particles in one size distribution mode. The mode is assumed to be made up of internally mixed components and follow a lognormal size distribution. The chemical composition of aerosol particles in this mode is described using the parameters from Abdul-Razzak and Ghan 2000.\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.AerosolModel.Mode_Îº","page":"API","title":"CloudMicrophysics.AerosolModel.Mode_Îº","text":"Mode_Îº\n\nRepresents the sizes and chemical composition of aerosol particles in one size distribution mode. The mode is assumed to be made up of internally mixed components and follow a lognormal size distribution. The chemical composition of aerosol particles in this mode is described using the parameters from Petters and Kreidenweis 2007.\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.AerosolModel.AerosolDistribution","page":"API","title":"CloudMicrophysics.AerosolModel.AerosolDistribution","text":"AerosolDistribution\n\nRepresents the aerosol size distribution as a tuple with different modes. All modes have to either be of type ModeB (Abdul-Razzak and Ghan 2000) or of type ModeÎº (Petters and Kreidenweis 2007).\n\nConstructors\n\nAerosolDistribution(Modes::T)\n\n\n\n\n\n","category":"type"},{"location":"API/#Aerosol-activation","page":"API","title":"Aerosol activation","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"AerosolActivation\nAerosolActivation.mean_hygroscopicity_parameter\nAerosolActivation.max_supersaturation\nAerosolActivation.N_activated_per_mode\nAerosolActivation.M_activated_per_mode\nAerosolActivation.total_N_activated\nAerosolActivation.total_M_activated","category":"page"},{"location":"API/#CloudMicrophysics.AerosolActivation","page":"API","title":"CloudMicrophysics.AerosolActivation","text":"Aerosol activation scheme, which includes:\n\nmean hygroscopicity for each mode of the aerosol size distribution\ncritical supersaturation for each mode of the aerosol size distribution\nmaximum supersaturation\ntotal number of particles actived\ntotal mass of particles actived\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.AerosolActivation.mean_hygroscopicity_parameter","page":"API","title":"CloudMicrophysics.AerosolActivation.mean_hygroscopicity_parameter","text":"mean_hygroscopicity_parameter(ap, ad)\n\nap - a struct with aerosol activation parameters\nad - a struct with aerosol distribution (B or Îº based)\n\nReturns a tuple of hygroscopicity parameters (one tuple element for each aerosol size distribution mode). The tuple is computed either as mass-weighted B parameters (Abdul-Razzak and Ghan 2000) or volume weighted kappa parameters (Petters and Kreidenweis 2007). Implemented via a dispatch based on aerosol distribution mode type.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.AerosolActivation.max_supersaturation","page":"API","title":"CloudMicrophysics.AerosolActivation.max_supersaturation","text":"max_supersaturation(ap, ad, aip, tps, T, p, w, q)\n\nap  - a struct with aerosol activation parameters\nad  - a struct with aerosol distribution\naip - a struct with air parameters\ntps - a struct with thermodynamics parameters\nT   - air temperature\np   - air pressure\nw   - vertical velocity\nq   - phase partition\n\nReturns the maximum supersaturation.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.AerosolActivation.N_activated_per_mode","page":"API","title":"CloudMicrophysics.AerosolActivation.N_activated_per_mode","text":"N_activated_per_mode(ap, ad, aip, tps, T, p, w, q)\n\nap  - a struct with aerosol activation parameters\nad  - aerosol distribution struct\naip - a struct with air parameters\ntps - a struct with thermodynamics parameters\nT   - air temperature\np   - air pressure\nw   - vertical velocity\nq   - phase partition\n\nReturns the number of activated aerosol particles in each aerosol size distribution mode.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.AerosolActivation.M_activated_per_mode","page":"API","title":"CloudMicrophysics.AerosolActivation.M_activated_per_mode","text":"M_activated_per_mode(ap, ad, aip, tps, T, p, w, q)\n\nap  - a struct with aerosol activation parameters\nad  - a struct with aerosol distribution parameters\naip - a struct with air parameters\ntps - a struct with thermodynamics parameters\nT - air temperature\np - air pressure\nw - vertical velocity\nq - phase partition\n\nReturns the mass of activated aerosol particles per mode of the aerosol size distribution.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.AerosolActivation.total_N_activated","page":"API","title":"CloudMicrophysics.AerosolActivation.total_N_activated","text":"total_N_activated(ap, ad, aip, tps, T, p, w, q)\n\nap - a struct with aerosol activation parameters\nad - aerosol distribution struct\naip - a struct with air properties\ntps - a struct with thermodynamics parameters\nT - air temperature\np - air pressure\nw - vertical velocity\nq - phase partition\n\nReturns the total number of activated aerosol particles.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.AerosolActivation.total_M_activated","page":"API","title":"CloudMicrophysics.AerosolActivation.total_M_activated","text":"total_M_activated(ap, ad, aip, tps, T, p, w, q)\n\nap - a struct with aerosol activation parameters\nad - aerosol distribution struct\naip - a struct with air properties\ntps - a struct with thermodynamics parameters\nT - air temperature\np - air pressure\nw - vertical velocity\nq - phase partition\n\nReturns the total mass of activated aerosol particles.\n\n\n\n\n\n","category":"function"},{"location":"API/#Heterogeneous-ice-nucleation","page":"API","title":"Heterogeneous ice nucleation","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"HetIceNucleation\nHetIceNucleation.dust_activated_number_fraction\nHetIceNucleation.ABIFM_J","category":"page"},{"location":"API/#CloudMicrophysics.HetIceNucleation","page":"API","title":"CloudMicrophysics.HetIceNucleation","text":"Parameterization for heterogenous ice nucleation.\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.HetIceNucleation.dust_activated_number_fraction","page":"API","title":"CloudMicrophysics.HetIceNucleation.dust_activated_number_fraction","text":"dust_activated_number_fraction(dust, ip, Si, T)\n\ndust - a struct with dust parameters\nip - a struct with ice nucleation parameters\nSi - ice saturation ratio\nT - air temperature [K]\n\nReturns the number fraction of mineral dust particles acting as deposition nuclei (n ice nuclei / n dust particles). From Mohler et al 2006 Table 2 (averages from different measurements excluding those where a was not measured)\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.HetIceNucleation.ABIFM_J","page":"API","title":"CloudMicrophysics.HetIceNucleation.ABIFM_J","text":"ABIFM_J(dust, ip, Îa_w)\n\ndust - a struct with dust parameters\nÎa_w - change in water activity [unitless].\n\nReturns the immersion freezing nucleation rate coefficient, J, in m^-2 s^-1 for different minerals in liquid droplets. The free parameters m and c are taken from Knopf & Alpert 2013 see DOI: 10.1039/C3FD00035D\n\n\n\n\n\n","category":"function"},{"location":"API/#Homogeneous-ice-nucleation","page":"API","title":"Homogeneous ice nucleation","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"HomIceNucleation\nHomIceNucleation.homogeneous_J","category":"page"},{"location":"API/#CloudMicrophysics.HomIceNucleation","page":"API","title":"CloudMicrophysics.HomIceNucleation","text":"Parameterization for homogeneous ice nucleation\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.HomIceNucleation.homogeneous_J","page":"API","title":"CloudMicrophysics.HomIceNucleation.homogeneous_J","text":"homogeneous_J(ip, Îa_w)\n\nip - a struct with ice nucleation parameters\nÎa_w - change in water activity [-].\n\nReturns the homogeneous freezing nucleation rate coefficient, J, in m^-3 s^-1 for sulphuric acid solutions. Parameterization based on Koop 2000, DOI: 10.1038/35020537.\n\n\n\n\n\n","category":"function"},{"location":"API/#Common-utility-functions","page":"API","title":"Common utility functions","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Common\nCommon.G_func\nCommon.logistic_function\nCommon.logistic_function_integral\nCommon.H2SO4_soln_saturation_vapor_pressure\nCommon.a_w_xT\nCommon.a_w_eT\nCommon.a_w_ice\nCommon.Chen2022_vel_add\nCommon.Chen2022_vel_coeffs","category":"page"},{"location":"API/#CloudMicrophysics.Common","page":"API","title":"CloudMicrophysics.Common","text":"Module for functions shared by different parameterizations.\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.Common.G_func","page":"API","title":"CloudMicrophysics.Common.G_func","text":"G_func(air_props, tps, T, Liquid())\nG_func(air_props, tps, T, Ice())\n\nair_props - struct with air parameters\ntps - struct with thermodynamics parameters\nT - air temperature\nLiquid(), Ice() - liquid or ice phase to dispatch over.\n\nUtility function combining thermal conductivity and vapor diffusivity effects.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Common.logistic_function","page":"API","title":"CloudMicrophysics.Common.logistic_function","text":"logistic_function(x, x_0, k)\n\nx - independent variable\nx_0 - threshold value for x\nk - growth rate of the curve, characterizing steepness of the transition\n\nReturns the value of the logistic function for smooth transitioning at thresholds. This is a normalized curve changing from 0 to 1 while x varies from 0 to Inf (for positive k). For x < 0 the value at x = 0 (zero) is returned. For x_0 = 0 H(x) is returned.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Common.logistic_function_integral","page":"API","title":"CloudMicrophysics.Common.logistic_function_integral","text":"logistic_function_integral(x, x_0, k)\n\nx - independent variable\nx_0 - threshold value for x\nk - growth rate of the logistic function, characterizing steepness of the transition\n\nReturns the value of the indefinite integral of the logistic function, for smooth transitioning of piecewise linear profiles at thresholds. This curve smoothly transition from y = 0 for 0 < x < x0 to y = x - x0 for x_0 < x.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Common.H2SO4_soln_saturation_vapor_pressure","page":"API","title":"CloudMicrophysics.Common.H2SO4_soln_saturation_vapor_pressure","text":"H2SO4_soln_saturation_vapor_pressure(prs, x, T)\n\nprs - a struct with H2SO4 solution free parameters\nx - wt percent sulphuric acid [unitless]\nT - air temperature [K].\n\nReturns the saturation vapor pressure above a sulphuric acid solution droplet in Pa. x is, for example, 0.1 if droplets are 10 percent sulphuric acid by weight\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Common.a_w_xT","page":"API","title":"CloudMicrophysics.Common.a_w_xT","text":"a_w_xT(H2SO4_prs, tps, x, T)\n\nH2SO4_prs - a struct with H2SO4 solution free parameters\ntps - a struct with thermodynamics parameters\nx - wt percent sulphuric acid [unitless]\nT - air temperature [K].\n\nReturns water activity of H2SO4 containing droplet. x is, for example, 0.1 if droplets are 10 percent sulphuric acid by weight.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Common.a_w_eT","page":"API","title":"CloudMicrophysics.Common.a_w_eT","text":"a_w_eT(tps, e, T)\n\ntps - struct with thermodynamics parameters\ne - partial pressure of water [Pa]\nT - air temperature [K].\n\nReturns water activity of pure water droplet. Valid when droplet is in equilibrium with surroundings.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Common.a_w_ice","page":"API","title":"CloudMicrophysics.Common.a_w_ice","text":"a_w_ice(tps, T)\n\ntps - struct with thermodynamics parameters\nT - air temperature [K].\n\nReturns water activity of ice.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Common.Chen2022_vel_add","page":"API","title":"CloudMicrophysics.Common.Chen2022_vel_add","text":"Chen2022_vel_add(a, b, c, Î», k)\n\na, b, c, - free parameters defined in Chen etl al 2022\nÎ» - size distribution parameter\nk - size distribution moment for which we compute the bulk fall speed\n\nReturns the addends of the bulk fall speed of rain or ice particles following Chen et al 2022 DOI: 10.1016/j.atmosres.2022.106171 in [m/s]. We are assuming exponential size distribution and hence Î¼=0.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Common.Chen2022_vel_coeffs","page":"API","title":"CloudMicrophysics.Common.Chen2022_vel_coeffs","text":"Chen2022_vel_coeffs(precip_type, velo_scheme, Ï)\n\nvelo_scheme - type for terminal velocity scheme (contains free parameters)\nÏ - air density\n\nReturns the coefficients from Appendix B in Chen et al 2022 DOI: 10.1016/j.atmosres.2022.106171\n\n\n\n\n\n","category":"function"},{"location":"API/#Parameters","page":"API","title":"Parameters","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Parameters\nParameters.ParametersType\nParameters.AerosolType\nParameters.AerosolDistributionType\nParameters.CloudCondensateType\nParameters.PrecipitationType\nParameters.TerminalVelocityType\nParameters.Precipitation2MType\nParameters.AirProperties\nParameters.WaterProperties\nParameters.ThermodynamicsParameters\nParameters.ArizonaTestDust\nParameters.DesertDust\nParameters.Illite\nParameters.Kaolinite\nParameters.Seasalt\nParameters.Sulfate\nParameters.AerosolActivationParameters\nParameters.IceNucleationParameters\nParameters.H2SO4SolutionParameters\nParameters.Mohler2006\nParameters.Koop2000\nParameters.H2S04NucleationParameters\nParameters.OrganicNucleationParameters\nParameters.MixedNucleationParameters\nParameters.Parameters0M\nParameters.ParticlePDFSnow\nParameters.ParticlePDFIceRain\nParameters.ParticleMass\nParameters.ParticleArea\nParameters.Ventilation\nParameters.Acnv1M\nParameters.CloudLiquid\nParameters.CloudIce\nParameters.Rain\nParameters.Snow\nParameters.CollisionEff\nParameters.KK2000\nParameters.AcnvKK2000\nParameters.AccrKK2000\nParameters.B1994\nParameters.AcnvB1994\nParameters.AccrB1994\nParameters.TC1980\nParameters.AcnvTC1980\nParameters.AccrTC1980\nParameters.LD2004\nParameters.VarTimescaleAcnv\nParameters.SB2006\nParameters.ParticlePDF_SB2006\nParameters.AcnvSB2006\nParameters.AccrSB2006\nParameters.SelfColSB2006\nParameters.BreakupSB2006\nParameters.EvaporationSB2006\nParameters.ParametersP3\nParameters.Blk1MVelType\nParameters.Blk1MVelTypeRain\nParameters.Blk1MVelTypeSnow\nParameters.SB2006VelType\nParameters.Chen2022VelType\nParameters.Chen2022VelTypeSnowIce\nParameters.Chen2022VelTypeRain","category":"page"},{"location":"API/#CloudMicrophysics.Parameters","page":"API","title":"CloudMicrophysics.Parameters","text":"Parameters\n\nA module for CloudMicrophysics.jl free parameters.\n\n\n\n\n\n","category":"module"},{"location":"API/#CloudMicrophysics.Parameters.ParametersType","page":"API","title":"CloudMicrophysics.Parameters.ParametersType","text":"ParametersType{FT}\n\nThe top-level super-type for all cloud microphysics parameters\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.AerosolType","page":"API","title":"CloudMicrophysics.Parameters.AerosolType","text":"AerosolType{FT}\n\nThe top-level super-type for all aerosol properties\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.AerosolDistributionType","page":"API","title":"CloudMicrophysics.Parameters.AerosolDistributionType","text":"AerosolDistributionType\n\nThe top-level super-type for all aerosol distribution types\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.CloudCondensateType","page":"API","title":"CloudMicrophysics.Parameters.CloudCondensateType","text":"CloudCondensateType{FT}\n\nThe top-level super-type for cloud condensate types (liquid and ice)\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.PrecipitationType","page":"API","title":"CloudMicrophysics.Parameters.PrecipitationType","text":"PrecipitationType{FT}\n\nThe top-level super-type for precipitation types (rain and snow)\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.TerminalVelocityType","page":"API","title":"CloudMicrophysics.Parameters.TerminalVelocityType","text":"TerminalVelocityType{FT}\n\nThe top-level super-type for terminal velocity parameterizations\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Precipitation2MType","page":"API","title":"CloudMicrophysics.Parameters.Precipitation2MType","text":"Precipitation2MType\n\nThe top-level super-type for 2-moment precipitation parameterizations\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.AirProperties","page":"API","title":"CloudMicrophysics.Parameters.AirProperties","text":"AirProperties{FT}\n\nParameters with air properties.\n\nFields\n\nK_therm: thermal conductivity of air [w/m/K]\nD_vapor: diffusivity of water vapor [m2/s]\nÎ½_air: kinematic viscosity of air [m2/s]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.WaterProperties","page":"API","title":"CloudMicrophysics.Parameters.WaterProperties","text":"WaterProperties{FT}\n\nParameters with water properties.\n\nFields\n\nÏw: density of liquid water [kg/m3]\nÏi: density of ice [kg/m3]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.ThermodynamicsParameters","page":"API","title":"CloudMicrophysics.Parameters.ThermodynamicsParameters","text":"ThermodynamicsParameters\n\nA wrapper function for creating Thermodynamics.jl parameters\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.Parameters.ArizonaTestDust","page":"API","title":"CloudMicrophysics.Parameters.ArizonaTestDust","text":"ArizonaTestDust{FT}\n\nParameters for Arizona Test Dust from Mohler et al, 2006. DOI: 10.5194/acp-6-3007-2006\n\nFields\n\nSâ_warm: Sâ for T > T_thr [-]\nSâ_cold: Sâ for T < T_thr [-]\na_warm: a for T > T_thr [-]\na_cold: a for T < T_thr [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.DesertDust","page":"API","title":"CloudMicrophysics.Parameters.DesertDust","text":"DesertDust{FT}\n\nParameters for desert dust from Knopf and Alpert 2013 DOI: 10.1039/C3FD00035D and from Mohler et al, 2006 DOI: 10.5194/acp-6-3007-2006\n\nFields\n\nSâ_warm: Sâ for T > T_thr [-]\nSâ_cold: Sâ for T < T_thr [-]\na_warm: a for T > T_thr [-]\na_cold: a for T < T_thr [-]\nm: m coefficient for immersion freezing J [-]\nc: c coefficient for immersion freezing J [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Illite","page":"API","title":"CloudMicrophysics.Parameters.Illite","text":"Illite{FT}\n\nParameters for illite from Knopf and Alpert 2013 DOI: 10.1039/C3FD00035D\n\nFields\n\nm: m coefficient for immersion freezing J [-]\nc: c coefficient for immersion freezing J [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Kaolinite","page":"API","title":"CloudMicrophysics.Parameters.Kaolinite","text":"Kaolinite{FT}\n\nParameters for kaolinite from Knopf and Alpert 2013 DOI: 10.1039/C3FD00035D\n\nFields\n\nm: m coefficient for immersion freezing J [-]\nc: c coefficient for immersion freezing J [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Seasalt","page":"API","title":"CloudMicrophysics.Parameters.Seasalt","text":"Seasalt{FT}\n\nParameters for seasalt\n\nFields\n\nM: molar mass [kg/mol]\nÏ: density [kg/m3]\nÏ: osmotic coefficient [-]\nÎ½: ion number [-]\nÏµ: water soluble mass fraction [-]\nÎº: hygroscopicity parameter [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Sulfate","page":"API","title":"CloudMicrophysics.Parameters.Sulfate","text":"Sulfate{FT}\n\nParameters for sulfate aerosol\n\nFields\n\nM: molar mass [kg/mol]\nÏ: density [kg/m3]\nÏ: osmotic coefficient [-]\nÎ½: ion number [-]\nÏµ: water soluble mass fraction [-]\nÎº: hygroscopicity parameter [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.AerosolActivationParameters","page":"API","title":"CloudMicrophysics.Parameters.AerosolActivationParameters","text":"AerosolActivationParameters{FT}\n\nParameters for Abdul-Razzak and Ghan 2000 aerosol activation scheme DOI: 10.1029/1999JD901161\n\nFields\n\nM_w: molar mass of water [kg/mol]\nR: gas constant [J/mol/K]\nÏ_w: cloud water density [kg/m3]\nÏ: surface tension of water [N/m]\ng: gravitational_acceleration [m/s2]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.IceNucleationParameters","page":"API","title":"CloudMicrophysics.Parameters.IceNucleationParameters","text":"IceNucleationParameters{FT, DEP, HOM}\n\nParameters for ice nucleation\n\nFields\n\ndeposition\nhomogeneous\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.H2SO4SolutionParameters","page":"API","title":"CloudMicrophysics.Parameters.H2SO4SolutionParameters","text":"H2SO4SolutionParameters{FT}\n\nParameters for water activity of H2SO4 solutions from Luo et al 1995. DOI: 10.1029/94GL02988\n\nFields\n\nT_max: max temperature for which the parameterization is valid [K]\nT_min: min temperature for which the parameterization is valid [K]\nw_2: coefficient [-]\nc1: coefficient [-]\nc2: coefficient [-]\nc3: coefficient [-]\nc4: coefficient [-]\nc5: coefficient [-]\nc6: coefficient [-]\nc7: coefficient [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Mohler2006","page":"API","title":"CloudMicrophysics.Parameters.Mohler2006","text":"Mohler2006{FT}\n\nParameters for ice nucleation from Mohler et al 2006 DOI: 10.5194/acp-6-3007-2006\n\nFields\n\nSáµ¢_max: max allowed supersaturation [-]\nT_thr: threshold temperature [K]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Koop2000","page":"API","title":"CloudMicrophysics.Parameters.Koop2000","text":"Koop2000{FT}\n\nParameters for ice nucleation from Koop et al 2000 DOI: 10.1038/35020537\n\nFields\n\nÎa_w_min: min Îaw [-]\nÎa_w_max: max Îaw [-]\ncâ: coefficient [-]\ncâ: coefficient [-]\ncâ: coefficient [-]\ncâ: coefficient [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.H2S04NucleationParameters","page":"API","title":"CloudMicrophysics.Parameters.H2S04NucleationParameters","text":"H2S04NucleationParameters{FT}\n\nParameters for pure sulfuric acid nucleation from Dunne et al 1016 DOI:10.1126/science.aaf2649\n\nFields\n\np_b_n\np_b_i\nu_b_n\nu_b_i\nv_b_n\nv_b_i\nw_b_n\nw_b_i\np_t_n\np_t_i\nu_t_n\nu_t_i\nv_t_n\nv_t_i\nw_t_n\nw_t_i\np_A_n\np_A_i\na_n\na_i\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.OrganicNucleationParameters","page":"API","title":"CloudMicrophysics.Parameters.OrganicNucleationParameters","text":"OrganicNucleationParameters{FT}\n\nParameters for pure organic nucleation from Kirkby 2016 DOI: 10.1038/nature17953\n\nFields\n\na_1\na_2\na_3\na_4\na_5\nY_MTO3\nY_MTOH\nk_MTO3\nk_MTOH\nexp_MTO3\nexp_MTOH\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.MixedNucleationParameters","page":"API","title":"CloudMicrophysics.Parameters.MixedNucleationParameters","text":"MixedNucleationParameters{FT}\n\nParameters for mixed organic and sulfuric acid nucleation from Riccobono et al 2014 DOI:10.1126/science.1243527\n\nFields\n\nk_H2SO4org\nk_MTOH\nexp_MTOH\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Parameters0M","page":"API","title":"CloudMicrophysics.Parameters.Parameters0M","text":"Parameters0M{FT}\n\nParameters for zero-moment bulk microphysics scheme\n\nFields\n\nÏ_precip: precipitation timescale [s]\nqc_0: specific humidity precipitation threshold [-]\nS_0: supersaturation precipitation threshold [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.ParticlePDFSnow","page":"API","title":"CloudMicrophysics.Parameters.ParticlePDFSnow","text":"ParticlePDFSnow{FT}\n\nA struct with snow size distribution parameters\n\nFields\n\nÎ¼: snow size distribution coefficient [1/m4]\nÎ½: snow size distribution coefficient [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.ParticlePDFIceRain","page":"API","title":"CloudMicrophysics.Parameters.ParticlePDFIceRain","text":"ParticlePDFIceRain{FT}\n\nA struct with snow size distribution parameters\n\nFields\n\nn0: snow size distribution coefficient [1/m4]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.ParticleMass","page":"API","title":"CloudMicrophysics.Parameters.ParticleMass","text":"ParticleMass{FT}\n\nA struct with coefficients of the assumed mass(size) relationship for particles\n\nm(r) = m0 Ïm (r/r0)^(me + Îm)\n\nFields\n\nr0: particle length scale [m]\nm0: mass size relation coefficient [kg]\nme: mass size relation coefficient [-]\nÎm: mass size relation coefficient [-]\nÏm: mass size relation coefficient [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.ParticleArea","page":"API","title":"CloudMicrophysics.Parameters.ParticleArea","text":"ParticleArea{FT}\n\nA struct with coefficients of the assumed crosssectionarea(size) relationship for particles\n\na(r) = a0 Ïa (r/r0)^(ae + Îa)\n\nFields\n\na0: cross section size relation coefficient [m2]\nae: cross section size relation coefficient [-]\nÎa: cross section size relation coefficient [-]\nÏa: cross section size relation coefficient [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Ventilation","page":"API","title":"CloudMicrophysics.Parameters.Ventilation","text":"Ventilation{FT}\n\nA struct with ventilation coefficients\n\nFields\n\na: ventilation coefficient a [-]\nb: ventilation coefficient b [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Acnv1M","page":"API","title":"CloudMicrophysics.Parameters.Acnv1M","text":"Acnv1M{FT}\n\nA struct with autoconversion parameters\n\nFields\n\nÏ: autoconversion timescale [s]\nq_threshold: specific humidity autoconversion threshold [-]\nk: threshold smooth transition steepness [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.CloudLiquid","page":"API","title":"CloudMicrophysics.Parameters.CloudLiquid","text":"CloudLiquid{FT}\n\nThe parameters and type for cloud liquid water condensate\n\nFields\n\nÏ_relax: condensation evaporation non_equil microphysics relaxation timescale [s]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.CloudIce","page":"API","title":"CloudMicrophysics.Parameters.CloudIce","text":"CloudIce{FT, MS}\n\nThe parameters and type for cloud ice condensate\n\nFields\n\npdf: a struct with size distribution parameters\nmass: a struct with mass size relation parameters\nr0: particle length scale [m]\nr_ice_snow: ice snow threshold radius [m]\nÏ_relax: deposition sublimation non_equil microphysics relaxation timescale [s]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Rain","page":"API","title":"CloudMicrophysics.Parameters.Rain","text":"Rain{FT, MS, AR, VT, AC}\n\nThe parameters and type for rain\n\nFields\n\npdf: a struct with size distribution parameters\nmass: a struct with mass size relation parameters\narea: a struct with cross section size relation parameers\nvent: a struct with ventilation coefficients\nacnv1M: a struct with cloud water to rain autoconversion parameters\nr0: particle length scale [m]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Snow","page":"API","title":"CloudMicrophysics.Parameters.Snow","text":"Snow{FT, PD, MS, AR, VT, AC}\n\nThe parameters and type for snow\n\nFields\n\npdf: a struct with size distribution parameters\nmass: a struct with mass size relation parameters\narea: a struct with cross section size relation parameers\nvent: a struct with ventilation coefficients\nacnv1M: a struct with ice to snow autoconversion parameters\nr0: particle length scale [m]\nT_freeze: freezing temperature of water [K]\nÏáµ¢: ice density [kg/m3]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.CollisionEff","page":"API","title":"CloudMicrophysics.Parameters.CollisionEff","text":"CollisionEff{FT}\n\nCollision efficiency parameters for the 1-moment scheme\n\nFields\n\ne_liq_rai: cloud liquid-rain collision efficiency [-]\ne_liq_sno: cloud liquid-snow collision efficiency [-]\ne_ice_rai: cloud ice-rain collision efficiency [-]\ne_ice_sno: cloud ice-snow collision efficiency [-]\ne_rai_sno: rain-snow collision efficiency [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.KK2000","page":"API","title":"CloudMicrophysics.Parameters.KK2000","text":"KK2000\n\nThe type and parameters for 2-moment precipitation formation by Khairoutdinov and Kogan (2000)\n\nDOI:10.1175/1520-0493(2000)128<0229:ANCPPI>2.0.CO;2\n\nFields\n\nacnv: Autoconversion parameters\naccr: Accretion parameters\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.AcnvKK2000","page":"API","title":"CloudMicrophysics.Parameters.AcnvKK2000","text":"AcnvKK2000\n\nKhairoutdinov and Kogan (2000) autoconversion parameters\n\nFields\n\nA: Autoconversion coefficient A\na: Autoconversion coefficient a\nb: Autoconversion coefficient b\nc: Autoconversion coefficient c\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.AccrKK2000","page":"API","title":"CloudMicrophysics.Parameters.AccrKK2000","text":"AccrKK2000\n\nKhairoutdinov and Kogan (2000) accretion parameters\n\nFields\n\nA: Accretion coefficient A\na: Accretion coefficient a\nb: Accretion coefficient b\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.B1994","page":"API","title":"CloudMicrophysics.Parameters.B1994","text":"B1994\n\nThe type and parameter for 2-moment precipitation formation by Beheng (1994) DOI: 10.1016/0169-8095(94)90020-5\n\nFields\n\nacnv: Autoconversion coeff C\naccr: Autoconversion coeff a\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.AcnvB1994","page":"API","title":"CloudMicrophysics.Parameters.AcnvB1994","text":"AcnvB1994\n\nBeheng (1994) autoconversion parameters\n\nFields\n\nC: Autoconversion coeff C\na: Autoconversion coeff a\nb: Autoconversion coeff b\nc: Autoconversion coeff c\nN_0: Autoconversion coeff N_0\nd_low: Autoconversion coeff d_low\nd_high: Autoconversion coeff d_high\nk: Threshold for smooth tranistion steepness\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.AccrB1994","page":"API","title":"CloudMicrophysics.Parameters.AccrB1994","text":"AccrB1994\n\nBeheng (1994) accretion parameters\n\nFields\n\nA: Accretion coefficient A\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.TC1980","page":"API","title":"CloudMicrophysics.Parameters.TC1980","text":"TC1980\n\nThe type and parameters for 2-moment precipitation formation by Tripoli and Cotton (1980)\n\nDOI: 10.1175/1520-0450(1980)019<1037:ANIOSF>2.0.CO;2\n\nFields\n\nacnv: Autoconversion parameters\naccr: Accretion parameters\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.AcnvTC1980","page":"API","title":"CloudMicrophysics.Parameters.AcnvTC1980","text":"AcnvTC1980\n\nTripoli and Cotton (1980) autoconversion parameters\n\nFields\n\na: Autoconversion coefficient a\nb: Autoconversion coefficient b\nD: Autoconversion coefficient D\nr_0: Autoconversion coefficient r_0\nme_liq: Autoconversion coefficient me_liq\nm0_liq_coeff: Autoconversion coefficient m0liqcoeff\nk: Threshold for smooth tranistion steepness\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.AccrTC1980","page":"API","title":"CloudMicrophysics.Parameters.AccrTC1980","text":"AccrTC1980\n\nTripoli and Cotton (1980) accretion parameters\n\nFields\n\nA: Accretion coefficient A\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.LD2004","page":"API","title":"CloudMicrophysics.Parameters.LD2004","text":"LD2004\n\nThe type and parameters for 2-moment precipitation formation by Liu and Daum (2004)\n\nDOI: 10.1175/1520-0469(2004)061<1539:POTAPI>2.0.CO;2\n\nFields\n\nR_6C_0: Autoconversion coefficient R6C0\nE_0: Autoconversion coefficient E_0\nÏ_w: liquid water density [kg/m3]\nk: Threshold for smooth tranistion steepness\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.VarTimescaleAcnv","page":"API","title":"CloudMicrophysics.Parameters.VarTimescaleAcnv","text":"VarTimescaleAcnv\n\nThe type for 2-moment precipitation formation based on the 1-moment parameterization with variable time scale Azimi et al (2023)\n\nFields\n\nÏ: Timescale [s]\nÎ±: Powerlaw coefficient [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.SB2006","page":"API","title":"CloudMicrophysics.Parameters.SB2006","text":"SB2006\n\nThe type and parameters for 2-moment precipitation formation by Seifert and Beheng (2006)\n\nDOI: 10.1007/s00703-005-0112-4\n\nFields\n\npdf: Rain particle size distribution parameters\nacnv: Autoconversion parameters\naccr: Accretion parameters\nself: Rain selfcollection parameters\nbrek: Rain breakup parameters\nevap: Rain evaporation parameters\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.ParticlePDF_SB2006","page":"API","title":"CloudMicrophysics.Parameters.ParticlePDF_SB2006","text":"ParticlePDF_SB2006\n\nRain size distribution parameters from SB2006\n\nFields\n\nxr_min: Raindrop minimal mass\nxr_max: Raindrop maximum mass\nN0_min: Raindrop size distribution coefficient N0 min\nN0_max: Raindrop size distribution coefficient N0 max\nÎ»_min: Raindrop size distribution coefficient lambda min\nÎ»_max: Raindrop size distribution coefficient lambda max\nÏw: Cloud liquid water density [kg/m3]\nÏ0: Reference air density [kg/m3]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.AcnvSB2006","page":"API","title":"CloudMicrophysics.Parameters.AcnvSB2006","text":"AcnvSB2006\n\nAutoconversion parameters from SB2006\n\nFields\n\nkcc: Collection kernel coefficient\nÎ½c: Cloud gamma distribution coefficient\nx_star: Minimum mass of rain droplets\nÏ0: Reference air density [kg/m3]\nA: Autoconversion correcting function coeff A\na: Autoconversion correcting function coeff a\nb: Autoconversion correcting function coeff b\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.AccrSB2006","page":"API","title":"CloudMicrophysics.Parameters.AccrSB2006","text":"AccrSB2006\n\nAccretion parameters from SB2006\n\nFields\n\nkcr: Collection kernel coefficient Kcr\nÏ0: Accretion correcting function coefficient Ï_0\nÏ0: Reference air density [kg/m3]\nc: Accretion correcting function coefficient c\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.SelfColSB2006","page":"API","title":"CloudMicrophysics.Parameters.SelfColSB2006","text":"SelfColSB2006\n\nRain selfcollection parameters from SB2006\n\nFields\n\nkrr: Collection kernel coefficient krr\nÎºrr: Collection kernel coefficient kappa rr\nd: Raindrop self collection coefficient d\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.BreakupSB2006","page":"API","title":"CloudMicrophysics.Parameters.BreakupSB2006","text":"BreakupSB2006\n\nRain breakup parameters from SB2006\n\nFields\n\nDeq: Raindrop equilibrium mean diamater\nDr_th: Raindrop breakup mean diamater threshold\nkbr: Raindrops breakup coefficient kbr\nÎºbr: Raindrops breakup coefficient kappa br\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.EvaporationSB2006","page":"API","title":"CloudMicrophysics.Parameters.EvaporationSB2006","text":"EvaporationSB2006\n\nRain evaporation parameters from SB2006\n\nFields\n\nav: Ventillation coefficient a\nbv: Ventillation coefficient b\nÎ±: Rain evapoartion coefficient Î±\nÎ²: Rain evapoartion coefficient Î²\nÏ0: Reference air density [kg/m3]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.ParametersP3","page":"API","title":"CloudMicrophysics.Parameters.ParametersP3","text":"ParametersP3{FT}\n\nParameters for P3 bulk microphysics scheme from Morrison and Milbrandt 2015 doi: 10.1175/JAS-D-14-0065.1\n\nFields\n\nÎ±_va: Coefficient in mass(size) relation [g/Î¼m^Î²_va]\nÎ²_va: Coefficient in mass(size) relation [-]\nÏ_i: Cloud ice density [kg/m3]\nÏ_l: Cloud liquid water density [kg/m3]\nÎ³: Coefficient in area(size) for ice side plane, column, bullet, and planar polycrystal aggregates from Mitchell 1996 [Î¼m^(2-Ï)]\nÏ: Coefficient in area(size) for ice side plane, column, bullet, and planar polycrystal aggregates from Mitchell 1996 [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Blk1MVelType","page":"API","title":"CloudMicrophysics.Parameters.Blk1MVelType","text":"Blk1MVelType\n\nThe type for precipitation terminal velocity from the simple 1-moment scheme (defined for rain and snow)\n\nFields\n\nrain\nsnow\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Blk1MVelTypeRain","page":"API","title":"CloudMicrophysics.Parameters.Blk1MVelTypeRain","text":"Blk1MVelTypeRain\n\nThe type for precipitation terminal velocity from the simple 1-moment scheme for rain\n\nFields\n\nr0: particle length scale [m]\nve: rain terminal velocity size relation coefficient [-]\nÎv: rain terminal velocity size relation coefficient [-]\nÏv: rain terminal velocity size relation coefficient [-]\nÏw: cloud water density [kg/m3]\nC_drag: rain drop drag coefficient [-]\ngrav: gravitational acceleration [m/s2]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Blk1MVelTypeSnow","page":"API","title":"CloudMicrophysics.Parameters.Blk1MVelTypeSnow","text":"Blk1MVelTypeSnow\n\nThe type for precipitation terminal velocity from the simple 1-moment scheme for snow\n\nFields\n\nr0: particle length scale [m]\nve: snow terminal velocity size relation coefficient [-]\nÎv: snow terminal velocity size relation coefficient [-]\nÏv: snow terminal velocity size relation coefficient [-]\nv0: snow terminal velocity size relation coefficient [m/s]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.SB2006VelType","page":"API","title":"CloudMicrophysics.Parameters.SB2006VelType","text":"SB2006VelType\n\nThe type for precipitation terminal velocity from Seifert and Beheng 2006 (Defined only for rain)\n\nFields\n\nÏ0\naR\nbR\ncR\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Chen2022VelType","page":"API","title":"CloudMicrophysics.Parameters.Chen2022VelType","text":"Chen2022VelType\n\nThe type for precipitation terminal velocity from Chen et al 2022 DOI: 10.1016/j.atmosres.2022.106171 (defied for rain, snow and cloud ice)\n\nFields\n\nrain\nsnow_ice\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Chen2022VelTypeSnowIce","page":"API","title":"CloudMicrophysics.Parameters.Chen2022VelTypeSnowIce","text":"Chen2022VelTypeSnowIce\n\nThe type for precipitation terminal velocity from Chen et al 2022 for snow and ice. See Table B3 for parameter definitions. DOI: 10.1016/j.atmosres.2022.106171\n\nFields\n\nAs\nBs\nCs\nEs\nFs\nGs\nÏáµ¢: density of cloud ice [kg/m3]\n\n\n\n\n\n","category":"type"},{"location":"API/#CloudMicrophysics.Parameters.Chen2022VelTypeRain","page":"API","title":"CloudMicrophysics.Parameters.Chen2022VelTypeRain","text":"Chen2022VelTypeRain\n\nThe type for precipitation terminal velocity from Chen et al 2022 for rain. See Table B1 for parameter definitions. DOI: 10.1016/j.atmosres.2022.106171\n\nFields\n\nÏ0\na1\na2\na3\na3_pow\nb1\nb2\nb3\nb_Ï\nc1\nc2\nc3\n\n\n\n\n\n","category":"type"},{"location":"API/#Precipitation-susceptibility","page":"API","title":"Precipitation susceptibility","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"PrecipitationSusceptibility.precipitation_susceptibility_autoconversion\nPrecipitationSusceptibility.precipitation_susceptibility_accretion","category":"page"},{"location":"API/#CloudMicrophysics.PrecipitationSusceptibility.precipitation_susceptibility_autoconversion","page":"API","title":"CloudMicrophysics.PrecipitationSusceptibility.precipitation_susceptibility_autoconversion","text":"precipitation_susceptibility_autoconversion(param_set, scheme, q_liq, q_rai, Ï, N_liq)\n\nscheme - type for 2-moment rain autoconversion parameterization\nq_liq - cloud water specific humidity\nq_rai - rain water specific humidity\nÏ - air density\nN_liq - cloud droplet number density\n\nReturns the precipitation susceptibility rates due to autoconversion as a precip_susceptibility_rates object, using automatic differentiation. Works for any 2-moment scheme, as long as autoconversion is defined for it.\n\n\n\n\n\n","category":"function"},{"location":"API/#CloudMicrophysics.PrecipitationSusceptibility.precipitation_susceptibility_accretion","page":"API","title":"CloudMicrophysics.PrecipitationSusceptibility.precipitation_susceptibility_accretion","text":"precipitation_susceptibility_accretion(param_set, scheme, q_liq, q_rai, Ï, N_liq)\n\nscheme - type for 2-moment rain autoconversion parameterization\nq_liq - cloud water specific humidity\nq_rai - rain water specific humidity\nÏ - air density\nN_liq - cloud droplet number density\n\nReturns the precipitation susceptibility rates due to accretion as a precip_susceptibility_rates object, using automatic differentiation. Works for any 2-moment scheme, as long as accretion is defined for it.\n\n\n\n\n\n","category":"function"},{"location":"AerosolActivation/#Aerosol-Activation","page":"Aerosol activation","title":"Aerosol Activation","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The AerosolActivation.jl module contains parameterization   of activation of aerosol particles into cloud droplets   via deposition of water vapor. Accompanying it, is the AerosolDistribution.jl module, which contains   information about the aerosol size distribution and chemical properties. The parameterization computes the total activated number and mass   from a given aerosol size distribution. It is based on KÃ¶hler theory   and assumes equilibrium thermodynamics. The modules are an implementation of the parameterization   from [28] and   [29]. The aerosol chemical composition can be expressed using the B parameter   from [29]   or the kappa parameter from [30].","category":"page"},{"location":"AerosolActivation/#Assumed-aerosol-size-distribution-and-properties","page":"Aerosol activation","title":"Assumed aerosol size distribution and properties","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"Aerosol particles are assumed to follow a multi-mode lognormal   size distribution. Particles in each mode are assumed to be internally mixed. The following table lists the parameters defining the aerosol   physical and chemical properties using the B parameter. The r_dry, sigma, and N_tot are given for each mode. Other parameters are defined for each component in each mode.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"variable name definition units\nr_dry geometric mean dry radius m\nsigma geometric standard deviation -\nN_tot total number concentration m^-3\nr component mass mixing ratio -\nepsilon mass fraction of water soluble material -\nphi osmotic coefficient -\nM_a molar mass kg  mol^-1\nnu number of ions the salt dissociates into in water -\nrho_a aerosol density kg  m^-3","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"When using the kappa formulation, one has to specify fewer parameters.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"variable name definition units\nr_dry geometric mean dry radius m\nsigma geometric standard deviation -\nN_tot total number concentration m^-3\nr_vol component volume mixing ratio -\nM_a molar mass kg  mol^-1\nkappa kappa parameter -","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"note: Note\nThe parameterization assumes that the solute is sufficiently soluble so that its concentration does not increase as the droplet grows. The effects of surfactants on surface tension are also not considered.","category":"page"},{"location":"AerosolActivation/#Mean-Hygroscopicity","page":"Aerosol activation","title":"Mean Hygroscopicity","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"Hygroscopicity describes the impact of solute on aerosol efficiency in taking up   water vapor from the environment (i.e. the Raoult's law). The parametrization accepts two ways of describing it, either using the   B parameter or kappa parameter. The B parameter is defined in eq. (3) in [29]:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"B = fracnu  phi  M_w  rho_aM_a  rho_w","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"nu  phi  M_a  rho_a are the aerosol properties defined in the above table,\nM_w is the molar mass of water,\nrho_w is the density of water.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The mean B parameter for internally mixed mode i   made up of j aerosol species is computed   according to eq. (4) in [29]:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nbarB_i = fracM_w sum_j = 1^J fracr_ij  nu_ij  phi_ij  epsilon_ijM_aijrho_w sum_j = 1^J fracr_ijrho_aij\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"i = 1 2  I iterates over aerosol size distribution modes,\nj = 1 2  J iterates over aerosol components within a given mode,\nr_ij is the mass ratio of component j in mode i.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The kappa parameter values for different chemical compounds are provided   in Table 1 in  [30]. The mean kappa parameter for internally mixed mode i   made up of j aerosol species is computed as a volume weighted average:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"kappa_i = sum_j=1^J r_ij vol kappa_ij","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"r_ij  vol is the volume ratio of component j in mode i.","category":"page"},{"location":"AerosolActivation/#Critical-supersaturation","page":"Aerosol activation","title":"Critical supersaturation","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"Supersaturation S is the ratio of water vapor pressure to saturation vapor pressure. KÃ¶hler theory defines S at which the growing aerosol particle   is in equilibrium with the environment over a range of its sizes. It takes into account the curvature effects and the solute effects. Aerosol activation occurs when the threshold supersaturation,   named critical supersaturation S_c, is reached. After reaching S_c, even when S decreases,   as long as the conditions remain saturated,   the particle will continue to grow. The critical supersaturation is defined by the maximum of the   KÃ¶hler curve. For example, eq.(9) in [29] defines the   the critical supersaturation for a particle with   dry radius equal to the mean mode radius:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nS_ci = frac2sqrtbarH_i bigg( fracA3  r_dry  i bigg)^32\nlabeleqScriti\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"H_i is either the B_i or the kappa_i hygroscopicity parameter\nA is the coefficient describing the curvature effects (i.e. Kelvin effect),\nr_dry  i is the mean dry radius for mode i.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"Coefficient A is defined as in equation (5) in [28].","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nA = frac2 tau M_wrho_w R T\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"tau is the surface tension of water,\nR is the universal gas constant,\nT is the temperature.","category":"page"},{"location":"AerosolActivation/#Maximum-Supersaturation","page":"Aerosol activation","title":"Maximum Supersaturation","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"Maximum supersaturation reached by the system S_max governs   what aerosol sizes are activated and what aren't. We estimate S_max by considering a parcel of air raising adiabatically   with a constant velocity, see for example [31]. The time rate of change of S is given by eq (10) in [31]","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\n  fracdSdt = alpha w - gamma fracdchidt\n  labeleqSevolution\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"w is the vertical velocity,\ndchi  dt is the water condensation rate during aerosol activation and growth,\nalpha and gamma are coefficients that do not depend on aerosol properties.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The parameters alpha and gamma are defined by eq. (11) and (12)   in [28] . Here, they are implemented following the [31] eq. (10):","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nalpha = fracL_v  g  epsilonR_m  c_pm  T^2 - fracgR_m  T\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\ngamma = fracR_m Tepsilon  p_vap^sat + fracepsilon  L_v^2c_pm  T  p\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"L_v is the latent heat of vaporization,\ng is gravitational acceleration,\nepsilon is the ratio of water molar mass to dry air molar mass,\nR_m is the gas constant of air (dry air and moisture)\nc_pm is the specific heat of air (dry air and moisture),\np_vap^sat is the saturation vapor pressure,\np is the total air pressure.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The maximum supersaturation is estimated from eq. (\\ref{eq:Sevolution})   assuming steady a state solution dSdt = 0. [28] and [29]   show how to derive an approximate solution for S_max,   since analytical solution is in general not possible. They consider approximate solutions for very small and very large   critical supersaturation values relative to maximum supersaturation,   and combine them into a final expression for S_max. The final formula is presented in eq (6) in [29]","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nS_max = frac1Bigg sum_i=1^Ifrac1S_ci^2biggf_i Big( fraczetaeta_i Big)^frac32 + g_i Big(fracS_ci^2eta_i + 3zeta Big)^frac34bigg Bigg^frac12\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"S_ci is the critical supersaturation for mode i defined in eq. (\\ref{eq:Scriti}),\nf_i, g_i, zeta, eta_i are the coefficients defined in eqs. (7, 8, 10 and 11) in  [29].","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nf_i  = 05  mathrmexp (25  mathrmln^2 sigma_i)\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\ng_i  = 1 + 025  mathrmln sigma_i\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nzeta = frac2A3 bigg(fracalpha wGbigg)^frac12\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\neta_i = bigg(fracalpha wGbigg)^frac32 frac12 pi rho_w gamma N_i\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"G(T) = frac1rho_w  left(fracL_vKT left(fracL_vR_v T - 1 right) + fracR_v Tp_vap^sat D right)^-1   combines the effects of thermal conductivity K and water diffusivity D.","category":"page"},{"location":"AerosolActivation/#Number-and-mass-of-activated-particles","page":"Aerosol activation","title":"Number and mass of activated particles","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The total number N_act and mass M_act of activated aerosol particles   can be computed by integrating their size distribution   starting from the smallest activated size. Following the derivations of   [28] and [29]   this can be expressed in terms of critical supersaturations of each   size distribution mode S_ci and the maximum supersaturation S_max.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nN_act = sum_i = 1^I N_ifrac12bigg1 - mathrmerf(u_i)bigg\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nM_act = sum_i = 1^I M_ifrac12bigg1 - mathrmerfbigg(u_i - frac3 sqrt22 ln(sigma_i)bigg)bigg\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"M_i is the average molar mass of aerosol particles in mode i,\nu_i is given in equation (15) in [29].","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"beginequation\nu_i = frac23sqrt2  ln(sigma_i) lnbigg( fracS_ciS_max bigg)\nendequation","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"where:","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"S_ci is the mode critical supersaturation,\nS_max is the maximum supersaturation.","category":"page"},{"location":"AerosolActivation/#Example-figures","page":"Aerosol activation","title":"Example figures","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"import Plots\n\nimport CloudMicrophysics\nimport CLIMAParameters\nimport Thermodynamics\n\nconst PL = Plots\nconst AM = CloudMicrophysics.AerosolModel\nconst AA = CloudMicrophysics.AerosolActivation\nconst CMP = CloudMicrophysics.Parameters\nconst TD = Thermodynamics\n\nFT = Float64\ntps = CMP.ThermodynamicsParameters(FT)\naip = CMP.AirProperties(FT)\nap = CMP.AerosolActivationParameters(FT)\n\n# Atmospheric conditions\nT = 294.0         # air temperature\np = 1000.0 *1e2   # air pressure\nw = 0.5           # vertical velocity\n\n# We need the phase partition here only so that we can compute the\n# moist R_m and cp_m in aerosol activation module.\n# We are assuming here saturated conditions and no liquid water or ice.\n# This is consistent with the assumptions of the aerosol activation scheme.\np_vs = TD.saturation_vapor_pressure(tps, T, TD.Liquid())\nq_vs = 1 / (1 - TD.Parameters.molmass_ratio(tps) * (p_vs - p) / p_vs)\nq = TD.PhasePartition(q_vs, 0.0, 0.0)\n\n# Abdul-Razzak and Ghan 2000 Figure 1 mode 1\n# https://doi.org/10.1029/1999JD901161\nr_dry = 0.05 * 1e-6 # um\nstdev = 2.0         # -\nN_1 = 100.0 * 1e6   # 1/m3\n\n# Sulfate - universal parameters\nsulfate = CMP.Sulfate(FT)\n\nn_components_1 = 1\nmass_fractions_1 = (1.0,)\npaper_mode_1_B = AM.Mode_B(\n    r_dry,\n    stdev,\n    N_1,\n    mass_fractions_1,\n    (sulfate.Ïµ,),\n    (sulfate.Ï,),\n    (sulfate.M,),\n    (sulfate.Î½,),\n    (sulfate.Ï,),\n    n_components_1,\n)\n\nN_2_range = range(0, stop=5000 * 1e6, length=100)\nN_act_frac_B = Vector{Float64}(undef, 100)\n\nit = 1\nfor N_2 in N_2_range\n        n_components_2 = 1\n        mass_fractions_2 = (1.0,)\n        paper_mode_2_B = AM.Mode_B(\n          r_dry,\n          stdev,\n          N_2,\n          mass_fractions_2,\n          (sulfate.Ïµ,),\n          (sulfate.Ï,),\n          (sulfate.M,),\n          (sulfate.Î½,),\n          (sulfate.Ï,),\n          n_components_2,\n        )\n        AD_B =  AM.AerosolDistribution((paper_mode_1_B, paper_mode_2_B))\n        N_act_frac_B[it] = AA.N_activated_per_mode(ap, AD_B, aip, tps, T, p, w, q)[1] / N_1\n        global it += 1\nend\n\n# data read from Fig 1 in Abdul-Razzak and Ghan 2000\n# using https://automeris.io/WebPlotDigitizer/\ninclude(\"plots/ARGdata.jl\")\n\nPL.plot(N_2_range * 1e-6, N_act_frac_B, label=\"CliMA-B\", xlabel=\"Mode 2 aerosol number concentration [1/cm3]\", ylabel=\"Mode 1 number fraction activated\")\nPL.scatter!(Fig1_x_obs, Fig1_y_obs, markercolor = :black, label=\"paper observations\")\nPL.plot!(Fig1_x_param, Fig1_y_param, linecolor = :black, label=\"paper parameterization\")\n\nPL.savefig(\"Abdul-Razzak_and_Ghan_fig_1.svg\")","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"(Image: )","category":"page"},{"location":"AerosolActivation/#Example-of-Aerosol-Activation-from-ARG2000","page":"Aerosol activation","title":"Example of Aerosol Activation from ARG2000","text":"","category":"section"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"The figures below have been reproduced from [29] using the aerosol activation parameterization implemented in this project.","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"include(\"plots/ARGplots.jl\")\nmake_ARG_figX(2)\nmake_ARG_figX(3)\nmake_ARG_figX(4)\nmake_ARG_figX(5)","category":"page"},{"location":"AerosolActivation/","page":"Aerosol activation","title":"Aerosol activation","text":"(Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"#CloudMicrophysics.jl","page":"Home","title":"CloudMicrophysics.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The CloudMicrophysics.jl is a library of bulk cloud microphysics and aerosol schemes.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The goal of a cloud microphysics scheme is to represent the micro-scale processes   leading to the formation of clouds and precipitation. Bulk microphysics schemes represent overall properties of cloud and precipitation particles,   instead of solving for the evolution of individual cloud droplets or ice crystals. Bulk schemes typically consider different somewhat arbitrary water categories   such as cloud water, cloud ice, rain and snow. They then predict total mass and (optionally) number concentration of particles in each category. A scheme that predicts the total mass of particles per category is called 1-moment,   because the total mass of particles is proportional to the 3rd moment of the particle size distribution. A scheme that predicts the total mass and number concentration of particles per category is called 2-moment,   because the predicted quantities are proportional to the 3rd and 0th moment of the particle size distribution. Aerosol particles serve as nuclei for forming cloud droplets and ice crystals. Additional schemes are needed to predict how many cloud droplets or ice crystals   form for a given population of aerosol particles, when using a 2-moment microphysics scheme.","category":"page"},{"location":"","page":"Home","title":"Home","text":"So far CloudMicrophysics.jl includes:","category":"page"},{"location":"","page":"Home","title":"Home","text":"0-moment scheme that instantly removes the precipitable cloud condensate,\n1-moment scheme for warm rain and mixed-phase clouds (cloud water and ice, ran and snow (aggregate)),\n2-moment scheme for warm rain clouds (cloud water and rain),\ncollection of different 2-moment autoconversion and accretion functions,\nexperimental non-equilibrium cloud formation scheme,\na collection of logistic functions for smooth transitions at thresholds,\naerosol activation scheme,\nice nucleation scheme through water vapor deposition on dust aerosol.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This documentation provides some use examples for different available schemes,   along with derivation notes and links to the literature. The CI tests include unit tests and some very simple performance benchmarks and GPU tests.","category":"page"},{"location":"#Authors","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CloudMicrophysics.jl is being developed by the   Climate Modeling Alliance. (Image: Clima logo)","category":"page"}]
}
